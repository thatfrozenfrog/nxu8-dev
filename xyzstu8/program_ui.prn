RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   1 
 Source File: program_ui.asm
 Object File: program_ui.obj
 Date  : 2024/09/12 Thu.[15:50]
 Title : 
## Loc. Object                   Line   Source Statements

                                    1   type(ML620906)
                                    2   model	large
                                    3   romwindow 0, 0cfffh
                                    4   
                                    5   ;This file is already configured for fx
                                        -991cnx.
                                    6   ;Modify the cseg, tseg and EQU directiv
                                        es for other models.
                                    7   ;label _program_main is the entry point
                                         of the core.
                                    8   
    = 0000D110H                     9   key_identifier	EQU	0D110h
    = 0000D112H                    10   submode	EQU	0D112h
    = 0000D113H                    11   screen_state	EQU	0D113h
    = 0000D116H                    12   cursor_blink	EQU	0D116h
    = 0000D158H                    13   cursor_scr_pos	EQU	0D158h
    = 0000D168H                    14   cursor_size	EQU	0D168h
    = 0000D137H                    15   font_size	EQU	0D137h
    = 0000D138H                    16   font_color	EQU	0D138h
    = 0000D139H                    17   curr_buffer	EQU	0D139h
    = 0000D150H                    18   last_ki_ko	EQU	0D150h
    = 0000D155H                    19   cursor_pos	EQU	0D155h
    = 0000DDD4H                    20   screen_buf	EQU	0DDD4h
                                   21   
                                   22   ;set to 0 when opening the menu.
    = 0000D142H                    23   undefined1	EQU	0D142h
    = 0000D164H                    24   undefined2	EQU	0D164h
    = 0000D165H                    25   undefined3	EQU	0D165h
                                   26   
    = 0000775CH                    27   keycode_comp	EQU	0775Ch
    = 00003BF2H                    28   keycode_shift	EQU	03BF2h
    = 0000198EH                    29   keycode_alpha	EQU	0198Eh
                                   30   
                                   31   ;settings for program mode
    = 0000D16BH                    32   inst_insert	EQU	0D16Bh		
                                        	;0-overwrite 1-move till FF ins
                                        truction 2-move till end addr
    = 0000D100H                    33   start_addr	EQU	0D100h
    = 0000D102H                    34   end_addr	EQU	0D102h
                                   35   
  --------------------------       36   cseg	#2	at	0BEF0h
                                   37   
02:BEF0                            38   _program:
02:BEF0 CE-F8                      39   	push	lr
02:BEF2 6E-F4                      40   	push	xr4
02:BEF4 00 00                      41   	mov	r0,	#0
02:BEF6 12-92 00-D1                42   	l	er2,	start_addr
02:BEFA 01-F2 02-BF                43   	bl	_program_mode
02:BEFE 2E-F4                      44   	pop	xr4
02:BF00 8E-F2                      45   	pop	pc
                                   46   
                                   47   ;fp-2:current line fp-10 - fp-4:pointer
                                         to inst line 1 to 4 fp-12:current deco
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   2 
 Title : 
## Loc. Object                   Line   Source Statements

                                        ding base
                                   48   ;hex mode: fp-2:current addr fp-4: base
                                         addr fp-5:input sign fp-6:input buffer
                                   49   ;parameters: r0-normal mode or addr sel
                                        ect mode er2-initial addr
                                   50   ;return value: er2-current addr(only in
                                         addr select mode)
02:BF02                            51   _program_mode:
02:BF02 CE-F8                      52   	push	lr
02:BF04 7E-F8                      53   	push	qr8
02:BF06 6E-F4                      54   	push	xr4
02:BF08 4E-F0                      55   	push	r0
02:BF0A 1A-AE                      56   	mov	fp,	sp
02:BF0C E0 E1                      57   	add	sp,	#-20h
02:BF0E 1A-AC                      58   	mov	bp,	sp
                                   59   
02:BF10 00 E0                      60   	mov	er0,	#0
02:BF12 FE B0                      61   	st	er0,	-02[fp]
02:BF14 01 00                      62   	mov	r0,	#1
02:BF16 11-90 12-D1                63   	st	r0,	submode
02:BF1A 25-F0                      64   	mov	er0,	er2
02:BF1C F4 B0                      65   	st	er0,	-0Ch[fp]
02:BF1E 00-F2 5C-C3                66   	gjmp	_$repaint
                                   67   
02:BF22                            68   _$main_loop:
02:BF22 00 E0                      69   	mov	er0,	#0
02:BF24 C3-90                      70   	st	er0,	[bp]
02:BF26 C5-F0                      71   	mov	er0,	bp
02:BF28 01-F2 26-D1                72   	bl	_get_keycode_fixed
02:BF2C 00-80                      73   	mov	r0,	r0
02:BF2E 04 C8                      74   	bne	_$has_key_press
02:BF30 00 E0                      75   	mov	er0,	#0
02:BF32 13-90 50-D1                76   	st	er0,	last_ki_ko
02:BF36 F5 CE                      77   	bal	_$main_loop
                                   78   
02:BF38                            79   _$has_key_press:
02:BF38 C2-90                      80   	l	er0,	[bp]
02:BF3A 12-92 50-D1                81   	l	er2,	last_ki_ko
02:BF3E F1 C8                      82   	bne	_$main_loop
02:BF40 13-90 50-D1                83   	st	er0,	last_ki_ko
02:BF44 C5-F0                      84   	mov	er0,	bp
02:BF46 A1-A0 10-D1                85   	tb	key_identifier.2
02:BF4A 03 C9                      86   	beq	_$L23
02:BF4C 8E 02                      87   	mov	r2,	#byte1 keycode_
                                        alpha
02:BF4E 19 03                      88   	mov	r3,	#byte2 keycode_
                                        alpha
02:BF50 08 CE                      89   	bal	_$L25
02:BF52                            90   _$L23:
02:BF52 B1-A0 10-D1                91   	tb	key_identifier.3
02:BF56 03 C9                      92   	beq	_$L24
02:BF58 F2 02                      93   	mov	r2,	#byte1 keycode_
                                        shift
02:BF5A 3B 03                      94   	mov	r3,	#byte2 keycode_
                                        shift
02:BF5C 02 CE                      95   	bal	_$L25
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   3 
 Title : 
## Loc. Object                   Line   Source Statements

02:BF5E                            96   _$L24:
02:BF5E 5C 02                      97   	mov	r2,	#byte1 keycode_
                                        comp
02:BF60 77 03                      98   	mov	r3,	#byte2 keycode_
                                        comp
02:BF62                            99   _$L25:
02:BF62 01-F2 DC-52               100   	bl	_convert_keycode
02:BF66 28 70                     101   	cmp	r0,	#28h
02:BF68 FC 51                     102   	cmpc	r1,	#0FCh
02:BF6A 02-C8                     103   	gbeq	_$alpha
02:BF6C 00-F2 DC-C1               >>>   
02:BF70 29 70                     104   	cmp	r0,	#29h
02:BF72 FC 51                     105   	cmpc	r1,	#0FCh
02:BF74 02-C8                     106   	gbeq	_$shift
02:BF76 00-F2 C6-C1               >>>   
02:BF7A 05-F2                     107   	mov	er2,	er0
02:BF7C 00 00                     108   	mov	r0,	#0
02:BF7E 11-90 10-D1               109   	st	r0,	key_identifier
02:BF82 01-F0 86-87               110   	bl	_render_stat_bar
02:BF86 81-A0 12-D1               111   	tb	submode.0
02:BF8A 31 C9                     112   	beq	_$hex_mode
02:BF8C FC 73                     113   	cmp	r3,	#0FCh
02:BF8E C9 C8                     114   	bne	_$main_loop
02:BF90 1C 72                     115   	cmp	r2,	#1Ch
02:BF92 02-C8                     116   	gbeq	_$inst_up
02:BF94 00-F2 10-C3               >>>   
02:BF98 1D 72                     117   	cmp	r2,	#1Dh
02:BF9A 02-C8                     118   	gbeq	_$inst_down
02:BF9C 00-F2 1C-C3               >>>   
02:BFA0 1E 72                     119   	cmp	r2,	#1Eh
02:BFA2 02-C8                     120   	gbeq	_$inst_right
02:BFA4 00-F2 B6-C2               >>>   
02:BFA8 20 72                     121   	cmp	r2,	#20h
02:BFAA 02-C8                     122   	gbeq	_$base_up
02:BFAC 00-F2 F8-C2               >>>   
02:BFB0 21 72                     123   	cmp	r2,	#21h
02:BFB2 02-C8                     124   	gbeq	_$base_down
02:BFB4 00-F2 FC-C2               >>>   
02:BFB8 22 72                     125   	cmp	r2,	#22h
02:BFBA 02-C8                     126   	gbeq	_$switch_mode_inst
02:BFBC 00-F2 2E-C2               >>>   
02:BFC0 2D 72                     127   	cmp	r2,	#2Dh
02:BFC2 02-C8                     128   	gbeq	_$exe
02:BFC4 00-F2 F2-C1               >>>   
02:BFC8                           129   _$L34:
02:BFC8 01 72                     130   	cmp	r2,	#1
02:BFCA 55 C9                     131   	beq	_$optn
02:BFCC 27 72                     132   	cmp	r2,	#27h
02:BFCE 02-C8                     133   	gbeq	_$shutdown
02:BFD0 00-F2 BE-C1               >>>   
02:BFD4 24 72                     134   	cmp	r2,	#24h
02:BFD6 A5 C8                     135   	bne	_$main_loop
02:BFD8 E0-90                     136   	l	r0,	[fp]
02:BFDA A3 C8                     137   	bne	_$main_loop
02:BFDC 01-F2 E2-D0               138   	bl	_menu_handle
02:BFE0 00 70                     139   	cmp	r0,	#0
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   4 
 Title : 
## Loc. Object                   Line   Source Statements

02:BFE2 02-C9                     140   	gbne	_$main_ret
02:BFE4 00-F2 E0-C4               >>>   
02:BFE8 01-F0 04-87               141   	bl	_render_DDD4
02:BFEC 9A CE                     142   	bal	_$main_loop
                                  143   
02:BFEE                           144   _$hex_mode:
02:BFEE 30 E0                     145   	mov	er0,	#30h
02:BFF0 07-F2                     146   	cmp	er2,	er0
02:BFF2 97 C1                     147   	blt	_$main_loop
02:BFF4 3F E0                     148   	mov	er0,	#3Fh
02:BFF6 07-F2                     149   	cmp	er2,	er0
02:BFF8 02-C2                     150   	gble	_$hex_type
02:BFFA 00-F2 56-C2               >>>   
02:BFFE FC 73                     151   	cmp	r3,	#0FCh
02:C000 90 C8                     152   	bne	_$main_loop
02:C002 1C 72                     153   	cmp	r2,	#1Ch
02:C004 02-C8                     154   	gbeq	_$hex_up
02:C006 00-F2 78-C2               >>>   
02:C00A 1D 72                     155   	cmp	r2,	#1Dh
02:C00C 02-C8                     156   	gbeq	_$hex_down
02:C00E 00-F2 7C-C2               >>>   
02:C012 1E 72                     157   	cmp	r2,	#1Eh
02:C014 02-C8                     158   	gbeq	_$hex_right
02:C016 00-F2 84-C2               >>>   
02:C01A 1F 72                     159   	cmp	r2,	#1Fh
02:C01C 02-C8                     160   	gbeq	_$hex_left
02:C01E 00-F2 80-C2               >>>   
02:C022 20 72                     161   	cmp	r2,	#20h
02:C024 02-C8                     162   	gbeq	_$hex_pageup
02:C026 00-F2 88-C2               >>>   
02:C02A 21 72                     163   	cmp	r2,	#21h
02:C02C 02-C8                     164   	gbeq	_$hex_pagedown
02:C02E 00-F2 8E-C2               >>>   
02:C032 23 72                     165   	cmp	r2,	#23h
02:C034 02-C8                     166   	gbeq	_$switch_mode_hex
02:C036 00-F2 44-C2               >>>   
02:C03A 2D 72                     167   	cmp	r2,	#2Dh
02:C03C 02-C8                     168   	gbeq	_$hex_exe
02:C03E 00-F2 16-C2               >>>   
02:C042 C2 CE                     169   	bal	_$L34
                                  170   
02:C044                           171   _$optn_ret:
02:C044 10-90 12-D1               172   	l	r0,	submode
02:C048 01 70                     173   	cmp	r0,	#1
02:C04A 02-C9                     174   	gbne	_$hex_repaint
02:C04C 00-F2 68-C4               >>>   
02:C050 76 B0                     175   	l	er0,	-0Ah[fp]
02:C052 00-F2 5C-C3               176   	gjmp	_$repaint
                                  177   
02:C056                           178   _$new_inst:
02:C056 10-90 6B-D1               179   	l	r0,	inst_insert
02:C05A 03 C9                     180   	beq	_$L45
02:C05C 2E-F0                     181   	pop	xr0
02:C05E 01-F2 EA-C4               182   	bl	_branch_fix
02:C062                           183   _$L45:
02:C062 10-90 12-D1               184   	l	r0,	submode
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   5 
 Title : 
## Loc. Object                   Line   Source Statements

02:C066 01 70                     185   	cmp	r0,	#1
02:C068 02-C8                     186   	gbeq	_$inst_down
02:C06A 00-F2 1C-C3               >>>   
02:C06E 40-80                     187   	mov	r0,	r4
02:C070 00 01                     188   	mov	r1,	#0
02:C072 00-F2 92-C2               189   	gjmp	_$change_addr
                                  190   
02:C076                           191   _$optn:
02:C076 E0-90                     192   	l	r0,	[fp]
02:C078 02-C9                     193   	gbne	_$main_loop
02:C07A 00-F2 22-BF               >>>   
02:C07E 03 00                     194   	mov	r0,	#3
02:C080 4E-F0                     195   	push	r0
02:C082 E4 00                     196   	mov	r0,	#byte1 offset _
                                        optn_table
02:C084 D5 01                     197   	mov	r1,	#byte2 offset _
                                        optn_table
02:C086 5E-F0                     198   	push	er0
02:C088 10-90 12-D1               199   	l	r0,	submode
02:C08C 01 70                     200   	cmp	r0,	#1
02:C08E 05 C8                     201   	bne	_$L102
02:C090 7E D0                     202   	l	r0,	-02[fp]
02:C092 01-F2 D8-D0               203   	bl	_get_line_pointer
02:C096 02-92                     204   	l	er2,	[er0]
02:C098 01 CE                     205   	bal	_$L103
02:C09A                           206   _$L102:
02:C09A 7E B2                     207   	l	er2,	-02[fp]
02:C09C                           208   _$L103:
02:C09C C5-F0                     209   	mov	er0,	bp
02:C09E 01-F2 42-C5               210   	bl	_optn_menu
02:C0A2 04 E1                     211   	add	sp,	#4
02:C0A4 00-80                     212   	mov	r0,	r0
02:C0A6 CE C9                     213   	beq	_$optn_ret
02:C0A8 04 70                     214   	cmp	r0,	#4
02:C0AA 37 C2                     215   	bgt	_$L48
02:C0AC 00-84                     216   	mov	r4,	r0
02:C0AE 10-90 12-D1               217   	l	r0,	submode
02:C0B2 01 70                     218   	cmp	r0,	#1
02:C0B4 05 C8                     219   	bne	_$L116
02:C0B6 7E D0                     220   	l	r0,	-02[fp]
02:C0B8 01-F2 D8-D0               221   	bl	_get_line_pointer
02:C0BC 02-90                     222   	l	er0,	[er0]
02:C0BE 01 CE                     223   	bal	_$L117
02:C0C0                           224   _$L116:
02:C0C0 7E B0                     225   	l	er0,	-02[fp]
02:C0C2                           226   _$L117:
02:C0C2 0A-F0                     227   	lea	[er0]
02:C0C4 10-92 6B-D1               228   	l	r2,	inst_insert
02:C0C8 1B C9                     229   	beq	_$L42
02:C0CA 01 72                     230   	cmp	r2,	#1
02:C0CC 0B C8                     231   	bne	_$L43
02:C0CE 05-F2                     232   	mov	er2,	er0
02:C0D0 12-96 02-D1               233   	l	er6,	end_addr
02:C0D4                           234   _$loop8:
02:C0D4 00-95                     235   	l	r5,	[er0]
02:C0D6 01-F2 66-D1               236   	bl	_ins_length
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   6 
 Title : 
## Loc. Object                   Line   Source Statements

02:C0DA FF 75                     237   	cmp	r5,	#0FFh
02:C0DC 06 C9                     238   	beq	_$L44
02:C0DE 67-F0                     239   	cmp	er0,	er6		
                                        	;in case no FF instruction is f
                                        ound
02:C0E0 F9 C1                     240   	blt	_$loop8
02:C0E2 03 CE                     241   	bal	_$L44
02:C0E4                           242   _$L43:
02:C0E4 05-F2                     243   	mov	er2,	er0
02:C0E6 12-90 02-D1               244   	l	er0,	end_addr
02:C0EA                           245   _$L44:
02:C0EA 5E-F0                     246   	push	er0
02:C0EC 28-80                     247   	sub	r0,	r2
02:C0EE 39-81                     248   	subc	r1,	r3
02:C0F0 5E-F0                     249   	push	er0
02:C0F2 25-F0                     250   	mov	er0,	er2
02:C0F4 00 05                     251   	mov	r5,	#0
02:C0F6 46-F0                     252   	add	er0,	er4
02:C0F8 01-F0 3A-9A               253   	bl	_smart_memcpy
02:C0FC 02 E1                     254   	add	sp,	#2
02:C0FE CE-F1                     255   	push	ea
02:C100                           256   _$L42:
02:C100 C2-96                     257   	l	er6,	[bp]
02:C102 02 B8                     258   	l	er8,	02[bp]
02:C104 51-96                     259   	st	r6,	[ea+]
02:C106 01 74                     260   	cmp	r4,	#1
02:C108 A6 C9                     261   	beq	_$new_inst
02:C10A 51-97                     262   	st	r7,	[ea+]
02:C10C 02 74                     263   	cmp	r4,	#2
02:C10E A3 C9                     264   	beq	_$new_inst
02:C110 51-98                     265   	st	r8,	[ea+]
02:C112 03 74                     266   	cmp	r4,	#3
02:C114 A0 C9                     267   	beq	_$new_inst
02:C116 31-99                     268   	st	r9,	[ea]
02:C118 9E CE                     269   	bal	_$new_inst
02:C11A                           270   _$L48:
02:C11A 05 70                     271   	cmp	r0,	#5
02:C11C 0E C2                     272   	bgt	_$L49
                                  273   ;goto
02:C11E C2-90                     274   	l	er0,	[bp]
02:C120 10-92 12-D1               275   	l	r2,	submode
02:C124 01 72                     276   	cmp	r2,	#1
02:C126 05 C8                     277   	bne	_$L53
02:C128 F4 B0                     278   	st	er0,	-0Ch[fp]
02:C12A 00 E2                     279   	mov	er2,	#0
02:C12C FE B2                     280   	st	er2,	-02[fp]
02:C12E 00-F2 5C-C3               281   	gjmp	_$repaint
02:C132                           282   _$L53:
02:C132 FE B0                     283   	st	er0,	-02[fp]
02:C134 05-F4                     284   	mov	er4,	er0
02:C136 00-F2 AE-C2               285   	gjmp	_$L33
                                  286   
02:C13A                           287   _$L49:
02:C13A 07 70                     288   	cmp	r0,	#7
02:C13C 33 C2                     289   	bgt	_$L120
02:C13E 00-86                     290   	mov	r6,	r0
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   7 
 Title : 
## Loc. Object                   Line   Source Statements

02:C140 C2-90                     291   	l	er0,	[bp]
02:C142 02 B2                     292   	l	er2,	02[bp]
02:C144 04 B4                     293   	l	er4,	04[bp]
02:C146 5E-F4                     294   	push	er4
02:C148 01-F0 3A-9A               295   	bl	_smart_memcpy
02:C14C 02 E1                     296   	add	sp,	#2
02:C14E 0C-F0 00-D1               297   	lea	start_addr
02:C152 34-98                     298   	l	xr8,	[ea]
02:C154 07 76                     299   	cmp	r6,	#7
02:C156 05 C8                     300   	bne	_$L121
                                  301   ;copy
02:C158 C2-90                     302   	l	er0,	[bp]
02:C15A 04 B2                     303   	l	er2,	04[bp]
02:C15C 06-F2                     304   	add	er2,	er0
02:C15E 35-90                     305   	st	xr0,	[ea]
02:C160 16 CE                     306   	bal	_$L122
02:C162                           307   _$L121:
                                  308   ;move
                                  309   ;fill original with nop
02:C162 02 B0                     310   	l	er0,	02[bp]
02:C164 C2-92                     311   	l	er2,	[bp]
02:C166 04 B4                     312   	l	er4,	04[bp]
02:C168 27-F0                     313   	cmp	er0,	er2
02:C16A 05 C0                     314   	bge	_$L123
02:C16C 06-F4                     315   	add	er4,	er0
02:C16E 47-F2                     316   	cmp	er2,	er4
02:C170 07 C0                     317   	bge	_$L124
02:C172 25-F4                     318   	mov	er4,	er2
02:C174 05 CE                     319   	bal	_$L124
02:C176                           320   _$L123:
02:C176 46-F2                     321   	add	er2,	er4
02:C178 06-F4                     322   	add	er4,	er0
02:C17A 27-F0                     323   	cmp	er0,	er2
02:C17C 01 C0                     324   	bge	_$L124
02:C17E 25-F0                     325   	mov	er0,	er2
02:C180                           326   _$L124:
02:C180 08-84                     327   	sub	r4,	r0
02:C182 19-85                     328   	subc	r5,	r1
02:C184 5E-F4                     329   	push	er4
02:C186 F6 02                     330   	mov	r2,	#0F6h
02:C188 01-F0 A8-F1               331   	bl	_memset
02:C18C 02 E1                     332   	add	sp,	#2
02:C18E                           333   _$L122:
02:C18E 02 B0                     334   	l	er0,	02[bp]
02:C190 04 B2                     335   	l	er2,	04[bp]
02:C192 06-F2                     336   	add	er2,	er0
02:C194 C2-94                     337   	l	er4,	[bp]
02:C196 08-84                     338   	sub	r4,	r0
02:C198 19-85                     339   	subc	r5,	r1
02:C19A 01-F2 EA-C4               340   	bl	_branch_fix
02:C19E 35-98                     341   	st	xr8,	[ea]
02:C1A0 00-F2 44-C0               342   	gjmp	_$optn_ret
02:C1A4                           343   _$L120:
02:C1A4 08 70                     344   	cmp	r0,	#8
02:C1A6 02-C9                     345   	gbne	_$optn_ret
02:C1A8 00-F2 44-C0               >>>   
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   8 
 Title : 
## Loc. Object                   Line   Source Statements

                                  346   ;fill
02:C1AC C2-90                     347   	l	er0,	[bp]
02:C1AE 02 B2                     348   	l	er2,	02[bp]
02:C1B0 5E-F2                     349   	push	er2
02:C1B2 04 D2                     350   	l	r2,	04[bp]
02:C1B4 01-F0 A8-F1               351   	bl	_memset
02:C1B8 02 E1                     352   	add	sp,	#2
02:C1BA 00-F2 44-C0               353   	gjmp	_$optn_ret
                                  354   
02:C1BE                           355   _$shutdown:
02:C1BE 01-F0 18-91               356   	bl	_shutdown
02:C1C2 00-F2 22-BF               357   	gjmp	_$main_loop
                                  358   
02:C1C6                           359   _$shift:
02:C1C6 A2-A0 10-D1               360   	rb	key_identifier.2
02:C1CA 10-90 10-D1               361   	l	r0,	key_identifier
02:C1CE 08 40                     362   	xor	r0,	#8
02:C1D0 11-90 10-D1               363   	st	r0,	key_identifier
02:C1D4 01-F0 86-87               364   	bl	_render_stat_bar
02:C1D8 00-F2 22-BF               365   	gjmp	_$main_loop
                                  366   
02:C1DC                           367   _$alpha:
02:C1DC B2-A0 10-D1               368   	rb	key_identifier.3
02:C1E0 10-90 10-D1               369   	l	r0,	key_identifier
02:C1E4 04 40                     370   	xor	r0,	#4
02:C1E6 11-90 10-D1               371   	st	r0,	key_identifier
02:C1EA 01-F0 86-87               372   	bl	_render_stat_bar
02:C1EE 00-F2 22-BF               373   	gjmp	_$main_loop
                                  374   
02:C1F2                           375   _$exe:
02:C1F2 7E D0                     376   	l	r0,	-02[fp]
02:C1F4 01-F2 D8-D0               377   	bl	_get_line_pointer
02:C1F8 02-90                     378   	l	er0,	[er0]
02:C1FA E0-92                     379   	l	r2,	[fp]
02:C1FC 02-C9                     380   	gbne	_$addr_sel_ret
02:C1FE 00-F2 DE-C4               >>>   
02:C202 01-F3 00-10               381   	bl	_program_main
02:C206 00 00                     382   	mov	r0,	#0
02:C208 FE D0                     383   	st	r0,	-02[fp]
02:C20A CE-F1                     384   	push	ea
02:C20C 1E-F0                     385   	pop	er0
02:C20E FF E0                     386   	add	er0,	#-1
02:C210 F4 B0                     387   	st	er0,	-0Ch[fp]
02:C212 00-F2 5C-C3               388   	gjmp	_$repaint
                                  389   
02:C216                           390   _$hex_exe:
02:C216 7E B0                     391   	l	er0,	-02[fp]
02:C218 E0-92                     392   	l	r2,	[fp]
02:C21A 02-C9                     393   	gbne	_$addr_sel_ret
02:C21C 00-F2 DE-C4               >>>   
02:C220 01-F3 00-10               394   	bl	_program_main
02:C224 CE-F1                     395   	push	ea
02:C226 1E-F4                     396   	pop	er4
02:C228 FF E4                     397   	add	er4,	#-1
02:C22A FE B4                     398   	st	er4,	-02[fp]
02:C22C 40 CE                     399   	bal	_$L33
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   9 
 Title : 
## Loc. Object                   Line   Source Statements

                                  400   
02:C22E                           401   _$switch_mode_inst:
02:C22E 02 00                     402   	mov	r0,	#2
02:C230 11-90 12-D1               403   	st	r0,	submode
02:C234 7E D0                     404   	l	r0,	-02[fp]
02:C236 01-F2 D8-D0               405   	bl	_get_line_pointer
02:C23A 02-94                     406   	l	er4,	[er0]
02:C23C FE B4                     407   	st	er4,	-02[fp]
02:C23E 00 E0                     408   	mov	er0,	#0
02:C240 FA B0                     409   	st	er0,	-06[fp]
02:C242 35 CE                     410   	bal	_$L33
                                  411   
02:C244                           412   _$switch_mode_hex:
02:C244 01 00                     413   	mov	r0,	#1
02:C246 11-90 12-D1               414   	st	r0,	submode
02:C24A 7E B0                     415   	l	er0,	-02[fp]
02:C24C F4 B0                     416   	st	er0,	-0Ch[fp]
02:C24E 00 E2                     417   	mov	er2,	#0
02:C250 FE B2                     418   	st	er2,	-02[fp]
02:C252 00-F2 5C-C3               419   	gjmp	_$repaint
                                  420   
02:C256                           421   _$hex_type:
02:C256 20-80                     422   	mov	r0,	r2
02:C258 7B D2                     423   	l	r2,	-05[fp]
02:C25A 05 C8                     424   	bne	_$write
02:C25C FA D0                     425   	st	r0,	-06[fp]
02:C25E 01 00                     426   	mov	r0,	#1
02:C260 FB D0                     427   	st	r0,	-05[fp]
02:C262 00-F2 22-BF               428   	gjmp	_$main_loop
02:C266                           429   _$write:
02:C266 7A D1                     430   	l	r1,	-06[fp]
02:C268 4A-91                     431   	sll	r1,	#4
02:C26A 0F 20                     432   	and	r0,	#0Fh
02:C26C 13-80                     433   	or	r0,	r1
02:C26E 7E B2                     434   	l	er2,	-02[fp]
02:C270 21-90                     435   	st	r0,	[er2]
02:C272 00 00                     436   	mov	r0,	#0
02:C274 FB D0                     437   	st	r0,	-05[fp]
02:C276 06 CE                     438   	bal	_$hex_right
                                  439   
02:C278                           440   _$hex_up:
02:C278 78 E0                     441   	mov	er0,	#-8
02:C27A 0B CE                     442   	bal	_$change_addr
                                  443   
02:C27C                           444   _$hex_down:
02:C27C 08 E0                     445   	mov	er0,	#8
02:C27E 09 CE                     446   	bal	_$change_addr
                                  447   
02:C280                           448   _$hex_left:
02:C280 7F E0                     449   	mov	er0,	#-1
02:C282 07 CE                     450   	bal	_$change_addr
                                  451   
02:C284                           452   _$hex_right:
02:C284 01 E0                     453   	mov	er0,	#1
02:C286 05 CE                     454   	bal	_$change_addr
                                  455   
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  10 
 Title : 
## Loc. Object                   Line   Source Statements

02:C288                           456   _$hex_pageup:
02:C288 00 00                     457   	mov	r0,	#0
02:C28A FF 01                     458   	mov	r1,	#-1
02:C28C 02 CE                     459   	bal	_$change_addr
                                  460   
02:C28E                           461   _$hex_pagedown:
02:C28E 00 00                     462   	mov	r0,	#0
02:C290 01 01                     463   	mov	r1,	#1
                                  464   
02:C292                           465   _$change_addr:
02:C292 00 04                     466   	mov	r4,	#0
02:C294 FB D4                     467   	st	r4,	-05[fp]
02:C296 7E B4                     468   	l	er4,	-02[fp]
02:C298 06-F4                     469   	add	er4,	er0
02:C29A FE B4                     470   	st	er4,	-02[fp]
02:C29C 7C B0                     471   	l	er0,	-04[fp]
02:C29E 47-F0                     472   	cmp	er0,	er4
02:C2A0 06 C2                     473   	bgt	_$L33
                                  474   
02:C2A2 A0 E0                     475   	add	er0,	#20h
02:C2A4 47-F0                     476   	cmp	er0,	er4
02:C2A6 02-C3                     477   	gbgt	_$hex_repaint
02:C2A8 00-F2 68-C4               >>>   
02:C2AC E8 E4                     478   	add	er4,	#-18h
02:C2AE                           479   _$L33:
02:C2AE F8 24                     480   	and	r4,	#0F8h
02:C2B0 FC B4                     481   	st	er4,	-04[fp]
02:C2B2 00-F2 68-C4               482   	gjmp	_$hex_repaint
                                  483   
02:C2B6                           484   _$inst_right:
02:C2B6 7E D0                     485   	l	r0,	-02[fp]
02:C2B8 01-F2 D8-D0               486   	bl	_get_line_pointer
02:C2BC 02-92                     487   	l	er2,	[er0]
02:C2BE 20-90                     488   	l	r0,	[er2]
02:C2C0 81 E2                     489   	add	er2,	#1
02:C2C2 0C 70                     490   	cmp	r0,	#0Ch
02:C2C4 02-C0                     491   	gblt	_$main_loop
02:C2C6 00-F2 22-BF               >>>   
02:C2CA 10 70                     492   	cmp	r0,	#10h
02:C2CC 0E C1                     493   	blt	_$L35
02:C2CE 26 70                     494   	cmp	r0,	#26h
02:C2D0 02-C0                     495   	gblt	_$main_loop
02:C2D2 00-F2 22-BF               >>>   
02:C2D6 30 70                     496   	cmp	r0,	#30h
02:C2D8 08 C1                     497   	blt	_$L35
02:C2DA FB 70                     498   	cmp	r0,	#0FBh
02:C2DC 02-C0                     499   	gblt	_$main_loop
02:C2DE 00-F2 22-BF               >>>   
02:C2E2 FC 70                     500   	cmp	r0,	#0FCh
02:C2E4 02-C3                     501   	gbgt	_$main_loop
02:C2E6 00-F2 22-BF               >>>   
02:C2EA                           502   _$L35:
02:C2EA 20-90                     503   	l	r0,	[er2]
02:C2EC 81 E2                     504   	add	er2,	#1
02:C2EE 20-91                     505   	l	r1,	[er2]
02:C2F0 F4 B0                     506   	st	er0,	-0Ch[fp]
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  11 
 Title : 
## Loc. Object                   Line   Source Statements

02:C2F2 00 E2                     507   	mov	er2,	#0
02:C2F4 FE B2                     508   	st	er2,	-02[fp]
02:C2F6 32 CE                     509   	bal	_$repaint
                                  510   
02:C2F8                           511   _$base_up:
02:C2F8 7F E2                     512   	mov	er2,	#-1
02:C2FA 01 CE                     513   	bal	_$L30
                                  514   
02:C2FC                           515   _$base_down:
02:C2FC 01 E2                     516   	mov	er2,	#1
02:C2FE                           517   _$L30:
02:C2FE 7E D0                     518   	l	r0,	-02[fp]
02:C300 01-F2 D8-D0               519   	bl	_get_line_pointer
02:C304 02-90                     520   	l	er0,	[er0]
02:C306 26-F0                     521   	add	er0,	er2
02:C308 F4 B0                     522   	st	er0,	-0Ch[fp]
02:C30A 00 E2                     523   	mov	er2,	#0
02:C30C FE B2                     524   	st	er2,	-02[fp]
02:C30E 26 CE                     525   	bal	_$repaint
                                  526   
02:C310                           527   _$inst_up:
02:C310 7E D0                     528   	l	r0,	-02[fp]
02:C312 0B C9                     529   	beq	_$inst_page_up
02:C314 FF 10                     530   	add	r0,	#-1
02:C316 FE D0                     531   	st	r0,	-02[fp]
02:C318 76 B0                     532   	l	er0,	-0Ah[fp]
02:C31A 20 CE                     533   	bal	_$repaint
                                  534   
02:C31C                           535   _$inst_down:
02:C31C 7E D0                     536   	l	r0,	-02[fp]
02:C31E 03 70                     537   	cmp	r0,	#3
02:C320 1C C0                     538   	bge	_$inst_page_down
02:C322 01 10                     539   	add	r0,	#1
02:C324 FE D0                     540   	st	r0,	-02[fp]
02:C326 76 B0                     541   	l	er0,	-0Ah[fp]
02:C328 19 CE                     542   	bal	_$repaint
                                  543   
02:C32A                           544   _$inst_page_up:
02:C32A 76 B4                     545   	l	er4,	-0Ah[fp]
02:C32C 74 B0                     546   	l	er0,	-0Ch[fp]
02:C32E 07-F4                     547   	cmp	er4,	er0
02:C330 07 C3                     548   	ble	_$renew_base
02:C332                           549   _$loop2:
02:C332 05-F8                     550   	mov	er8,	er0
02:C334 01-F2 66-D1               551   	bl	_ins_length
02:C338 47-F0                     552   	cmp	er0,	er4
02:C33A FB C1                     553   	blt	_$loop2
02:C33C 85-F0                     554   	mov	er0,	er8
02:C33E 0E CE                     555   	bal	_$repaint
02:C340                           556   _$renew_base:
02:C340 7C E6                     557   	mov	er6,	#-4
02:C342                           558   _$loop3:
02:C342 45-F0                     559   	mov	er0,	er4
02:C344 66-F0                     560   	add	er0,	er6
02:C346 05-F8                     561   	mov	er8,	er0
02:C348 81 E6                     562   	add	er6,	#1
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  12 
 Title : 
## Loc. Object                   Line   Source Statements

02:C34A 04 C9                     563   	beq	_$L29
02:C34C 01-F2 66-D1               564   	bl	_ins_length
02:C350 47-F0                     565   	cmp	er0,	er4
02:C352 F7 C8                     566   	bne	_$loop3
02:C354                           567   _$L29:
02:C354 85-F0                     568   	mov	er0,	er8
02:C356 F4 B0                     569   	st	er0,	-0Ch[fp]
02:C358 01 CE                     570   	bal	_$repaint
                                  571   
02:C35A                           572   _$inst_page_down:
02:C35A 78 B0                     573   	l	er0,	-08[fp]
                                  574   
                                  575   ;er0-pointer to the first instruction
02:C35C                           576   _$repaint:
02:C35C 0A E2                     577   	mov	er2,	#0Ah
02:C35E 11-92 37-D1               578   	st	r2,	font_size
02:C362 11-93 38-D1               579   	st	r3,	font_color
02:C366 01 02                     580   	mov	r2,	#1
02:C368 11-92 39-D1               581   	st	r2,	curr_buffer
02:C36C 05-F4                     582   	mov	er4,	er0
02:C36E 10 07                     583   	mov	r7,	#10h
02:C370 00 E8                     584   	mov	er8,	#0
02:C372 01-F0 00-7F               585   	bl	_clear_DDD4
02:C376                           586   _$loop:
02:C376 CA-F0                     587   	lea	[bp]
02:C378 50-80                     588   	mov	r0,	r5
02:C37A 01-F2 92-24               589   	bl	_hex_byte
02:C37E 53-90                     590   	st	er0,	[ea+]
02:C380 40-80                     591   	mov	r0,	r4
02:C382 01-F2 92-24               592   	bl	_hex_byte
02:C386 53-90                     593   	st	er0,	[ea+]
02:C388 00 00                     594   	mov	r0,	#0
02:C38A 31-90                     595   	st	r0,	[ea]
02:C38C 00 06                     596   	mov	r6,	#0
02:C38E 65-F0                     597   	mov	er0,	er6
02:C390 C5-F2                     598   	mov	er2,	bp
02:C392 01-F0 1E-82               599   	bl	_line_print
02:C396 80-80                     600   	mov	r0,	r8
02:C398 01-F2 D8-D0               601   	bl	_get_line_pointer
02:C39C 03-94                     602   	st	er4,	[er0]
                                  603   
02:C39E 40-90                     604   	l	r0,	[er4]
02:C3A0 0C 70                     605   	cmp	r0,	#0Ch
02:C3A2 10 C1                     606   	blt	_$L31
02:C3A4 10 70                     607   	cmp	r0,	#10h
02:C3A6 08 C1                     608   	blt	_$L36
02:C3A8 26 70                     609   	cmp	r0,	#26h
02:C3AA 0C C1                     610   	blt	_$L31
02:C3AC 30 70                     611   	cmp	r0,	#30h
02:C3AE 04 C1                     612   	blt	_$L36
02:C3B0 FB 70                     613   	cmp	r0,	#0FBh
02:C3B2 08 C1                     614   	blt	_$L31
02:C3B4 FC 70                     615   	cmp	r0,	#0FCh
02:C3B6 06 C2                     616   	bgt	_$L31
02:C3B8                           617   _$L36:
02:C3B8 8D 02                     618   	mov	r2,	#8Dh
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  13 
 Title : 
## Loc. Object                   Line   Source Statements

02:C3BA 00 03                     619   	mov	r3,	#0
02:C3BC 65-F0                     620   	mov	er0,	er6
02:C3BE B8 00                     621   	mov	r0,	#0B8h
02:C3C0 01-F0 F6-82               622   	bl	_char_print
                                  623   
02:C3C4                           624   _$L31:
02:C3C4 45-F0                     625   	mov	er0,	er4
02:C3C6 C5-F2                     626   	mov	er2,	bp
02:C3C8 01-F2 B8-D1               627   	bl	_decode_ins
02:C3CC 05-FA                     628   	mov	er10,	er0
02:C3CE 7E D0                     629   	l	r0,	-02[fp]
02:C3D0 87-80                     630   	cmp	r0,	r8
02:C3D2 03 C8                     631   	bne	_$L22
02:C3D4 04 00                     632   	mov	r0,	#4
02:C3D6 11-90 38-D1               633   	st	r0,	font_color
02:C3DA                           634   _$L22:
02:C3DA 65-F0                     635   	mov	er0,	er6
02:C3DC 60 00                     636   	mov	r0,	#60h
02:C3DE C5-F2                     637   	mov	er2,	bp
02:C3E0 01-F0 1E-82               638   	bl	_line_print
02:C3E4 00 00                     639   	mov	r0,	#0
02:C3E6 11-90 38-D1               640   	st	r0,	font_color
02:C3EA 20 06                     641   	mov	r6,	#20h
02:C3EC                           642   _$loop1:
02:C3EC CA-F0                     643   	lea	[bp]
02:C3EE 40-90                     644   	l	r0,	[er4]
02:C3F0 01-F2 92-24               645   	bl	_hex_byte
02:C3F4 51-90                     646   	st	r0,	[ea+]
02:C3F6 51-91                     647   	st	r1,	[ea+]
02:C3F8 31-99                     648   	st	r9,	[ea]
02:C3FA 65-F0                     649   	mov	er0,	er6
02:C3FC 0E 16                     650   	add	r6,	#0Eh
02:C3FE C5-F2                     651   	mov	er2,	bp
02:C400 01-F0 1E-82               652   	bl	_line_print
02:C404 81 E4                     653   	add	er4,	#1
02:C406 A7-F4                     654   	cmp	er4,	er10
02:C408 F1 C1                     655   	blt	_$loop1
                                  656   
02:C40A 0A 17                     657   	add	r7,	#0Ah
02:C40C 01 18                     658   	add	r8,	#1
02:C40E 04 78                     659   	cmp	r8,	#4
02:C410 B2 C1                     660   	blt	_$loop
                                  661   
02:C412                           662   _$paint_submode:
02:C412 81-A0 12-D1               663   	tb	submode.0
02:C416 03 C9                     664   	beq	_$L26
02:C418 04 00                     665   	mov	r0,	#4
02:C41A 11-90 38-D1               666   	st	r0,	font_color
02:C41E                           667   _$L26:
02:C41E CA-F0                     668   	lea	[bp]
02:C420 C8 02                     669   	mov	r2,	#byte1 offset _
                                        submode_0
02:C422 D9 03                     670   	mov	r3,	#byte2 offset _
                                        submode_0
02:C424 01-F2 52-D5               671   	bl	_$L1
02:C428 31-99                     672   	st	r9,	[ea]
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  14 
 Title : 
## Loc. Object                   Line   Source Statements

02:C42A 08 00                     673   	mov	r0,	#08h
02:C42C 01 01                     674   	mov	r1,	#1
02:C42E C5-F2                     675   	mov	er2,	bp
02:C430 01-F0 1E-82               676   	bl	_line_print
02:C434 91-A0 12-D1               677   	tb	submode.1
02:C438 02 C9                     678   	beq	_$L27
02:C43A 04 00                     679   	mov	r0,	#4
02:C43C 01 CE                     680   	bal	_$L28
02:C43E                           681   _$L27:
02:C43E 00 00                     682   	mov	r0,	#0
02:C440                           683   _$L28:
02:C440 11-90 38-D1               684   	st	r0,	font_color
02:C444 CA-F0                     685   	lea	[bp]
02:C446 D4 02                     686   	mov	r2,	#byte1 offset _
                                        submode_1
02:C448 D9 03                     687   	mov	r3,	#byte2 offset _
                                        submode_1
02:C44A 01-F2 52-D5               688   	bl	_$L1
02:C44E 31-99                     689   	st	r9,	[ea]
02:C450 4C 00                     690   	mov	r0,	#4Ch
02:C452 01 01                     691   	mov	r1,	#1
02:C454 C5-F2                     692   	mov	er2,	bp
02:C456 01-F0 1E-82               693   	bl	_line_print
02:C45A 00 00                     694   	mov	r0,	#0
02:C45C 11-90 38-D1               695   	st	r0,	font_color
                                  696   
02:C460 01-F0 04-87               697   	bl	_render_DDD4
                                  698   
02:C464 00-F2 22-BF               699   	gjmp	_$main_loop
                                  700   
02:C468                           701   _$hex_repaint:
02:C468 01-F0 00-7F               702   	bl	_clear_DDD4
02:C46C 01 E0                     703   	mov	er0,	#1
02:C46E 11-90 39-D1               704   	st	r0,	curr_buffer
02:C472 11-91 38-D1               705   	st	r1,	font_color
02:C476 0A 00                     706   	mov	r0,	#0Ah
02:C478 11-90 37-D1               707   	st	r0,	font_size
02:C47C 10 0B                     708   	mov	r11,	#10h
02:C47E 04 07                     709   	mov	r7,	#4
02:C480 7E B4                     710   	l	er4,	-02[fp]
02:C482 7C B8                     711   	l	er8,	-04[fp]
02:C484                           712   _$loop4:
02:C484 CA-F0                     713   	lea	[bp]
02:C486 90-80                     714   	mov	r0,	r9
02:C488 01-F2 92-24               715   	bl	_hex_byte
02:C48C 53-90                     716   	st	er0,	[ea+]
02:C48E 80-80                     717   	mov	r0,	r8
02:C490 01-F2 92-24               718   	bl	_hex_byte
02:C494 53-90                     719   	st	er0,	[ea+]
02:C496 00 00                     720   	mov	r0,	#0
02:C498 31-90                     721   	st	r0,	[ea]
02:C49A C5-F2                     722   	mov	er2,	bp
02:C49C 00 0A                     723   	mov	r10,	#0
02:C49E A5-F0                     724   	mov	er0,	er10
02:C4A0 01-F0 1E-82               725   	bl	_line_print
02:C4A4 3C 0A                     726   	mov	r10,	#3Ch
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  15 
 Title : 
## Loc. Object                   Line   Source Statements

02:C4A6 08 06                     727   	mov	r6,	#8
02:C4A8                           728   _$loop5:
02:C4A8 80-90                     729   	l	r0,	[er8]
02:C4AA 01-F2 92-24               730   	bl	_hex_byte
02:C4AE C3-90                     731   	st	er0,	[bp]
02:C4B0 00 00                     732   	mov	r0,	#0
02:C4B2 82 D0                     733   	st	r0,	02h[bp]
02:C4B4 87-F4                     734   	cmp	er4,	er8
02:C4B6 03 C8                     735   	bne	_$L32
02:C4B8 04 00                     736   	mov	r0,	#4
02:C4BA 11-90 38-D1               737   	st	r0,	font_color
02:C4BE                           738   _$L32:
02:C4BE A5-F0                     739   	mov	er0,	er10
02:C4C0 C5-F2                     740   	mov	er2,	bp
02:C4C2 01-F0 1E-82               741   	bl	_line_print
02:C4C6 00 00                     742   	mov	r0,	#0
02:C4C8 11-90 38-D1               743   	st	r0,	font_color
02:C4CC 90 EA                     744   	add	er10,	#10h
02:C4CE 81 E8                     745   	add	er8,	#1
02:C4D0 FF 16                     746   	add	r6,	#-1
02:C4D2 EA C8                     747   	bne	_$loop5
                                  748   
02:C4D4 0A 1B                     749   	add	r11,	#0Ah
02:C4D6 FF 17                     750   	add	r7,	#-1
02:C4D8 D5 C8                     751   	bne	_$loop4
                                  752   
02:C4DA 00 09                     753   	mov	r9,	#0
02:C4DC 9A CE                     754   	bal	_$paint_submode
                                  755   
02:C4DE                           756   _$addr_sel_ret:
02:C4DE 05-F2                     757   	mov	er2,	er0
02:C4E0                           758   _$main_ret:
02:C4E0 EA-A1                     759   	mov	sp,	fp
02:C4E2 0E-F0                     760   	pop	r0
02:C4E4 2E-F4                     761   	pop	xr4
02:C4E6 3E-F8                     762   	pop	qr8
02:C4E8 8E-F2                     763   	pop	pc
                                  764   
                                  765   ;er0/er2-start/end of branch target add
                                        ress to fix er4-offset to add to branch
                                         target
                                  766   ;assume that instructions are continuou
                                        s from the start address with no gaps
02:C4EA                           767   _branch_fix:
02:C4EA CE-F8                     768   	push	lr
02:C4EC 5E-F6                     769   	push	er6
02:C4EE 6E-F8                     770   	push	xr8
02:C4F0 CE-F1                     771   	push	ea
02:C4F2 05-F6                     772   	mov	er6,	er0
02:C4F4 12-90 00-D1               773   	l	er0,	start_addr
02:C4F8 12-9A 02-D1               774   	l	er10,	end_addr
02:C4FC                           775   _$loop9:
02:C4FC 00-98                     776   	l	r8,	[er0]
02:C4FE FB 78                     777   	cmp	r8,	#0FBh
02:C500 0A C9                     778   	beq	_$L46
02:C502 FC 78                     779   	cmp	r8,	#0FCh
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  16 
 Title : 
## Loc. Object                   Line   Source Statements

02:C504 08 C9                     780   	beq	_$L46
02:C506 0C 78                     781   	cmp	r8,	#0Ch
02:C508 14 C1                     782   	blt	_$L47
02:C50A 10 78                     783   	cmp	r8,	#10h
02:C50C 04 C1                     784   	blt	_$L46
02:C50E 26 78                     785   	cmp	r8,	#26h
02:C510 10 C1                     786   	blt	_$L47
02:C512 30 78                     787   	cmp	r8,	#30h
02:C514 0E C0                     788   	bge	_$L47
02:C516                           789   _$L46:
02:C516 81 E0                     790   	add	er0,	#1
02:C518 0A-F0                     791   	lea	[er0]
02:C51A 50-98                     792   	l	r8,	[ea+]
02:C51C 30-99                     793   	l	r9,	[ea]
02:C51E 67-F8                     794   	cmp	er8,	er6
02:C520 03 C1                     795   	blt	_$L119
02:C522 27-F8                     796   	cmp	er8,	er2
02:C524 01 C0                     797   	bge	_$L119
02:C526 46-F8                     798   	add	er8,	er4
02:C528                           799   _$L119:
02:C528 01-98                     800   	st	r8,	[er0]
02:C52A 81 E0                     801   	add	er0,	#1
02:C52C 01-99                     802   	st	r9,	[er0]
02:C52E 81 E0                     803   	add	er0,	#1
02:C530 02 CE                     804   	bal	_$L118
02:C532                           805   _$L47:
02:C532 01-F2 66-D1               806   	bl	_ins_length
02:C536                           807   _$L118:
02:C536 A7-F0                     808   	cmp	er0,	er10
02:C538 E1 C1                     809   	blt	_$loop9
02:C53A 8E-F1                     810   	pop	ea
02:C53C 2E-F8                     811   	pop	xr8
02:C53E 1E-F6                     812   	pop	er6
02:C540 8E-F2                     813   	pop	pc
                                  814   
                                  815   ;er0-pointer to the return array er2-cu
                                        rrent addr
                                  816   ;stack args: sp-pointer to the table sp
                                        +2-page num
                                  817   ;return: r0-type
                                  818   ;fp-2:current page
02:C542                           819   _optn_menu:
02:C542 CE-F8                     820   	push	lr
02:C544 01-F0 22-9D               821   	bl	_enter
02:C548 E8 E1                     822   	add	sp,	#-18h
02:C54A 1A-AC                     823   	mov	bp,	sp
02:C54C 5E-F2                     824   	push	er2
02:C54E 05-FA                     825   	mov	er10,	er0
02:C550 52 D8                     826   	l	r8,	12h[fp]		
                                        			;page num
02:C552 00 E0                     827   	mov	er0,	#0
02:C554 FE B0                     828   	st	er0,	-02[fp]
02:C556 03 00                     829   	mov	r0,	#3
02:C558 11-90 13-D1               830   	st	r0,	screen_state
02:C55C 3D CE                     831   	bal	_$optn_repaint
02:C55E                           832   _$loop11:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  17 
 Title : 
## Loc. Object                   Line   Source Statements

02:C55E C5-F0                     833   	mov	er0,	bp
02:C560 01-F0 46-F7               834   	bl	_wait_input
02:C564 C5-F0                     835   	mov	er0,	bp
02:C566 5C 02                     836   	mov	r2,	#byte1 keycode_
                                        comp
02:C568 77 03                     837   	mov	r3,	#byte2 keycode_
                                        comp
02:C56A 01-F2 DC-52               838   	bl	_convert_keycode
02:C56E 30 E2                     839   	mov	er2,	#30h
02:C570 27-F0                     840   	cmp	er0,	er2
02:C572 F5 C3                     841   	ble	_$loop11
02:C574 34 E2                     842   	mov	er2,	#34h
02:C576 27-F0                     843   	cmp	er0,	er2
02:C578 0C C3                     844   	ble	_$select
02:C57A FC 71                     845   	cmp	r1,	#0FCh
02:C57C F0 C8                     846   	bne	_$loop11
02:C57E 1C 70                     847   	cmp	r0,	#1Ch
02:C580 1C C9                     848   	beq	_$optn_up
02:C582 1D 70                     849   	cmp	r0,	#1Dh
02:C584 21 C9                     850   	beq	_$optn_down
02:C586 26 70                     851   	cmp	r0,	#26h
02:C588 02 C9                     852   	beq	_$optn_ac
02:C58A 01 70                     853   	cmp	r0,	#1
02:C58C E8 C8                     854   	bne	_$loop11
02:C58E                           855   _$optn_ac:
02:C58E 00 00                     856   	mov	r0,	#0
02:C590 4F CE                     857   	bal	_$optn_return
                                  858   
02:C592                           859   _$select:
02:C592 CF 10                     860   	add	r0,	#-31h
02:C594 50 B6                     861   	l	er6,	10h[fp]
02:C596 82 E6                     862   	add	er6,	#2
02:C598 7E B2                     863   	l	er2,	-02[fp]
02:C59A 4A-92                     864   	sll	r2,	#4
02:C59C 26-F6                     865   	add	er6,	er2
02:C59E 2A-90                     866   	sll	r0,	#2
02:C5A0 06-F6                     867   	add	er6,	er0
02:C5A2 02 E3 62-94               868   	l	er4,	2:[er6]
02:C5A6 DB C9                     869   	beq	_$loop11
02:C5A8 A5-F0                     870   	mov	er0,	er10
02:C5AA 3E B2                     871   	l	er2,	-02[bp]
02:C5AC 43-F0                     872   	bl	er4
02:C5AE 00-80                     873   	mov	r0,	r0
02:C5B0 3F C8                     874   	bne	_$optn_return
02:C5B2 03 00                     875   	mov	r0,	#3
02:C5B4 11-90 13-D1               876   	st	r0,	screen_state
02:C5B8 0F CE                     877   	bal	_$optn_repaint
                                  878   
02:C5BA                           879   _$optn_up:
02:C5BA 7E D0                     880   	l	r0,	-02[fp]
02:C5BC 03 C9                     881   	beq	_$L51
02:C5BE FF 10                     882   	add	r0,	#-1
02:C5C0 FE D0                     883   	st	r0,	-02[fp]
02:C5C2 0A CE                     884   	bal	_$optn_repaint
02:C5C4                           885   _$L51:
02:C5C4 FE D8                     886   	st	r8,	-02[fp]
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  18 
 Title : 
## Loc. Object                   Line   Source Statements

02:C5C6 08 CE                     887   	bal	_$optn_repaint
                                  888   
02:C5C8                           889   _$optn_down:
02:C5C8 7E D0                     890   	l	r0,	-02[fp]
02:C5CA 87-80                     891   	cmp	r0,	r8
02:C5CC 03 C0                     892   	bge	_$L52
02:C5CE 01 10                     893   	add	r0,	#1
02:C5D0 FE D0                     894   	st	r0,	-02[fp]
02:C5D2 02 CE                     895   	bal	_$optn_repaint
02:C5D4                           896   _$L52:
02:C5D4 00 00                     897   	mov	r0,	#0
02:C5D6 FE D0                     898   	st	r0,	-02[fp]
                                  899   
02:C5D8                           900   _$optn_repaint:
02:C5D8 00 00                     901   	mov	r0,	#0
02:C5DA 04 01                     902   	mov	r1,	#4
02:C5DC 01-F0 AC-7E               903   	bl	_fill_screen
02:C5E0 0E E0                     904   	mov	er0,	#0Eh
02:C5E2 11-90 37-D1               905   	st	r0,	font_size
02:C5E6 11-91 38-D1               906   	st	r1,	font_color
02:C5EA 11-91 39-D1               907   	st	r1,	curr_buffer
02:C5EE 50 B6                     908   	l	er6,	10h[fp]
02:C5F0 7E B0                     909   	l	er0,	-02[fp]
02:C5F2 4A-90                     910   	sll	r0,	#4
02:C5F4 06-F6                     911   	add	er6,	er0
02:C5F6 31 04                     912   	mov	r4,	#31h
02:C5F8 3A 05                     913   	mov	r5,	#3Ah
02:C5FA 01 09                     914   	mov	r9,	#1
02:C5FC                           915   _$loop12:
02:C5FC CA-F0                     916   	lea	[bp]
02:C5FE 53-94                     917   	st	er4,	[ea+]
02:C600 02 E3 62-92               918   	l	er2,	2:[er6]
02:C604 0C C9                     919   	beq	_$L50
02:C606 01-F2 52-D5               920   	bl	_$L1
02:C60A 31-90                     921   	st	r0,	[ea]
02:C60C 90-81                     922   	mov	r1,	r9
02:C60E C5-F2                     923   	mov	er2,	bp
02:C610 01-F0 1E-82               924   	bl	_line_print
02:C614 10 19                     925   	add	r9,	#10h
02:C616 84 E6                     926   	add	er6,	#4
02:C618 01 14                     927   	add	r4,	#1
02:C61A 34 74                     928   	cmp	r4,	#34h
02:C61C EF C3                     929   	ble	_$loop12
02:C61E                           930   _$L50:
02:C61E 80-80                     931   	mov	r0,	r8
02:C620 01 10                     932   	add	r0,	#1
02:C622 7E D1                     933   	l	r1,	-02[fp]
02:C624 01 11                     934   	add	r1,	#1
02:C626 01-F2 C6-83               935   	bl	_draw_scroll_bar
02:C62A 01-F0 F8-86               936   	bl	_render_E3D4
02:C62E 97 CE                     937   	bal	_$loop11
                                  938   
02:C630                           939   _$optn_return:
02:C630 00-F0 2A-9D               940   	b	_leave
                                  941   
02:C634                           942   _arithmetic:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  19 
 Title : 
## Loc. Object                   Line   Source Statements

02:C634 CE-F8                     943   	push	lr
02:C636 5E-F4                     944   	push	er4
02:C638 25-F4                     945   	mov	er4,	er2
02:C63A C0 02                     946   	mov	r2,	#byte1 offset _
                                        arithmetic_table
02:C63C D6 03                     947   	mov	r3,	#byte2 offset _
                                        arithmetic_table
02:C63E 0B CE                     948   	bal	_$show_inst_menu
                                  949   
02:C640                           950   _data_transfer:
02:C640 CE-F8                     951   	push	lr
02:C642 5E-F4                     952   	push	er4
02:C644 25-F4                     953   	mov	er4,	er2
02:C646 0A 02                     954   	mov	r2,	#byte1 offset _
                                        data_transfer_table
02:C648 D7 03                     955   	mov	r3,	#byte2 offset _
                                        data_transfer_table
02:C64A 05 CE                     956   	bal	_$show_inst_menu
                                  957   	
02:C64C                           958   _branch_inst:
02:C64C CE-F8                     959   	push	lr
02:C64E 5E-F4                     960   	push	er4
02:C650 25-F4                     961   	mov	er4,	er2
02:C652 8E 02                     962   	mov	r2,	#byte1 offset _
                                        branch_inst_table
02:C654 D6 03                     963   	mov	r3,	#byte2 offset _
                                        branch_inst_table
                                  964   
02:C656                           965   _$show_inst_menu:
02:C656 01-F2 E0-C8               966   	bl	_inst_menu
02:C65A 1E-F4                     967   	pop	er4
02:C65C 8E-F2                     968   	pop	pc
                                  969   
02:C65E                           970   _load_store:
02:C65E CE-F8                     971   	push	lr
02:C660 5E-F4                     972   	push	er4
02:C662 25-F4                     973   	mov	er4,	er2
02:C664 5A 02                     974   	mov	r2,	#byte1 offset _
                                        load_store_table
02:C666 D6 03                     975   	mov	r3,	#byte2 offset _
                                        load_store_table
02:C668 F6 CE                     976   	bal	_$show_inst_menu
                                  977   
02:C66A                           978   _push_pop:
02:C66A CE-F8                     979   	push	lr
02:C66C 5E-F4                     980   	push	er4
02:C66E 25-F4                     981   	mov	er4,	er2
02:C670 40 02                     982   	mov	r2,	#byte1 offset _
                                        push_pop_table
02:C672 D6 03                     983   	mov	r3,	#byte2 offset _
                                        push_pop_table
02:C674 F0 CE                     984   	bal	_$show_inst_menu
                                  985   
02:C676                           986   _misc:
02:C676 CE-F8                     987   	push	lr
02:C678 5E-F4                     988   	push	er4
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  20 
 Title : 
## Loc. Object                   Line   Source Statements

02:C67A 25-F4                     989   	mov	er4,	er2
02:C67C 74 02                     990   	mov	r2,	#byte1 offset _
                                        misc_table
02:C67E D6 03                     991   	mov	r3,	#byte2 offset _
                                        misc_table
02:C680 EA CE                     992   	bal	_$show_inst_menu
                                  993   
02:C682                           994   _address_input:
02:C682 CE-F8                     995   	push	lr
02:C684 5E-FE                     996   	push	fp
02:C686 5E-F4                     997   	push	er4
02:C688 1A-AE                     998   	mov	fp,	sp
02:C68A FF 04                     999   	mov	r4,	#0FFh
02:C68C 4E-F4                    1000   	push	r4
02:C68E 04 E0                    1001   	mov	er0,	#4
02:C690 5E-F0                    1002   	push	er0
02:C692 02 00                    1003   	mov	r0,	#2
02:C694 20 01                    1004   	mov	r1,	#20h
02:C696 5E-F0                    1005   	push	er0
02:C698 1A-A0                    1006   	mov	er0,	sp
02:C69A 4E-F4                    1007   	push	r4
02:C69C 55 02                    1008   	mov	r2,	#byte1 offset _
                                        sel_branch_addr
02:C69E DB 03                    1009   	mov	r3,	#byte2 offset _
                                        sel_branch_addr
02:C6A0 5E-F2                    1010   	push	er2
02:C6A2 00 02                    1011   	mov	r2,	#0
02:C6A4 10 03                    1012   	mov	r3,	#10h
02:C6A6 5E-F2                    1013   	push	er2
02:C6A8 1A-A2                    1014   	mov	er2,	sp
02:C6AA 05-F4                    1015   	mov	er4,	er0
02:C6AC 01-F2 58-CC              1016   	bl	_input_screen
02:C6B0 42-90                    1017   	l	er0,	[er4]
02:C6B2 EA-A1                    1018   	mov	sp,	fp
02:C6B4 1E-F4                    1019   	pop	er4
02:C6B6 1E-FE                    1020   	pop	fp
02:C6B8 8E-F2                    1021   	pop	pc
                                 1022   
                                 1023   ;return: r2-csr er0-pc
02:C6BA                          1024   _sys_func_select:
02:C6BA CE-F8                    1025   	push	lr
02:C6BC 5E-FE                    1026   	push	fp
02:C6BE 5E-F4                    1027   	push	er4
02:C6C0 CE-F1                    1028   	push	ea
02:C6C2 1A-AE                    1029   	mov	fp,	sp
02:C6C4 FF 04                    1030   	mov	r4,	#0FFh
02:C6C6 4E-F4                    1031   	push	r4
02:C6C8 04 E0                    1032   	mov	er0,	#4
02:C6CA 5E-F0                    1033   	push	er0
02:C6CC 20 00                    1034   	mov	r0,	#20h
02:C6CE 20 01                    1035   	mov	r1,	#20h
02:C6D0 5E-F0                    1036   	push	er0
02:C6D2 01 E0                    1037   	mov	er0,	#1
02:C6D4 5E-F0                    1038   	push	er0
02:C6D6 02 00                    1039   	mov	r0,	#2
02:C6D8 20 01                    1040   	mov	r1,	#20h
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  21 
 Title : 
## Loc. Object                   Line   Source Statements

02:C6DA 5E-F0                    1041   	push	er0
02:C6DC 1A-A0                    1042   	mov	er0,	sp
02:C6DE 4E-F4                    1043   	push	r4
02:C6E0 37 02                    1044   	mov	r2,	#byte1 offset _
                                        _sys_func
02:C6E2 DB 03                    1045   	mov	r3,	#byte2 offset _
                                        _sys_func
02:C6E4 5E-F2                    1046   	push	er2
02:C6E6 14 02                    1047   	mov	r2,	#14h
02:C6E8 24 03                    1048   	mov	r3,	#24h
02:C6EA 5E-F2                    1049   	push	er2
02:C6EC 29 02                    1050   	mov	r2,	#byte1 offset _
                                        sel_sys_func
02:C6EE DB 03                    1051   	mov	r3,	#byte2 offset _
                                        sel_sys_func
02:C6F0 5E-F2                    1052   	push	er2
02:C6F2 00 02                    1053   	mov	r2,	#0
02:C6F4 10 03                    1054   	mov	r3,	#10h
02:C6F6 5E-F2                    1055   	push	er2
02:C6F8 1A-A2                    1056   	mov	er2,	sp
02:C6FA 05-F4                    1057   	mov	er4,	er0
02:C6FC 01-F2 58-CC              1058   	bl	_input_screen
02:C700 20-83                    1059   	mov	r3,	r2
02:C702 40-92                    1060   	l	r2,	[er4]
02:C704 82 E4                    1061   	add	er4,	#2
02:C706 42-90                    1062   	l	er0,	[er4]
02:C708 02-A0                    1063   	rb	r0.0
02:C70A EA-A1                    1064   	mov	sp,	fp
02:C70C 8E-F1                    1065   	pop	ea
02:C70E 1E-F4                    1066   	pop	er4
02:C710 1E-FE                    1067   	pop	fp
02:C712 8E-F2                    1068   	pop	pc
                                 1069   
                                 1070   ;er0-current addr
                                 1071   ;return: er0-addr
02:C714                          1072   _branch_addr_select:
02:C714 CE-F8                    1073   	push	lr
02:C716 7E-F8                    1074   	push	qr8
02:C718 6E-F4                    1075   	push	xr4
02:C71A CE-F1                    1076   	push	ea
02:C71C 1A-AE                    1077   	mov	fp,	sp
02:C71E F0 E1                    1078   	add	sp,	#-10h
02:C720 1A-AC                    1079   	mov	bp,	sp
02:C722 05-FA                    1080   	mov	er10,	er0
02:C724 03 00                    1081   	mov	r0,	#3
02:C726 11-90 13-D1              1082   	st	r0,	screen_state
                                 1083   
02:C72A 01-F0 00-7F              1084   	bl	_clear_DDD4
02:C72E 0E E0                    1085   	mov	er0,	#0Eh
02:C730 11-90 37-D1              1086   	st	r0,	font_size
02:C734 11-91 38-D1              1087   	st	r1,	font_color
02:C738 01 00                    1088   	mov	r0,	#1
02:C73A 11-90 39-D1              1089   	st	r0,	curr_buffer
                                 1090   
02:C73E CA-F0                    1091   	lea	[bp]
02:C740 39 02                    1092   	mov	r2,	#byte1 offset _
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  22 
 Title : 
## Loc. Object                   Line   Source Statements

                                        input_branch
02:C742 DB 03                    1093   	mov	r3,	#byte2 offset _
                                        input_branch
02:C744 01-F2 52-D5              1094   	bl	_$L1
02:C748 31-90                    1095   	st	r0,	[ea]
02:C74A 00 00                    1096   	mov	r0,	#0
02:C74C 01 01                    1097   	mov	r1,	#1
02:C74E C5-F2                    1098   	mov	er2,	bp
02:C750 01-F0 1E-82              1099   	bl	_line_print
                                 1100   
02:C754 CA-F0                    1101   	lea	[bp]
02:C756 49 02                    1102   	mov	r2,	#byte1 offset _
                                        sel_branch
02:C758 DB 03                    1103   	mov	r3,	#byte2 offset _
                                        sel_branch
02:C75A 01-F2 52-D5              1104   	bl	_$L1
02:C75E 31-90                    1105   	st	r0,	[ea]
02:C760 00 00                    1106   	mov	r0,	#0
02:C762 10 01                    1107   	mov	r1,	#10h
02:C764 C5-F2                    1108   	mov	er2,	bp
02:C766 01-F0 1E-82              1109   	bl	_line_print
                                 1110   
02:C76A 01-F0 04-87              1111   	bl	_render_DDD4
                                 1112   
02:C76E                          1113   _$loop10:
02:C76E C5-F0                    1114   	mov	er0,	bp
02:C770 01-F0 46-F7              1115   	bl	_wait_input
02:C774 C5-F0                    1116   	mov	er0,	bp
02:C776 5C 02                    1117   	mov	r2,	#byte1 keycode_
                                        comp
02:C778 77 03                    1118   	mov	r3,	#byte2 keycode_
                                        comp
02:C77A 01-F2 DC-52              1119   	bl	_convert_keycode
02:C77E 31 E2                    1120   	mov	er2,	#31h
02:C780 27-F0                    1121   	cmp	er0,	er2
02:C782 08 C9                    1122   	beq	_$input_branch
02:C784 32 E2                    1123   	mov	er2,	#32h
02:C786 27-F0                    1124   	cmp	er0,	er2
02:C788 09 C9                    1125   	beq	_$sel_branch
02:C78A 26 70                    1126   	cmp	r0,	#26h
02:C78C FC 51                    1127   	cmpc	r1,	#0FCh
02:C78E EF C8                    1128   	bne	_$loop10
02:C790 00 03                    1129   	mov	r3,	#0
02:C792 10 CE                    1130   	bal	_$sel_branch_ret
                                 1131   
02:C794                          1132   _$input_branch:
02:C794 01-F2 82-C6              1133   	bl	_address_input
02:C798 20-83                    1134   	mov	r3,	r2
02:C79A 0C CE                    1135   	bal	_$sel_branch_ret
                                 1136   
02:C79C                          1137   _$sel_branch:
02:C79C 10-94 12-D1              1138   	l	r4,	submode
02:C7A0 4E-F4                    1139   	push	r4
02:C7A2 01 00                    1140   	mov	r0,	#1
02:C7A4 A5-F2                    1141   	mov	er2,	er10
02:C7A6 01-F2 02-BF              1142   	bl	_program_mode
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  23 
 Title : 
## Loc. Object                   Line   Source Statements

02:C7AA 25-F0                    1143   	mov	er0,	er2
02:C7AC 01 03                    1144   	mov	r3,	#1
02:C7AE 0E-F4                    1145   	pop	r4
02:C7B0 11-94 12-D1              1146   	st	r4,	submode
                                 1147   
02:C7B4                          1148   _$sel_branch_ret:
02:C7B4 EA-A1                    1149   	mov	sp,	fp
02:C7B6 8E-F1                    1150   	pop	ea
02:C7B8 2E-F4                    1151   	pop	xr4
02:C7BA 3E-F8                    1152   	pop	qr8
02:C7BC 8E-F2                    1153   	pop	pc
                                 1154   
                                 1155   ;r0-operand index r1-operand type(1 for
                                         er, 2 for bit)
                                 1156   ;return: r0-reg index(1 bit right shift
                                        ed for er regs)
02:C7BE                          1157   _reg_operand_select:
02:C7BE CE-F8                    1158   	push	lr
02:C7C0 7E-F8                    1159   	push	qr8
02:C7C2 6E-F4                    1160   	push	xr4
02:C7C4 CE-F1                    1161   	push	ea
02:C7C6 1A-AE                    1162   	mov	fp,	sp
02:C7C8 E8 E1                    1163   	add	sp,	#-18h
02:C7CA 1A-AC                    1164   	mov	bp,	sp
02:C7CC 05-FA                    1165   	mov	er10,	er0
02:C7CE 03 00                    1166   	mov	r0,	#3
02:C7D0 11-90 13-D1              1167   	st	r0,	screen_state
                                 1168   
02:C7D4 01-F0 00-7F              1169   	bl	_clear_DDD4
02:C7D8 0E E0                    1170   	mov	er0,	#0Eh
02:C7DA 11-90 37-D1              1171   	st	r0,	font_size
02:C7DE 11-91 38-D1              1172   	st	r1,	font_color
02:C7E2 01 00                    1173   	mov	r0,	#1
02:C7E4 11-90 39-D1              1174   	st	r0,	curr_buffer
                                 1175   
02:C7E8 CA-F0                    1176   	lea	[bp]
02:C7EA E3 02                    1177   	mov	r2,	#byte1 offset _
                                        sel_operand
02:C7EC DA 03                    1178   	mov	r3,	#byte2 offset _
                                        sel_operand
02:C7EE 01-F2 52-D5              1179   	bl	_$L1
02:C7F2 31 1A                    1180   	add	r10,	#31h
02:C7F4 51-9A                    1181   	st	r10,	[ea+]
02:C7F6 3A 01                    1182   	mov	r1,	#3Ah
02:C7F8 51-91                    1183   	st	r1,	[ea+]
02:C7FA 31-90                    1184   	st	r0,	[ea]
02:C7FC 00 00                    1185   	mov	r0,	#0
02:C7FE 01 01                    1186   	mov	r1,	#1
02:C800 C5-F2                    1187   	mov	er2,	bp
02:C802 01-F0 1E-82              1188   	bl	_line_print
                                 1189   
02:C806 CA-F0                    1190   	lea	[bp]
02:C808 00 7B                    1191   	cmp	r11,	#0
02:C80A 08 C9                    1192   	beq	_$L100
02:C80C 01 7B                    1193   	cmp	r11,	#1
02:C80E 03 C9                    1194   	beq	_$L112
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  24 
 Title : 
## Loc. Object                   Line   Source Statements

02:C810 07 02                    1195   	mov	r2,	#byte1 offset _
                                        sel_bit
02:C812 DB 03                    1196   	mov	r3,	#byte2 offset _
                                        sel_bit
02:C814 05 CE                    1197   	bal	_$L101
02:C816                          1198   _$L112:
02:C816 FC 02                    1199   	mov	r2,	#byte1 offset _
                                        sel_ern
02:C818 DA 03                    1200   	mov	r3,	#byte2 offset _
                                        sel_ern
02:C81A 02 CE                    1201   	bal	_$L101
02:C81C                          1202   _$L100:
02:C81C F2 02                    1203   	mov	r2,	#byte1 offset _
                                        sel_rn
02:C81E DA 03                    1204   	mov	r3,	#byte2 offset _
                                        sel_rn
02:C820                          1205   _$L101:
02:C820 01-F2 52-D5              1206   	bl	_$L1
02:C824 31-90                    1207   	st	r0,	[ea]
02:C826 00 00                    1208   	mov	r0,	#0
02:C828 20 01                    1209   	mov	r1,	#20h
02:C82A C5-F2                    1210   	mov	er2,	bp
02:C82C 01-F0 1E-82              1211   	bl	_line_print
                                 1212   
02:C830 0C-F0 6C-DF              1213   	lea	(screen_buf + 0198h)
02:C834 FF 00                    1214   	mov	r0,	#0FFh
02:C836 FF 01                    1215   	mov	r1,	#0FFh
02:C838 05-F2                    1216   	mov	er2,	er0
02:C83A 05-F4                    1217   	mov	er4,	er0
02:C83C 05-F6                    1218   	mov	er6,	er0
02:C83E 57-90                    1219   	st	qr0,	[ea+]
02:C840 57-90                    1220   	st	qr0,	[ea+]
02:C842 37-90                    1221   	st	qr0,	[ea]
                                 1222   
02:C844 01-F0 04-87              1223   	bl	_render_DDD4
                                 1224   
02:C848                          1225   _$loop26:
02:C848 C5-F0                    1226   	mov	er0,	bp
02:C84A 01-F0 46-F7              1227   	bl	_wait_input
02:C84E C5-F0                    1228   	mov	er0,	bp
02:C850 5C 02                    1229   	mov	r2,	#byte1 keycode_
                                        comp
02:C852 77 03                    1230   	mov	r3,	#byte2 keycode_
                                        comp
02:C854 01-F2 DC-52              1231   	bl	_convert_keycode
02:C858 30 E2                    1232   	mov	er2,	#30h
02:C85A 27-F0                    1233   	cmp	er0,	er2
02:C85C F5 C1                    1234   	blt	_$loop26
02:C85E 3C E2                    1235   	mov	er2,	#3Ch
02:C860 27-F0                    1236   	cmp	er0,	er2
02:C862 05 C1                    1237   	blt	_$reg_select
02:C864 26 70                    1238   	cmp	r0,	#26h
02:C866 FC 51                    1239   	cmpc	r1,	#0FCh
02:C868 EF C8                    1240   	bne	_$loop26
02:C86A 00 03                    1241   	mov	r3,	#0
02:C86C 0B CE                    1242   	bal	_$reg_operand_ret
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  25 
 Title : 
## Loc. Object                   Line   Source Statements

                                 1243   
02:C86E                          1244   _$reg_select:
02:C86E 02 7B                    1245   	cmp	r11,	#2
02:C870 03 C8                    1246   	bne	_$L113
02:C872 37 70                    1247   	cmp	r0,	#37h
02:C874 E9 C2                    1248   	bgt	_$loop26
02:C876 04 CE                    1249   	bal	_$L99
02:C878                          1250   _$L113:
02:C878 00 7B                    1251   	cmp	r11,	#0
02:C87A 02 C9                    1252   	beq	_$L99
02:C87C 01-A0                    1253   	tb	r0.0
02:C87E E4 C8                    1254   	bne	_$loop26
02:C880                          1255   _$L99:
02:C880 0F 20                    1256   	and	r0,	#0Fh
02:C882 01 03                    1257   	mov	r3,	#1
                                 1258   
02:C884                          1259   _$reg_operand_ret:
02:C884 EA-A1                    1260   	mov	sp,	fp
02:C886 8E-F1                    1261   	pop	ea
02:C888 2E-F4                    1262   	pop	xr4
02:C88A 3E-F8                    1263   	pop	qr8
02:C88C 8E-F2                    1264   	pop	pc
                                 1265   
                                 1266   ;r0-imm length(1 for 16-bit)
                                 1267   ;return: er0-imm value
02:C88E                          1268   _imm_operand_select:
02:C88E CE-F8                    1269   	push	lr
02:C890 5E-FE                    1270   	push	fp
02:C892 5E-F4                    1271   	push	er4
02:C894 CE-F1                    1272   	push	ea
02:C896 1A-AE                    1273   	mov	fp,	sp
02:C898 FF 04                    1274   	mov	r4,	#0FFh
02:C89A 4E-F4                    1275   	push	r4
02:C89C 00 70                    1276   	cmp	r0,	#0
02:C89E 02 C8                    1277   	bne	_$L105
02:C8A0 02 E0                    1278   	mov	er0,	#2
02:C8A2 01 CE                    1279   	bal	_$L106
02:C8A4                          1280   _$L105:
02:C8A4 04 E0                    1281   	mov	er0,	#4
02:C8A6                          1282   _$L106:
02:C8A6 5E-F0                    1283   	push	er0
02:C8A8 48 00                    1284   	mov	r0,	#48h
02:C8AA 20 01                    1285   	mov	r1,	#20h
02:C8AC 5E-F0                    1286   	push	er0
02:C8AE 1A-A0                    1287   	mov	er0,	sp
02:C8B0 4E-F4                    1288   	push	r4
02:C8B2 22 02                    1289   	mov	r2,	#byte1 offset _
                                        sel_imm_2
02:C8B4 DB 03                    1290   	mov	r3,	#byte2 offset _
                                        sel_imm_2
02:C8B6 5E-F2                    1291   	push	er2
02:C8B8 00 02                    1292   	mov	r2,	#0
02:C8BA 24 03                    1293   	mov	r3,	#24h
02:C8BC 5E-F2                    1294   	push	er2
02:C8BE 12 02                    1295   	mov	r2,	#byte1 offset _
                                        sel_imm
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  26 
 Title : 
## Loc. Object                   Line   Source Statements

02:C8C0 DB 03                    1296   	mov	r3,	#byte2 offset _
                                        sel_imm
02:C8C2 5E-F2                    1297   	push	er2
02:C8C4 00 02                    1298   	mov	r2,	#0
02:C8C6 10 03                    1299   	mov	r3,	#10h
02:C8C8 5E-F2                    1300   	push	er2
02:C8CA 1A-A2                    1301   	mov	er2,	sp
02:C8CC 05-F4                    1302   	mov	er4,	er0
02:C8CE 01-F2 58-CC              1303   	bl	_input_screen
02:C8D2 20-83                    1304   	mov	r3,	r2
02:C8D4 42-90                    1305   	l	er0,	[er4]
02:C8D6 EA-A1                    1306   	mov	sp,	fp
02:C8D8 8E-F1                    1307   	pop	ea
02:C8DA 1E-F4                    1308   	pop	er4
02:C8DC 1E-FE                    1309   	pop	fp
02:C8DE 8E-F2                    1310   	pop	pc
                                 1311   
                                 1312   ;er0-pointer to the return array er2-po
                                        inter to the table er4-current addr
02:C8E0                          1313   _inst_menu:
02:C8E0 CE-F8                    1314   	push	lr
02:C8E2 01-F0 22-9D              1315   	bl	_enter
02:C8E6 E0 E1                    1316   	add	sp,	#-20h
02:C8E8 1A-AC                    1317   	mov	bp,	sp
02:C8EA 5E-F4                    1318   	push	er4
02:C8EC 05-F8                    1319   	mov	er8,	er0
02:C8EE 25-FA                    1320   	mov	er10,	er2
02:C8F0 00 E0                    1321   	mov	er0,	#0
02:C8F2 FE B0                    1322   	st	er0,	-02[fp]
02:C8F4 03 00                    1323   	mov	r0,	#3
02:C8F6 11-90 13-D1              1324   	st	r0,	screen_state
02:C8FA 00-F2 22-CB              1325   	gjmp	_$inst_menu_repaint
                                 1326   
02:C8FE                          1327   _$loop13:
02:C8FE C5-F0                    1328   	mov	er0,	bp
02:C900 01-F0 46-F7              1329   	bl	_wait_input
02:C904 C5-F0                    1330   	mov	er0,	bp
02:C906 5C 02                    1331   	mov	r2,	#byte1 keycode_
                                        comp
02:C908 77 03                    1332   	mov	r3,	#byte2 keycode_
                                        comp
02:C90A 01-F2 DC-52              1333   	bl	_convert_keycode
02:C90E 30 E2                    1334   	mov	er2,	#30h
02:C910 27-F0                    1335   	cmp	er0,	er2
02:C912 F5 C3                    1336   	ble	_$loop13
02:C914 3C E2                    1337   	mov	er2,	#3Ch
02:C916 27-F0                    1338   	cmp	er0,	er2
02:C918 22 C3                    1339   	ble	_$select_inst
02:C91A FC 71                    1340   	cmp	r1,	#0FCh
02:C91C F0 C8                    1341   	bne	_$loop13
02:C91E 1C 70                    1342   	cmp	r0,	#1Ch
02:C920 0B C9                    1343   	beq	_$inst_menu_up
02:C922 1D 70                    1344   	cmp	r0,	#1Dh
02:C924 12 C9                    1345   	beq	_$inst_menu_down
02:C926 26 70                    1346   	cmp	r0,	#26h
02:C928 02-C8                    1347   	gbeq	_$inst_menu_quit
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  27 
 Title : 
## Loc. Object                   Line   Source Statements

02:C92A 00-F2 32-CC               >>>   
02:C92E 1F 70                    1348   	cmp	r0,	#1Fh
02:C930 02-C8                    1349   	gbeq	_$inst_menu_quit
02:C932 00-F2 32-CC               >>>   
02:C936 E3 CE                    1350   	bal	_$loop13
                                 1351   
02:C938                          1352   _$inst_menu_up:
02:C938 7E B0                    1353   	l	er0,	-02[fp]
02:C93A 03 C8                    1354   	bne	_$L96
02:C93C 02 E3 A2-90              1355   	l	er0,	2:[er10]
02:C940 01 CE                    1356   	bal	_$L97
02:C942                          1357   _$L96:
02:C942 FF E0                    1358   	add	er0,	#-1
02:C944                          1359   _$L97:
02:C944 FE B0                    1360   	st	er0,	-02[fp]
02:C946 00-F2 22-CB              1361   	gjmp	_$inst_menu_repaint
                                 1362   
02:C94A                          1363   _$inst_menu_down:
02:C94A 7E B0                    1364   	l	er0,	-02[fp]
02:C94C 81 E0                    1365   	add	er0,	#1
02:C94E 02 E3 A2-92              1366   	l	er2,	2:[er10]
02:C952 27-F0                    1367   	cmp	er0,	er2
02:C954 01 C3                    1368   	ble	_$L98
02:C956 00 E0                    1369   	mov	er0,	#0
02:C958                          1370   _$L98:
02:C958 FE B0                    1371   	st	er0,	-02[fp]
02:C95A 00-F2 22-CB              1372   	gjmp	_$inst_menu_repaint
                                 1373   	
02:C95E                          1374   _$select_inst:
02:C95E CF 10                    1375   	add	r0,	#-31h
02:C960 A5-F6                    1376   	mov	er6,	er10
02:C962 82 E6                    1377   	add	er6,	#2
02:C964 7E D2                    1378   	l	r2,	-02[fp]
02:C966 18 03                    1379   	mov	r3,	#18h
02:C968 34-F2                    1380   	mul	er2,	r3
02:C96A 26-F6                    1381   	add	er6,	er2
02:C96C 1A-90                    1382   	sll	r0,	#1
02:C96E 06-F6                    1383   	add	er6,	er0
02:C970 02 E3 62-94              1384   	l	er4,	2:[er6]
02:C974 C4 C9                    1385   	beq	_$loop13
02:C976 8A-F0                    1386   	lea	[er8]
02:C978 71-A4                    1387   	tb	r4.7
02:C97A 6D C8                    1388   	bne	_$special_inst_handle
02:C97C 01-A4                    1389   	tb	r4.0
02:C97E 02 C8                    1390   	bne	_$L68
02:C980 00 00                    1391   	mov	r0,	#0
02:C982 4A CE                    1392   	bal	_$L109
02:C984                          1393   _$L68:
02:C984 51-A4                    1394   	tb	r4.5
02:C986 1B C9                    1395   	beq	_$L69
                                 1396   ;handle branch instructions(including c
                                        all_sys)
02:C988 51-95                    1397   	st	r5,	[ea+]
02:C98A FD 75                    1398   	cmp	r5,	#0FDh
02:C98C 0C C8                    1399   	bne	_$L70
02:C98E 01-F2 BA-C6              1400   	bl	_sys_func_select	
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  28 
 Title : 
## Loc. Object                   Line   Source Statements

                                        		;return: target_addr-r2
                                        :er0
02:C992 30-83                    1401   	mov	r3,	r3
02:C994 02-C8                    1402   	gbeq	_$inst_menu_quit
02:C996 00-F2 32-CC               >>>   
02:C99A 51-92                    1403   	st	r2,	[ea+]
02:C99C 51-91                    1404   	st	r1,	[ea+]		
                                        			;call_sys store
                                        s param in big endian
02:C99E 31-90                    1405   	st	r0,	[ea]
02:C9A0 04 00                    1406   	mov	r0,	#4
02:C9A2 00-F2 34-CC              1407   	gjmp	_$inst_menu_ret
02:C9A6                          1408   _$L70:
02:C9A6 3E B0                    1409   	l	er0,	-02[bp]
02:C9A8 01-F2 14-C7              1410   	bl	_branch_addr_select	
                                        		;return: er0-target add
                                        r
02:C9AC 30-83                    1411   	mov	r3,	r3
02:C9AE 02-C8                    1412   	gbeq	_$inst_menu_quit
02:C9B0 00-F2 32-CC               >>>   
02:C9B4 51-90                    1413   	st	r0,	[ea+]
02:C9B6 31-91                    1414   	st	r1,	[ea]
02:C9B8 03 00                    1415   	mov	r0,	#3
02:C9BA 00-F2 34-CC              1416   	gjmp	_$inst_menu_ret
02:C9BE                          1417   _$L69:
02:C9BE 61-A4                    1418   	tb	r4.6
02:C9C0 16 C9                    1419   	beq	_$L71
                                 1420   ;handle regular 2-reg instructions here
                                        (inst rn, rm)
02:C9C2 51-95                    1421   	st	r5,	[ea+]
02:C9C4 00 E0                    1422   	mov	er0,	#0
02:C9C6 01-F2 BE-C7              1423   	bl	_reg_operand_select
02:C9CA 30-83                    1424   	mov	r3,	r3
02:C9CC 02-C8                    1425   	gbeq	_$inst_menu_quit
02:C9CE 00-F2 32-CC               >>>   
02:C9D2 00-84                    1426   	mov	r4,	r0
02:C9D4 01 E0                    1427   	mov	er0,	#1
02:C9D6 01-F2 BE-C7              1428   	bl	_reg_operand_select
02:C9DA 30-83                    1429   	mov	r3,	r3
02:C9DC 02-C8                    1430   	gbeq	_$inst_menu_quit
02:C9DE 00-F2 32-CC               >>>   
02:C9E2 4A-94                    1431   	sll	r4,	#4
02:C9E4 43-80                    1432   	or	r0,	r4
02:C9E6 31-90                    1433   	st	r0,	[ea]
02:C9E8 02 00                    1434   	mov	r0,	#2
02:C9EA 00-F2 34-CC              1435   	gjmp	_$inst_menu_ret
02:C9EE                          1436   _$L71:
02:C9EE 00 E0                    1437   	mov	er0,	#0
02:C9F0 11-A4                    1438   	tb	r4.1
02:C9F2 0C C9                    1439   	beq	_$L72
02:C9F4 01 01                    1440   	mov	r1,	#1
02:C9F6 36 75                    1441   	cmp	r5,	#36h
02:C9F8 01 C8                    1442   	bne	_$L108
02:C9FA 01 00                    1443   	mov	r0,	#1
02:C9FC                          1444   _$L108:
02:C9FC 01-F2 BE-C7              1445   	bl	_reg_operand_select
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  29 
 Title : 
## Loc. Object                   Line   Source Statements

02:CA00 30-83                    1446   	mov	r3,	r3
02:CA02 02-C8                    1447   	gbeq	_$inst_menu_quit
02:CA04 00-F2 32-CC               >>>   
02:CA08 1C-90                    1448   	srl	r0,	#1
02:CA0A 06 CE                    1449   	bal	_$L109
02:CA0C                          1450   _$L72:
02:CA0C 01-F2 BE-C7              1451   	bl	_reg_operand_select
02:CA10 30-83                    1452   	mov	r3,	r3
02:CA12 02-C8                    1453   	gbeq	_$inst_menu_quit
02:CA14 00-F2 32-CC               >>>   
02:CA18                          1454   _$L109:
02:CA18 51-80                    1455   	add	r0,	r5
02:CA1A 51-90                    1456   	st	r0,	[ea+]
02:CA1C 01 00                    1457   	mov	r0,	#1
02:CA1E 31-A4                    1458   	tb	r4.3
02:CA20 02-C8                    1459   	gbeq	_$inst_menu_ret
02:CA22 00-F2 34-CC               >>>   
02:CA26 41-A4                    1460   	tb	r4.4
02:CA28 0B C8                    1461   	bne	_$L73
02:CA2A 00 00                    1462   	mov	r0,	#0
02:CA2C 01-F2 8E-C8              1463   	bl	_imm_operand_select
02:CA30 30-83                    1464   	mov	r3,	r3
02:CA32 02-C8                    1465   	gbeq	_$inst_menu_quit
02:CA34 00-F2 32-CC               >>>   
02:CA38 31-90                    1466   	st	r0,	[ea]
02:CA3A 02 00                    1467   	mov	r0,	#2
02:CA3C 00-F2 34-CC              1468   	gjmp	_$inst_menu_ret
02:CA40                          1469   _$L73:
02:CA40 01-F2 8E-C8              1470   	bl	_imm_operand_select
02:CA44 30-83                    1471   	mov	r3,	r3
02:CA46 02-C8                    1472   	gbeq	_$inst_menu_quit
02:CA48 00-F2 32-CC               >>>   
02:CA4C 51-90                    1473   	st	r0,	[ea+]
02:CA4E 31-91                    1474   	st	r1,	[ea]
02:CA50 03 00                    1475   	mov	r0,	#3
02:CA52 00-F2 34-CC              1476   	gjmp	_$inst_menu_ret
                                 1477   
02:CA56                          1478   _$special_inst_handle:
02:CA56 40-80                    1479   	mov	r0,	r4
02:CA58 07 20                    1480   	and	r0,	#7
02:CA5A 1F 10                    1481   	add	r0,	#1Fh
02:CA5C 51-90                    1482   	st	r0,	[ea+]
02:CA5E 02 08                    1483   	mov	r8,	#2
02:CA60 00 E0                    1484   	mov	er0,	#0
02:CA62 51-A4                    1485   	tb	r4.5
02:CA64 09 C9                    1486   	beq	_$L79
02:CA66 01 01                    1487   	mov	r1,	#1
02:CA68 01-F2 BE-C7              1488   	bl	_reg_operand_select
02:CA6C 30-83                    1489   	mov	r3,	r3
02:CA6E 02-C8                    1490   	gbeq	_$inst_menu_quit
02:CA70 00-F2 32-CC               >>>   
02:CA74 1C-90                    1491   	srl	r0,	#1
02:CA76 06 CE                    1492   	bal	_$L80
02:CA78                          1493   _$L79:
02:CA78 01-F2 BE-C7              1494   	bl	_reg_operand_select
02:CA7C 30-83                    1495   	mov	r3,	r3
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  30 
 Title : 
## Loc. Object                   Line   Source Statements

02:CA7E 02-C8                    1496   	gbeq	_$inst_menu_quit
02:CA80 00-F2 32-CC               >>>   
02:CA84                          1497   _$L80:
02:CA84 00-86                    1498   	mov	r6,	r0
02:CA86 31-A4                    1499   	tb	r4.3
02:CA88 17 C9                    1500   	beq	_$L81
02:CA8A 01 E0                    1501   	mov	er0,	#1
02:CA8C 61-A4                    1502   	tb	r4.6
02:CA8E 09 C9                    1503   	beq	_$L82
02:CA90 01 01                    1504   	mov	r1,	#1
02:CA92 01-F2 BE-C7              1505   	bl	_reg_operand_select
02:CA96 30-83                    1506   	mov	r3,	r3
02:CA98 02-C8                    1507   	gbeq	_$inst_menu_quit
02:CA9A 00-F2 32-CC               >>>   
02:CA9E 1C-90                    1508   	srl	r0,	#1
02:CAA0 09 CE                    1509   	bal	_$L83
02:CAA2                          1510   _$L82:
02:CAA2 0D 75                    1511   	cmp	r5,	#0Dh
02:CAA4 01 C8                    1512   	bne	_$L111
02:CAA6 02 01                    1513   	mov	r1,	#2
02:CAA8                          1514   _$L111:
02:CAA8 01-F2 BE-C7              1515   	bl	_reg_operand_select
02:CAAC 30-83                    1516   	mov	r3,	r3
02:CAAE 02-C8                    1517   	gbeq	_$inst_menu_quit
02:CAB0 00-F2 32-CC               >>>   
02:CAB4                          1518   _$L83:
02:CAB4 4A-96                    1519   	sll	r6,	#4
02:CAB6 03-86                    1520   	or	r6,	r0
02:CAB8                          1521   _$L81:
02:CAB8 41-A4                    1522   	tb	r4.4
02:CABA 09 C9                    1523   	beq	_$L84
02:CABC 00 00                    1524   	mov	r0,	#0
02:CABE 01-F2 8E-C8              1525   	bl	_imm_operand_select
02:CAC2 30-83                    1526   	mov	r3,	r3
02:CAC4 02-C8                    1527   	gbeq	_$inst_menu_quit
02:CAC6 00-F2 32-CC               >>>   
02:CACA 00-87                    1528   	mov	r7,	r0
02:CACC 03 08                    1529   	mov	r8,	#3
02:CACE                          1530   _$L84:
02:CACE 02 75                    1531   	cmp	r5,	#2
02:CAD0 02 C0                    1532   	bge	_$L86
02:CAD2 7A-95                    1533   	sll	r5,	#7
02:CAD4 20 CE                    1534   	bal	_$L85
02:CAD6                          1535   _$L86:
02:CAD6 04 75                    1536   	cmp	r5,	#4
02:CAD8 03 C0                    1537   	bge	_$L87
02:CADA                          1538   _$L89:
02:CADA 01 25                    1539   	and	r5,	#1
02:CADC 3A-95                    1540   	sll	r5,	#3
02:CADE 1B CE                    1541   	bal	_$L85
02:CAE0                          1542   _$L87:
02:CAE0 08 75                    1543   	cmp	r5,	#8
02:CAE2 07 C0                    1544   	bge	_$L88
02:CAE4 50-80                    1545   	mov	r0,	r5
02:CAE6 01 20                    1546   	and	r0,	#1
02:CAE8 02 25                    1547   	and	r5,	#2
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  31 
 Title : 
## Loc. Object                   Line   Source Statements

02:CAEA 3A-90                    1548   	sll	r0,	#3
02:CAEC 6A-95                    1549   	sll	r5,	#6
02:CAEE 03-86                    1550   	or	r6,	r0
02:CAF0 12 CE                    1551   	bal	_$L85
02:CAF2                          1552   _$L88:
02:CAF2 0E 75                    1553   	cmp	r5,	#0Eh
02:CAF4 F2 C1                    1554   	blt	_$L89
02:CAF6 12 75                    1555   	cmp	r5,	#12h
02:CAF8 0C C0                    1556   	bge	_$L90
02:CAFA 11 75                    1557   	cmp	r5,	#11h
02:CAFC 02 C8                    1558   	bne	_$L107
02:CAFE E0 05                    1559   	mov	r5,	#0E0h
02:CB00 0A CE                    1560   	bal	_$L85
02:CB02                          1561   _$L107:
02:CB02 60-80                    1562   	mov	r0,	r6
02:CB04 07 26                    1563   	and	r6,	#7
02:CB06 08 20                    1564   	and	r0,	#8
02:CB08 1A-90                    1565   	sll	r0,	#1
02:CB0A 03-86                    1566   	or	r6,	r0
02:CB0C F6 15                    1567   	add	r5,	#-0Ah
02:CB0E 5A-95                    1568   	sll	r5,	#5
02:CB10 02 CE                    1569   	bal	_$L85
02:CB12                          1570   _$L90:
02:CB12 EE 15                    1571   	add	r5,	#-12h
02:CB14 4A-95                    1572   	sll	r5,	#4
02:CB16                          1573   _$L85:
02:CB16 53-86                    1574   	or	r6,	r5
02:CB18 51-96                    1575   	st	r6,	[ea+]
02:CB1A 31-97                    1576   	st	r7,	[ea]
02:CB1C 80-80                    1577   	mov	r0,	r8
02:CB1E 00-F2 34-CC              1578   	gjmp	_$inst_menu_ret
                                 1579   
02:CB22                          1580   _$inst_menu_repaint:
02:CB22 00 00                    1581   	mov	r0,	#0
02:CB24 04 01                    1582   	mov	r1,	#4
02:CB26 01-F0 AC-7E              1583   	bl	_fill_screen
02:CB2A 0A E0                    1584   	mov	er0,	#0Ah
02:CB2C 11-90 37-D1              1585   	st	r0,	font_size
02:CB30 11-91 38-D1              1586   	st	r1,	font_color
02:CB34 11-91 39-D1              1587   	st	r1,	curr_buffer
02:CB38 60 00                    1588   	mov	r0,	#60h
02:CB3A F7 01                    1589   	mov	r1,	#0F7h
02:CB3C FC B0                    1590   	st	er0,	-04[fp]
02:CB3E A5-F6                    1591   	mov	er6,	er10
02:CB40 82 E6                    1592   	add	er6,	#2
02:CB42 7E D0                    1593   	l	r0,	-02[fp]
02:CB44 18 01                    1594   	mov	r1,	#18h
02:CB46 14-F0                    1595   	mul	er0,	r1
02:CB48 06-F6                    1596   	add	er6,	er0
02:CB4A 31 04                    1597   	mov	r4,	#31h
02:CB4C 3A 05                    1598   	mov	r5,	#3Ah
02:CB4E                          1599   _$loop14:
02:CB4E CA-F0                    1600   	lea	[bp]
02:CB50 53-94                    1601   	st	er4,	[ea+]
02:CB52 6E-F4                    1602   	push	xr4
02:CB54 02 E3 62-94              1603   	l	er4,	2:[er6]
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  32 
 Title : 
## Loc. Object                   Line   Source Statements

02:CB58 61 C9                    1604   	beq	_$L54
02:CB5A 50-80                    1605   	mov	r0,	r5
02:CB5C 00 01                    1606   	mov	r1,	#0
02:CB5E 71-A4                    1607   	tb	r4.7
02:CB60 3B C8                    1608   	bne	_$inst_text_handle
02:CB62 F6 75                    1609   	cmp	r5,	#0F6h
02:CB64 02 C1                    1610   	blt	_$L59
02:CB66 0A 10                    1611   	add	r0,	#0Ah
02:CB68 11 CE                    1612   	bal	_$L58
02:CB6A                          1613   _$L59:
02:CB6A 61-A4                    1614   	tb	r4.6
02:CB6C 0F C8                    1615   	bne	_$L58
02:CB6E 51-A4                    1616   	tb	r4.5
02:CB70 0D C8                    1617   	bne	_$L58
02:CB72 11-A4                    1618   	tb	r4.1
02:CB74 08 C8                    1619   	bne	_$L60
02:CB76 0C 70                    1620   	cmp	r0,	#0Ch
02:CB78 01 C0                    1621   	bge	_$L61
02:CB7A 4E 10                    1622   	add	r0,	#4Eh
02:CB7C                          1623   _$L61:
02:CB7C 06 10                    1624   	add	r0,	#6
02:CB7E 0C 02                    1625   	mov	r2,	#0Ch
02:CB80 29-F0                    1626   	div	er0,	r2
02:CB82 B0 E0                    1627   	add	er0,	#30h
02:CB84 03 CE                    1628   	bal	_$L58
02:CB86                          1629   _$L60:
02:CB86 06 02                    1630   	mov	r2,	#6
02:CB88 29-F0                    1631   	div	er0,	r2
02:CB8A A8 E0                    1632   	add	er0,	#28h
02:CB8C                          1633   _$L58:
02:CB8C 01-F2 44-D5              1634   	bl	_extract_string
02:CB90 01-A4                    1635   	tb	r4.0
02:CB92 16 C9                    1636   	beq	_$L64
02:CB94 51-A4                    1637   	tb	r4.5
02:CB96 03 C9                    1638   	beq	_$L63
02:CB98 A1 02                    1639   	mov	r2,	#byte1 offset _
                                        addr_str
02:CB9A D9 03                    1640   	mov	r3,	#byte2 offset _
                                        addr_str
02:CB9C 1A CE                    1641   	bal	_$L67
02:CB9E                          1642   _$L63:
02:CB9E 6E 06                    1643   	mov	r6,	#6Eh
02:CBA0 51-96                    1644   	st	r6,	[ea+]
02:CBA2 30 75                    1645   	cmp	r5,	#30h
02:CBA4 03 C8                    1646   	bne	_$L62
02:CBA6 C3 02                    1647   	mov	r2,	#byte1 offset _
                                        sp_str
02:CBA8 D9 03                    1648   	mov	r3,	#byte2 offset _
                                        sp_str
02:CBAA 13 CE                    1649   	bal	_$L67
02:CBAC                          1650   _$L62:
02:CBAC 61-A4                    1651   	tb	r4.6
02:CBAE 08 C9                    1652   	beq	_$L64
02:CBB0 21-A4                    1653   	tb	r4.2
02:CBB2 03 C8                    1654   	bne	_$L65
02:CBB4 BE 02                    1655   	mov	r2,	#byte1 offset _
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  33 
 Title : 
## Loc. Object                   Line   Source Statements

                                        rm_str
02:CBB6 D9 03                    1656   	mov	r3,	#byte2 offset _
                                        rm_str
02:CBB8 0C CE                    1657   	bal	_$L67
02:CBBA                          1658   _$L65:
02:CBBA B8 02                    1659   	mov	r2,	#byte1 offset _
                                        erm_str
02:CBBC D9 03                    1660   	mov	r3,	#byte2 offset _
                                        erm_str
02:CBBE 09 CE                    1661   	bal	_$L67
02:CBC0                          1662   _$L64:
02:CBC0 31-A4                    1663   	tb	r4.3
02:CBC2 16 C9                    1664   	beq	_$text_handle_end
02:CBC4 41-A4                    1665   	tb	r4.4
02:CBC6 03 C8                    1666   	bne	_$L66
02:CBC8 A7 02                    1667   	mov	r2,	#byte1 offset _
                                        imm8_str
02:CBCA D9 03                    1668   	mov	r3,	#byte2 offset _
                                        imm8_str
02:CBCC 02 CE                    1669   	bal	_$L67
02:CBCE                          1670   _$L66:
02:CBCE AF 02                    1671   	mov	r2,	#byte1 offset _
                                        imm16_str
02:CBD0 D9 03                    1672   	mov	r3,	#byte2 offset _
                                        imm16_str
02:CBD2                          1673   _$L67:
02:CBD2 01-F2 52-D5              1674   	bl	_$L1
02:CBD6 0C CE                    1675   	bal	_$text_handle_end
                                 1676   
                                 1677   ;instructions that need special handlin
                                        g are encoded from 0
02:CBD8                          1678   _$inst_text_handle:
02:CBD8 1A-90                    1679   	sll	r0,	#1
02:CBDA 02 E3 08-A2 24-D7        1680   	l	er2,	far _inst_menu_
                                        str_table[er0]
02:CBE0 01-F2 52-D5              1681   	bl	_$L1
02:CBE4 31-A4                    1682   	tb	r4.3
02:CBE6 04 C8                    1683   	bne	_$text_handle_end
02:CBE8 41-A4                    1684   	tb	r4.4
02:CBEA 02 C8                    1685   	bne	_$text_handle_end
02:CBEC 6E 06                    1686   	mov	r6,	#6Eh
02:CBEE 51-96                    1687   	st	r6,	[ea+]
                                 1688   	
02:CBF0                          1689   _$text_handle_end:
02:CBF0 31-90                    1690   	st	r0,	[ea]
02:CBF2 2E-F4                    1691   	pop	xr4
02:CBF4 7C B0                    1692   	l	er0,	-04[fp]
02:CBF6 00 70                    1693   	cmp	r0,	#0
02:CBF8 04 C9                    1694   	beq	_$L55
02:CBFA 00 00                    1695   	mov	r0,	#0
02:CBFC 0A 11                    1696   	add	r1,	#0Ah
02:CBFE FC B0                    1697   	st	er0,	-04[fp]
02:CC00 02 CE                    1698   	bal	_$L56
02:CC02                          1699   _$L55:
02:CC02 60 00                    1700   	mov	r0,	#60h
02:CC04 FC B0                    1701   	st	er0,	-04[fp]
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  34 
 Title : 
## Loc. Object                   Line   Source Statements

02:CC06                          1702   _$L56:
02:CC06 C5-F2                    1703   	mov	er2,	bp
02:CC08 01-F0 1E-82              1704   	bl	_line_print
02:CC0C 82 E6                    1705   	add	er6,	#2
02:CC0E 01 14                    1706   	add	r4,	#1
02:CC10 3A 74                    1707   	cmp	r4,	#3Ah
02:CC12 02 C8                    1708   	bne	_$L57
02:CC14 07 14                    1709   	add	r4,	#7
02:CC16 9B CE                    1710   	bal	_$loop14
02:CC18                          1711   _$L57:
02:CC18 43 74                    1712   	cmp	r4,	#43h
02:CC1A 99 C3                    1713   	ble	_$loop14
                                 1714   
02:CC1C                          1715   _$L54:
02:CC1C 02 E3 A0-90              1716   	l	r0,	2:[er10]
02:CC20 01 10                    1717   	add	r0,	#1
02:CC22 7E D1                    1718   	l	r1,	-02[fp]
02:CC24 01 11                    1719   	add	r1,	#1
02:CC26 01-F2 C6-83              1720   	bl	_draw_scroll_bar
02:CC2A 01-F0 F8-86              1721   	bl	_render_E3D4
                                 1722   
02:CC2E 00-F2 FE-C8              1723   	gjmp	_$loop13
                                 1724   
02:CC32                          1725   _$inst_menu_quit:
02:CC32 00 00                    1726   	mov	r0,	#0
02:CC34                          1727   _$inst_menu_ret:
02:CC34 00-F0 2A-9D              1728   	b	_leave
                                 1729   
                                 1730   ;subroutine for input menu screen
                                 1731   ;return: er0-pointer to the current inp
                                        ut buffer
02:CC38                          1732   _get_input_buffer:
02:CC38 5E-F2                    1733   	push	er2
02:CC3A 6E-F4                    1734   	push	xr4
02:CC3C 85-F6                    1735   	mov	er6,	er8
02:CC3E 82 E6                    1736   	add	er6,	#2
02:CC40 C5-F0                    1737   	mov	er0,	bp
02:CC42 7E D4                    1738   	l	r4,	-02[fp]
02:CC44 06 C9                    1739   	beq	_$L91
02:CC46                          1740   _$loop22:
02:CC46 62-92                    1741   	l	er2,	[er6]
02:CC48 84 E6                    1742   	add	er6,	#4
02:CC4A 26-F0                    1743   	add	er0,	er2
02:CC4C 81 E0                    1744   	add	er0,	#1
02:CC4E FF 14                    1745   	add	r4,	#-1
02:CC50 FA C8                    1746   	bne	_$loop22
02:CC52                          1747   _$L91:
02:CC52 2E-F4                    1748   	pop	xr4
02:CC54 1E-F2                    1749   	pop	er2
02:CC56 1F-FE                    1750   	rt
                                 1751   
                                 1752   ;er0-pointer to the input box array.str
                                        uct: position, length. end with FF.
                                 1753   ;er2-pointer to the string array. struc
                                        t: position, pointer. end with FF.
02:CC58                          1754   _input_screen:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  35 
 Title : 
## Loc. Object                   Line   Source Statements

02:CC58 CE-F8                    1755   	push	lr
02:CC5A 01-F0 22-9D              1756   	bl	_enter
                                 1757   ;fp-2: current input box
02:CC5E FE E1                    1758   	add	sp,	#-2
02:CC60 05-F8                    1759   	mov	er8,	er0
02:CC62 25-FA                    1760   	mov	er10,	er2
                                 1761   ;generate input buffer in stack
02:CC64 8A-F0                    1762   	lea	[er8]
02:CC66 1A-AC                    1763   	mov	bp,	sp
02:CC68 1A-A6                    1764   	mov	er6,	sp
02:CC6A                          1765   _$loop15:
02:CC6A 52-90                    1766   	l	er0,	[ea+]
02:CC6C FF 70                    1767   	cmp	r0,	#0FFh
02:CC6E 06 C9                    1768   	beq	_$L74
02:CC70 52-92                    1769   	l	er2,	[ea+]
02:CC72 83 E2                    1770   	add	er2,	#3
02:CC74 28-8C                    1771   	sub	r12,	r2
02:CC76 39-8D                    1772   	subc	r13,	r3
02:CC78 FE E6                    1773   	add	er6,	#-2
02:CC7A F7 CE                    1774   	bal	_$loop15
02:CC7C                          1775   _$L74:
02:CC7C 02-AC                    1776   	rb	r12.0
02:CC7E CA-A1                    1777   	mov	sp,	bp
                                 1778   ;reserve space for ki/ko return value
02:CC80 FE E1                    1779   	add	sp,	#-2
                                 1780   ;bp-bointer to the input buffer array e
                                        r6-pointer to the input length array
02:CC82 00 E0                    1781   	mov	er0,	#0
02:CC84 C5-F2                    1782   	mov	er2,	bp
02:CC86                          1783   _$loop16:
02:CC86 23-90                    1784   	st	er0,	[er2]
02:CC88 82 E2                    1785   	add	er2,	#2
02:CC8A E7-F2                    1786   	cmp	er2,	fp
02:CC8C FC C1                    1787   	blt	_$loop16
02:CC8E 11-90 13-D1              1788   	st	r0,	screen_state
02:CC92 11-90 55-D1              1789   	st	r0,	cursor_pos
02:CC96 01 00                    1790   	mov	r0,	#1
02:CC98 11-90 16-D1              1791   	st	r0,	cursor_blink
02:CC9C 0E 00                    1792   	mov	r0,	#0Eh
02:CC9E 11-90 68-D1              1793   	st	r0,	cursor_size
02:CCA2 00 04                    1794   	mov	r4,	#0
02:CCA4 1D CE                    1795   	gjmp	_$calc_cursor_pos
                                 1796   
02:CCA6                          1797   _$loop17:
02:CCA6 1A-A0                    1798   	mov	er0,	sp
02:CCA8 01-F0 46-F7              1799   	bl	_wait_input
02:CCAC 1A-A0                    1800   	mov	er0,	sp
02:CCAE 5C 02                    1801   	mov	r2,	#byte1 keycode_
                                        comp
02:CCB0 77 03                    1802   	mov	r3,	#byte2 keycode_
                                        comp
02:CCB2 01-F2 DC-52              1803   	bl	_convert_keycode
02:CCB6 30 E2                    1804   	mov	er2,	#30h
02:CCB8 27-F0                    1805   	cmp	er0,	er2
02:CCBA F5 C1                    1806   	blt	_$loop17
02:CCBC 3F E2                    1807   	mov	er2,	#3Fh
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  36 
 Title : 
## Loc. Object                   Line   Source Statements

02:CCBE 27-F0                    1808   	cmp	er0,	er2
02:CCC0 1B C3                    1809   	ble	_$input
02:CCC2 FC 71                    1810   	cmp	r1,	#0FCh
02:CCC4 F0 C8                    1811   	bne	_$loop17
02:CCC6 1F 70                    1812   	cmp	r0,	#1Fh
02:CCC8 4F C9                    1813   	beq	_$left
02:CCCA 1E 70                    1814   	cmp	r0,	#1Eh
02:CCCC 5E C9                    1815   	beq	_$right
02:CCCE 2D 70                    1816   	cmp	r0,	#2Dh
02:CCD0 74 C9                    1817   	beq	_$enter
02:CCD2 26 70                    1818   	cmp	r0,	#26h
02:CCD4 02-C8                    1819   	gbeq	_$ac
02:CCD6 00-F2 EC-CD               >>>   
02:CCDA 3E 70                    1820   	cmp	r0,	#3Eh
02:CCDC 30 C9                    1821   	beq	_$del
02:CCDE E3 CE                    1822   	bal	_$loop17
                                 1823   
02:CCE0                          1824   _$calc_cursor_pos:
02:CCE0 7E B0                    1825   	l	er0,	-02[fp]
02:CCE2 2A-90                    1826   	sll	r0,	#2
02:CCE4 86-F0                    1827   	add	er0,	er8
02:CCE6 02-90                    1828   	l	er0,	[er0]
02:CCE8 03 10                    1829   	add	r0,	#3
02:CCEA 03 11                    1830   	add	r1,	#3
02:CCEC 0B 02                    1831   	mov	r2,	#0Bh
02:CCEE 44-F2                    1832   	mul	er2,	r4
02:CCF0 26-F0                    1833   	add	er0,	er2
02:CCF2 13-90 58-D1              1834   	st	er0,	cursor_scr_pos
02:CCF6 7D CE                    1835   	gjmp	_$input_screen_repaint
                                 1836   
02:CCF8                          1837   _$input:
02:CCF8 5E-FA                    1838   	push	er10
02:CCFA 7E B2                    1839   	l	er2,	-02[fp]
02:CCFC 1A-92                    1840   	sll	r2,	#1
02:CCFE 25-FA                    1841   	mov	er10,	er2
02:CD00 66-FA                    1842   	add	er10,	er6
02:CD02 A2-94                    1843   	l	er4,	[er10]
02:CD04 1A-92                    1844   	sll	r2,	#1
02:CD06 86-F2                    1845   	add	er2,	er8
02:CD08 82 E2                    1846   	add	er2,	#2
02:CD0A 22-92                    1847   	l	er2,	[er2]
02:CD0C 27-F4                    1848   	cmp	er4,	er2
02:CD0E 15 C0                    1849   	bge	_$L104
02:CD10 81 E4                    1850   	add	er4,	#1
02:CD12 A3-94                    1851   	st	er4,	[er10]
02:CD14 05-F2                    1852   	mov	er2,	er0
02:CD16 01-F2 38-CC              1853   	bl	_get_input_buffer
02:CD1A 10-94 55-D1              1854   	l	r4,	cursor_pos
02:CD1E 00 05                    1855   	mov	r5,	#0
02:CD20 46-F0                    1856   	add	er0,	er4
02:CD22                          1857   _$loop23:
02:CD22 00-93                    1858   	l	r3,	[er0]
02:CD24 01-92                    1859   	st	r2,	[er0]
02:CD26 00 72                    1860   	cmp	r2,	#0
02:CD28 03 C9                    1861   	beq	_$L92
02:CD2A 30-82                    1862   	mov	r2,	r3
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  37 
 Title : 
## Loc. Object                   Line   Source Statements

02:CD2C 81 E0                    1863   	add	er0,	#1
02:CD2E F9 CE                    1864   	bal	_$loop23
02:CD30                          1865   _$L92:
02:CD30 01 14                    1866   	add	r4,	#1
02:CD32 11-94 55-D1              1867   	st	r4,	cursor_pos
02:CD36 1E-FA                    1868   	pop	er10
02:CD38 D3 CE                    1869   	bal	_$calc_cursor_pos
                                 1870   
02:CD3A                          1871   _$L104:
02:CD3A 1E-FA                    1872   	pop	er10
02:CD3C B4 CE                    1873   	bal	_$loop17
                                 1874   
02:CD3E                          1875   _$del:
02:CD3E 10-94 55-D1              1876   	l	r4,	cursor_pos
02:CD42 B1 C9                    1877   	beq	_$loop17
02:CD44 00 05                    1878   	mov	r5,	#0
02:CD46 FF 14                    1879   	add	r4,	#-1
02:CD48 11-94 55-D1              1880   	st	r4,	cursor_pos
02:CD4C 01-F2 38-CC              1881   	bl	_get_input_buffer
02:CD50 46-F0                    1882   	add	er0,	er4
02:CD52 05-F2                    1883   	mov	er2,	er0
02:CD54 81 E2                    1884   	add	er2,	#1
02:CD56 01-F0 70-D0              1885   	bl	_strcpy
02:CD5A 7E B0                    1886   	l	er0,	-02[fp]
02:CD5C 1A-90                    1887   	sll	r0,	#1
02:CD5E 66-F0                    1888   	add	er0,	er6
02:CD60 02-92                    1889   	l	er2,	[er0]
02:CD62 FF E2                    1890   	add	er2,	#-1
02:CD64 03-92                    1891   	st	er2,	[er0]
02:CD66 BC CE                    1892   	bal	_$calc_cursor_pos
                                 1893   
02:CD68                          1894   _$left:
02:CD68 10-94 55-D1              1895   	l	r4,	cursor_pos
02:CD6C 04 C9                    1896   	beq	_$L93
02:CD6E FF 14                    1897   	add	r4,	#-1
02:CD70 11-94 55-D1              1898   	st	r4,	cursor_pos
02:CD74 B5 CE                    1899   	bal	_$calc_cursor_pos
02:CD76                          1900   _$L93:
02:CD76 7E B0                    1901   	l	er0,	-02[fp]
02:CD78 96 C9                    1902   	beq	_$loop17
02:CD7A FF E0                    1903   	add	er0,	#-1
02:CD7C FE B0                    1904   	st	er0,	-02[fp]
02:CD7E 1A-90                    1905   	sll	r0,	#1
02:CD80 66-F0                    1906   	add	er0,	er6
02:CD82 02-94                    1907   	l	er4,	[er0]
02:CD84 11-94 55-D1              1908   	st	r4,	cursor_pos
02:CD88 AB CE                    1909   	bal	_$calc_cursor_pos
                                 1910   
02:CD8A                          1911   _$right:
02:CD8A 7E B0                    1912   	l	er0,	-02[fp]
02:CD8C 1A-90                    1913   	sll	r0,	#1
02:CD8E 66-F0                    1914   	add	er0,	er6
02:CD90 00-92                    1915   	l	r2,	[er0]
02:CD92 10-94 55-D1              1916   	l	r4,	cursor_pos
02:CD96 27-84                    1917   	cmp	r4,	r2
02:CD98 04 C0                    1918   	bge	_$L94
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  38 
 Title : 
## Loc. Object                   Line   Source Statements

02:CD9A 01 14                    1919   	add	r4,	#1
02:CD9C 11-94 55-D1              1920   	st	r4,	cursor_pos
02:CDA0 9F CE                    1921   	bal	_$calc_cursor_pos
02:CDA2                          1922   _$L94:
02:CDA2 84 E0                    1923   	add	er0,	#4
02:CDA4 E7-F0                    1924   	cmp	er0,	fp
02:CDA6 02-C1                    1925   	gbge	_$loop17
02:CDA8 00-F2 A6-CC               >>>   
02:CDAC 00 04                    1926   	mov	r4,	#0
02:CDAE 11-94 55-D1              1927   	st	r4,	cursor_pos
02:CDB2 7E B0                    1928   	l	er0,	-02[fp]
02:CDB4 81 E0                    1929   	add	er0,	#1
02:CDB6 FE B0                    1930   	st	er0,	-02[fp]
02:CDB8 93 CE                    1931   	bal	_$calc_cursor_pos
                                 1932   
02:CDBA                          1933   _$enter:
02:CDBA 5E-F8                    1934   	push	er8
02:CDBC 8A-F0                    1935   	lea	[er8]
02:CDBE 82 E8                    1936   	add	er8,	#2
02:CDC0                          1937   _$loop24:
02:CDC0 00 E0                    1938   	mov	er0,	#0
02:CDC2 C5-F2                    1939   	mov	er2,	bp
02:CDC4                          1940   _$loop25:
02:CDC4 20-94                    1941   	l	r4,	[er2]
02:CDC6 06 C9                    1942   	beq	_$L95
02:CDC8 4B-91                    1943   	sllc	r1,	#4
02:CDCA 4A-90                    1944   	sll	r0,	#4
02:CDCC 0F 24                    1945   	and	r4,	#0Fh
02:CDCE 43-80                    1946   	or	r0,	r4
02:CDD0 81 E2                    1947   	add	er2,	#1
02:CDD2 F8 CE                    1948   	bal	_$loop25
02:CDD4                          1949   _$L95:
02:CDD4 53-90                    1950   	st	er0,	[ea+]
02:CDD6 82-96                    1951   	l	er6,	[er8]
02:CDD8 66-FC                    1952   	add	bp,	er6
02:CDDA 81 EC                    1953   	add	bp,	#1
02:CDDC 82 E8                    1954   	add	er8,	#2
02:CDDE 80-90                    1955   	l	r0,	[er8]
02:CDE0 82 E8                    1956   	add	er8,	#2
02:CDE2 FF 70                    1957   	cmp	r0,	#0FFh
02:CDE4 ED C8                    1958   	bne	_$loop24
02:CDE6 1E-F0                    1959   	pop	er0
02:CDE8 01 02                    1960   	mov	r2,	#1
02:CDEA 4E CE                    1961   	gjmp	_$input_screen_ret
                                 1962   
02:CDEC                          1963   _$ac:
02:CDEC 85-F0                    1964   	mov	er0,	er8
02:CDEE 00 02                    1965   	mov	r2,	#0
02:CDF0 4B CE                    1966   	gjmp	_$input_screen_ret
                                 1967   
02:CDF2                          1968   _$input_screen_repaint:
02:CDF2 7E-F8                    1969   	push	qr8
02:CDF4 6E-F4                    1970   	push	xr4
02:CDF6 1A-AE                    1971   	mov	fp,	sp
                                 1972   ;the string to render should not be too
                                         long.
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  39 
 Title : 
## Loc. Object                   Line   Source Statements

02:CDF8 E0 E1                    1973   	add	sp,	#-20h
02:CDFA 1A-AC                    1974   	mov	bp,	sp
                                 1975   
02:CDFC 01-F0 00-7F              1976   	bl	_clear_DDD4
02:CE00 0E E0                    1977   	mov	er0,	#0Eh
02:CE02 11-90 37-D1              1978   	st	r0,	font_size
02:CE06 11-91 38-D1              1979   	st	r1,	font_color
02:CE0A 01 00                    1980   	mov	r0,	#1
02:CE0C 11-90 39-D1              1981   	st	r0,	curr_buffer
                                 1982   
                                 1983   ;render strings first.
02:CE10 AA-F0                    1984   	lea	[er10]
02:CE12                          1985   _$loop18:
02:CE12 52-94                    1986   	l	er4,	[ea+]
02:CE14 FF 74                    1987   	cmp	r4,	#0FFh
02:CE16 0C C9                    1988   	beq	_$L75
02:CE18 52-92                    1989   	l	er2,	[ea+]
02:CE1A CE-F1                    1990   	push	ea
02:CE1C CA-F0                    1991   	lea	[bp]
02:CE1E 01-F2 52-D5              1992   	bl	_$L1
02:CE22 31-90                    1993   	st	r0,	[ea]
02:CE24 45-F0                    1994   	mov	er0,	er4
02:CE26 C5-F2                    1995   	mov	er2,	bp
02:CE28 01-F0 1E-82              1996   	bl	_line_print
02:CE2C 8E-F1                    1997   	pop	ea
02:CE2E F1 CE                    1998   	bal	_$loop18
02:CE30                          1999   _$L75:
                                 2000   ;render input buffer
02:CE30 48 BA                    2001   	l	er10,	08[fp]
02:CE32 8A-F0                    2002   	lea	[er8]
02:CE34                          2003   _$loop19:
02:CE34 52-94                    2004   	l	er4,	[ea+]
02:CE36 FF 74                    2005   	cmp	r4,	#0FFh
02:CE38 14 C9                    2006   	beq	_$L76
02:CE3A 52-92                    2007   	l	er2,	[ea+]
02:CE3C 81 E2                    2008   	add	er2,	#1
02:CE3E CE-F1                    2009   	push	ea
02:CE40 CA-F0                    2010   	lea	[bp]
02:CE42                          2011   _$loop20:
02:CE42 A0-90                    2012   	l	r0,	[er10]
02:CE44 81 EA                    2013   	add	er10,	#1
02:CE46 3A 70                    2014   	cmp	r0,	#3Ah
02:CE48 01 C1                    2015   	blt	_$L77
02:CE4A 07 10                    2016   	add	r0,	#7
02:CE4C                          2017   _$L77:
02:CE4C 51-90                    2018   	st	r0,	[ea+]
02:CE4E FF E2                    2019   	add	er2,	#-1
02:CE50 F8 C8                    2020   	bne	_$loop20
02:CE52 45-F0                    2021   	mov	er0,	er4
02:CE54 C5-F2                    2022   	mov	er2,	bp
02:CE56 03 10                    2023   	add	r0,	#3
02:CE58 03 11                    2024   	add	r1,	#3
02:CE5A 01-F0 1E-82              2025   	bl	_line_print
02:CE5E 8E-F1                    2026   	pop	ea
02:CE60 E9 CE                    2027   	bal	_$loop19
02:CE62                          2028   _$L76:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  40 
 Title : 
## Loc. Object                   Line   Source Statements

                                 2029   ;render input box
02:CE62 8A-F0                    2030   	lea	[er8]
02:CE64                          2031   _$loop21:
02:CE64 52-90                    2032   	l	er0,	[ea+]
02:CE66 FF 70                    2033   	cmp	r0,	#0FFh
02:CE68 08 C9                    2034   	beq	_$L78
02:CE6A 52-92                    2035   	l	er2,	[ea+]
02:CE6C 0B 03                    2036   	mov	r3,	#0Bh
02:CE6E 34-F2                    2037   	mul	er2,	r3
02:CE70 88 E2                    2038   	add	er2,	#8
02:CE72 14 03                    2039   	mov	r3,	#14h
02:CE74 01-F2 48-D0              2040   	bl	_draw_rect
02:CE78 F5 CE                    2041   	bal	_$loop21
02:CE7A                          2042   _$L78:
02:CE7A 01-F0 04-87              2043   	bl	_render_DDD4
                                 2044   
02:CE7E EA-A1                    2045   	mov	sp,	fp
02:CE80 2E-F4                    2046   	pop	xr4
02:CE82 3E-F8                    2047   	pop	qr8
02:CE84 00-F2 A6-CC              2048   	gjmp	_$loop17
                                 2049   
02:CE88                          2050   _$input_screen_ret:
02:CE88 00-F0 2A-9D              2051   	b	_leave
                                 2052   
02:CE8C                          2053   _goto_screen:
02:CE8C CE-F8                    2054   	push	lr
02:CE8E 5E-FE                    2055   	push	fp
02:CE90 6E-F4                    2056   	push	xr4
02:CE92 1A-AE                    2057   	mov	fp,	sp
02:CE94 05-F6                    2058   	mov	er6,	er0
02:CE96 FF 04                    2059   	mov	r4,	#0FFh
02:CE98 4E-F4                    2060   	push	r4
02:CE9A 04 E0                    2061   	mov	er0,	#4
02:CE9C 5E-F0                    2062   	push	er0
02:CE9E 42 00                    2063   	mov	r0,	#42h
02:CEA0 0C 01                    2064   	mov	r1,	#0Ch
02:CEA2 5E-F0                    2065   	push	er0
02:CEA4 1A-A0                    2066   	mov	er0,	sp
02:CEA6 4E-F4                    2067   	push	r4
02:CEA8 F8 02                    2068   	mov	r2,	#byte1 offset _
                                        goto
02:CEAA D9 03                    2069   	mov	r3,	#byte2 offset _
                                        goto
02:CEAC 5E-F2                    2070   	push	er2
02:CEAE 00 02                    2071   	mov	r2,	#0
02:CEB0 10 03                    2072   	mov	r3,	#10h
02:CEB2 5E-F2                    2073   	push	er2
02:CEB4 1A-A2                    2074   	mov	er2,	sp
02:CEB6 05-F4                    2075   	mov	er4,	er0
02:CEB8 01-F2 58-CC              2076   	bl	_input_screen
02:CEBC 42-90                    2077   	l	er0,	[er4]
02:CEBE 63-90                    2078   	st	er0,	[er6]
02:CEC0 00 72                    2079   	cmp	r2,	#0
02:CEC2 02 C8                    2080   	bne	_$L114
02:CEC4 00 00                    2081   	mov	r0,	#0
02:CEC6 01 CE                    2082   	bal	_$L115
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  41 
 Title : 
## Loc. Object                   Line   Source Statements

02:CEC8                          2083   _$L114:
02:CEC8 05 00                    2084   	mov	r0,	#5
02:CECA                          2085   _$L115:
02:CECA EA-A1                    2086   	mov	sp,	fp
02:CECC 2E-F4                    2087   	pop	xr4
02:CECE 1E-FE                    2088   	pop	fp
02:CED0 8E-F2                    2089   	pop	pc
                                 2090   
02:CED2                          2091   _move_fn:
02:CED2 CE-F8                    2092   	push	lr
02:CED4 6E-FC                    2093   	push	xr12
02:CED6 6E-F4                    2094   	push	xr4
02:CED8 08 06                    2095   	mov	r6,	#byte1 offset _
                                        move_str
02:CEDA DA 07                    2096   	mov	r7,	#byte2 offset _
                                        move_str
02:CEDC 06 0D                    2097   	mov	r13,	#6
02:CEDE 06 CE                    2098   	bal	_copy_move_fn
                                 2099   
02:CEE0                          2100   _copy_fn:
02:CEE0 CE-F8                    2101   	push	lr
02:CEE2 6E-FC                    2102   	push	xr12
02:CEE4 6E-F4                    2103   	push	xr4
02:CEE6 13 06                    2104   	mov	r6,	#byte1 offset _
                                        copy_str
02:CEE8 DA 07                    2105   	mov	r7,	#byte2 offset _
                                        copy_str
02:CEEA 07 0D                    2106   	mov	r13,	#7
02:CEEC                          2107   _copy_move_fn:
02:CEEC 1A-AE                    2108   	mov	fp,	sp
02:CEEE 05-F4                    2109   	mov	er4,	er0
02:CEF0 FF 0C                    2110   	mov	r12,	#0FFh
02:CEF2 4E-FC                    2111   	push	r12
02:CEF4 04 E2                    2112   	mov	er2,	#4
02:CEF6 5E-F2                    2113   	push	er2
02:CEF8 50 00                    2114   	mov	r0,	#50h
02:CEFA 26 01                    2115   	mov	r1,	#26h
02:CEFC 5E-F0                    2116   	push	er0
02:CEFE 5E-F2                    2117   	push	er2
02:CF00 02 00                    2118   	mov	r0,	#2
02:CF02 26 01                    2119   	mov	r1,	#26h
02:CF04 5E-F0                    2120   	push	er0
02:CF06 5E-F2                    2121   	push	er2
02:CF08 02 00                    2122   	mov	r0,	#2
02:CF0A 10 01                    2123   	mov	r1,	#10h
02:CF0C 5E-F0                    2124   	push	er0
02:CF0E 1A-A0                    2125   	mov	er0,	sp
02:CF10 4E-FC                    2126   	push	r12
02:CF12 29 02                    2127   	mov	r2,	#byte1 offset _
                                        copy_str_2
02:CF14 DA 03                    2128   	mov	r3,	#byte2 offset _
                                        copy_str_2
02:CF16 5E-F2                    2129   	push	er2
02:CF18 36 02                    2130   	mov	r2,	#36h
02:CF1A 28 03                    2131   	mov	r3,	#28h
02:CF1C 5E-F2                    2132   	push	er2
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  42 
 Title : 
## Loc. Object                   Line   Source Statements

02:CF1E 1E 02                    2133   	mov	r2,	#byte1 offset _
                                        copy_str_1
02:CF20 DA 03                    2134   	mov	r3,	#byte2 offset _
                                        copy_str_1
02:CF22 5E-F2                    2135   	push	er2
02:CF24 36 02                    2136   	mov	r2,	#36h
02:CF26 14 03                    2137   	mov	r3,	#14h
02:CF28 5E-F2                    2138   	push	er2
02:CF2A 5E-F6                    2139   	push	er6
02:CF2C 00 02                    2140   	mov	r2,	#0
02:CF2E 01 03                    2141   	mov	r3,	#1
02:CF30 5E-F2                    2142   	push	er2
02:CF32 1A-A2                    2143   	mov	er2,	sp
02:CF34 D0-86                    2144   	mov	r6,	r13
02:CF36 05-FC                    2145   	mov	bp,	er0
02:CF38 01-F2 58-CC              2146   	bl	_input_screen
02:CF3C 00 72                    2147   	cmp	r2,	#0
02:CF3E 09 C9                    2148   	beq	_$L127
02:CF40 4A-F0                    2149   	lea	[er4]
02:CF42 04 B0                    2150   	l	er0,	04[bp]
02:CF44 53-90                    2151   	st	er0,	[ea+]
02:CF46 02 B0                    2152   	l	er0,	02[bp]
02:CF48 53-90                    2153   	st	er0,	[ea+]
02:CF4A C2-90                    2154   	l	er0,	[bp]
02:CF4C 33-90                    2155   	st	er0,	[ea]
02:CF4E 60-80                    2156   	mov	r0,	r6
02:CF50 01 CE                    2157   	bal	_$L128
02:CF52                          2158   _$L127:
02:CF52 00 00                    2159   	mov	r0,	#0
02:CF54                          2160   _$L128:
02:CF54 EA-A1                    2161   	mov	sp,	fp
02:CF56 2E-F4                    2162   	pop	xr4
02:CF58 2E-FC                    2163   	pop	xr12
02:CF5A 8E-F2                    2164   	pop	pc
                                 2165   
02:CF5C                          2166   _fill_fn:
02:CF5C CE-F8                    2167   	push	lr
02:CF5E 6E-FC                    2168   	push	xr12
02:CF60 5E-F4                    2169   	push	er4
02:CF62 1A-AE                    2170   	mov	fp,	sp
02:CF64 05-F4                    2171   	mov	er4,	er0
02:CF66 FF 0C                    2172   	mov	r12,	#0FFh
02:CF68 4E-FC                    2173   	push	r12
02:CF6A 02 E2                    2174   	mov	er2,	#2
02:CF6C 5E-F2                    2175   	push	er2
02:CF6E 64 00                    2176   	mov	r0,	#64h
02:CF70 26 01                    2177   	mov	r1,	#26h
02:CF72 5E-F0                    2178   	push	er0
02:CF74 04 E2                    2179   	mov	er2,	#4
02:CF76 5E-F2                    2180   	push	er2
02:CF78 02 00                    2181   	mov	r0,	#2
02:CF7A 26 01                    2182   	mov	r1,	#26h
02:CF7C 5E-F0                    2183   	push	er0
02:CF7E 5E-F2                    2184   	push	er2
02:CF80 02 00                    2185   	mov	r0,	#2
02:CF82 10 01                    2186   	mov	r1,	#10h
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  43 
 Title : 
## Loc. Object                   Line   Source Statements

02:CF84 5E-F0                    2187   	push	er0
02:CF86 1A-A0                    2188   	mov	er0,	sp
02:CF88 4E-FC                    2189   	push	r12
02:CF8A 37 02                    2190   	mov	r2,	#byte1 offset _
                                        fill_str_1
02:CF8C DA 03                    2191   	mov	r3,	#byte2 offset _
                                        fill_str_1
02:CF8E 5E-F2                    2192   	push	er2
02:CF90 36 02                    2193   	mov	r2,	#36h
02:CF92 28 03                    2194   	mov	r3,	#28h
02:CF94 5E-F2                    2195   	push	er2
02:CF96 1E 02                    2196   	mov	r2,	#byte1 offset _
                                        copy_str_1
02:CF98 DA 03                    2197   	mov	r3,	#byte2 offset _
                                        copy_str_1
02:CF9A 5E-F2                    2198   	push	er2
02:CF9C 36 02                    2199   	mov	r2,	#36h
02:CF9E 14 03                    2200   	mov	r3,	#14h
02:CFA0 5E-F2                    2201   	push	er2
02:CFA2 2C 02                    2202   	mov	r2,	#byte1 offset _
                                        fill_str
02:CFA4 DA 03                    2203   	mov	r3,	#byte2 offset _
                                        fill_str
02:CFA6 5E-F2                    2204   	push	er2
02:CFA8 00 02                    2205   	mov	r2,	#0
02:CFAA 01 03                    2206   	mov	r3,	#1
02:CFAC 5E-F2                    2207   	push	er2
02:CFAE 1A-A2                    2208   	mov	er2,	sp
02:CFB0 05-FC                    2209   	mov	bp,	er0
02:CFB2 01-F2 58-CC              2210   	bl	_input_screen
02:CFB6 00 72                    2211   	cmp	r2,	#0
02:CFB8 09 C9                    2212   	beq	_$L129
02:CFBA 4A-F0                    2213   	lea	[er4]
02:CFBC 02 B0                    2214   	l	er0,	02[bp]
02:CFBE 53-90                    2215   	st	er0,	[ea+]
02:CFC0 C2-90                    2216   	l	er0,	[bp]
02:CFC2 53-90                    2217   	st	er0,	[ea+]
02:CFC4 04 D0                    2218   	l	r0,	04[bp]
02:CFC6 31-90                    2219   	st	r0,	[ea]
02:CFC8 08 00                    2220   	mov	r0,	#8
02:CFCA 01 CE                    2221   	bal	_$L130
02:CFCC                          2222   _$L129:
02:CFCC 00 00                    2223   	mov	r0,	#0
02:CFCE                          2224   _$L130:
02:CFCE EA-A1                    2225   	mov	sp,	fp
02:CFD0 1E-F4                    2226   	pop	er4
02:CFD2 2E-FC                    2227   	pop	xr12
02:CFD4 8E-F2                    2228   	pop	pc
                                 2229   
02:CFD6                          2230   _insert_1_fn:
02:CFD6 00 00                    2231   	mov	r0,	#0
02:CFD8 11-90 6B-D1              2232   	st	r0,	inst_insert
02:CFDC 01 00                    2233   	mov	r0,	#1
02:CFDE 1F-FE                    2234   	rt
                                 2235   
02:CFE0                          2236   _insert_2_fn:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  44 
 Title : 
## Loc. Object                   Line   Source Statements

02:CFE0 01 00                    2237   	mov	r0,	#1
02:CFE2 11-90 6B-D1              2238   	st	r0,	inst_insert
02:CFE6 1F-FE                    2239   	rt
                                 2240   
02:CFE8                          2241   _insert_3_fn:
02:CFE8 02 00                    2242   	mov	r0,	#2
02:CFEA 11-90 6B-D1              2243   	st	r0,	inst_insert
02:CFEE 1F-FE                    2244   	rt
                                 2245   
02:CFF0                          2246   _insert_set_screen:
02:CFF0 CE-F8                    2247   	push	lr
02:CFF2 00 00                    2248   	mov	r0,	#0
02:CFF4 4E-F0                    2249   	push	r0
02:CFF6 34 00                    2250   	mov	r0,	#byte1 offset _
                                        insert_set_table
02:CFF8 D6 01                    2251   	mov	r1,	#byte2 offset _
                                        insert_set_table
02:CFFA 5E-F0                    2252   	push	er0
02:CFFC 00 E0                    2253   	mov	er0,	#0
02:CFFE 00 E2                    2254   	mov	er2,	#0
02:D000 01-F2 42-C5              2255   	bl	_optn_menu
02:D004 04 E1                    2256   	add	sp,	#4
02:D006 00 00                    2257   	mov	r0,	#0
02:D008 8E-F2                    2258   	pop	pc
                                 2259   
02:D00A                          2260   _start_addr_set:
02:D00A CE-F8                    2261   	push	lr
02:D00C 01-F2 82-C6              2262   	bl	_address_input
02:D010 20-82                    2263   	mov	r2,	r2
02:D012 02 C9                    2264   	beq	_$L125
02:D014 13-90 00-D1              2265   	st	er0,	start_addr
02:D018                          2266   _$L125:
02:D018 00 00                    2267   	mov	r0,	#0
02:D01A 8E-F2                    2268   	pop	pc
                                 2269   
02:D01C                          2270   _end_addr_set:
02:D01C CE-F8                    2271   	push	lr
02:D01E 01-F2 82-C6              2272   	bl	_address_input
02:D022 20-82                    2273   	mov	r2,	r2
02:D024 02 C9                    2274   	beq	_$L126
02:D026 13-90 02-D1              2275   	st	er0,	end_addr
02:D02A                          2276   _$L126:
02:D02A 00 00                    2277   	mov	r0,	#0
02:D02C 8E-F2                    2278   	pop	pc
                                 2279   
                                 2280   ;settings wont need extra handling in m
                                        ain function. simply return 0
02:D02E                          2281   _settings_screen:
02:D02E CE-F8                    2282   	push	lr
02:D030 00 00                    2283   	mov	r0,	#0
02:D032 4E-F0                    2284   	push	r0
02:D034 24 00                    2285   	mov	r0,	#byte1 offset _
                                        settings_table
02:D036 D6 01                    2286   	mov	r1,	#byte2 offset _
                                        settings_table
02:D038 5E-F0                    2287   	push	er0
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  45 
 Title : 
## Loc. Object                   Line   Source Statements

02:D03A 00 E0                    2288   	mov	er0,	#0
02:D03C 00 E2                    2289   	mov	er2,	#0
02:D03E 01-F2 42-C5              2290   	bl	_optn_menu
02:D042 04 E1                    2291   	add	sp,	#4
02:D044 00 00                    2292   	mov	r0,	#0
02:D046 8E-F2                    2293   	pop	pc
                                 2294   
                                 2295   ;er0-position er2-size
02:D048                          2296   _draw_rect:
02:D048 7E-F8                    2297   	push	qr8
02:D04A 6E-F4                    2298   	push	xr4
02:D04C 01-82                    2299   	add	r2,	r0
02:D04E 00 04                    2300   	mov	r4,	#0
02:D050 FF 05                    2301   	mov	r5,	#0FFh
02:D052 00 06                    2302   	mov	r6,	#0
02:D054 01 07                    2303   	mov	r7,	#1
02:D056 2D-84                    2304   	srlc	r4,	r2
02:D058 0C-85                    2305   	srl	r5,	r0
02:D05A 2D-86                    2306   	srlc	r6,	r2
02:D05C 80 07                    2307   	mov	r7,	#80h
02:D05E 0C-87                    2308   	srl	r7,	r0
02:D060 3C-90                    2309   	srl	r0,	#3
02:D062 3C-92                    2310   	srl	r2,	#3
02:D064 18 08                    2311   	mov	r8,	#18h
02:D066 80-8C                    2312   	mov	r12,	r8
02:D068 14-F8                    2313   	mul	er8,	r1
02:D06A 34-FC                    2314   	mul	er12,	r3
02:D06C 00 01                    2315   	mov	r1,	#0
02:D06E FF 03                    2316   	mov	r3,	#0FFh
02:D070 10-9A 39-D1              2317   	l	r10,	curr_buffer
02:D074 02 C8                    2318   	bne	_$L37
02:D076 E3 0B                    2319   	mov	r11,	#0E3h
02:D078 01 CE                    2320   	bal	_$L38
02:D07A                          2321   _$L37:
02:D07A DD 0B                    2322   	mov	r11,	#0DDh
02:D07C                          2323   _$L38:
02:D07C D4 0A                    2324   	mov	r10,	#0D4h
02:D07E A6-F8                    2325   	add	er8,	er10
02:D080 06-F8                    2326   	add	er8,	er0
02:D082 86-FC                    2327   	add	er12,	er8
02:D084 85-FE                    2328   	mov	er14,	er8
02:D086 08-82                    2329   	sub	r2,	r0
02:D088 02 C8                    2330   	bne	_$L39
02:D08A 52-84                    2331   	and	r4,	r5
02:D08C 0D CE                    2332   	bal	_$L40
02:D08E                          2333   _$L39:
02:D08E 80-90                    2334   	l	r0,	[er8]
02:D090 53-80                    2335   	or	r0,	r5
02:D092 81-90                    2336   	st	r0,	[er8]
02:D094 C0-90                    2337   	l	r0,	[er12]
02:D096 53-80                    2338   	or	r0,	r5
02:D098 C1-90                    2339   	st	r0,	[er12]
02:D09A                          2340   _$loop6:
02:D09A 81 E8                    2341   	add	er8,	#1
02:D09C 81 EC                    2342   	add	er12,	#1
02:D09E FF 12                    2343   	add	r2,	#-1
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  46 
 Title : 
## Loc. Object                   Line   Source Statements

02:D0A0 03 C9                    2344   	beq	_$L40
02:D0A2 81-93                    2345   	st	r3,	[er8]
02:D0A4 C1-93                    2346   	st	r3,	[er12]
02:D0A6 F9 CE                    2347   	bal	_$loop6
02:D0A8                          2348   _$L40:
02:D0A8 80-90                    2349   	l	r0,	[er8]
02:D0AA 43-80                    2350   	or	r0,	r4
02:D0AC 81-90                    2351   	st	r0,	[er8]
02:D0AE C0-90                    2352   	l	r0,	[er12]
02:D0B0 43-80                    2353   	or	r0,	r4
02:D0B2 C1-90                    2354   	st	r0,	[er12]
02:D0B4 00 76                    2355   	cmp	r6,	#0
02:D0B6 02 C8                    2356   	bne	_$loop7
02:D0B8 01 06                    2357   	mov	r6,	#1
02:D0BA FF E8                    2358   	add	er8,	#-1
02:D0BC                          2359   _$loop7:
02:D0BC 98 E8                    2360   	add	er8,	#18h
02:D0BE 98 EE                    2361   	add	er14,	#18h
02:D0C0 C7-F8                    2362   	cmp	er8,	er12
02:D0C2 07 C0                    2363   	bge	_$L41
02:D0C4 80-90                    2364   	l	r0,	[er8]
02:D0C6 63-80                    2365   	or	r0,	r6
02:D0C8 81-90                    2366   	st	r0,	[er8]
02:D0CA E0-90                    2367   	l	r0,	[er14]
02:D0CC 73-80                    2368   	or	r0,	r7
02:D0CE E1-90                    2369   	st	r0,	[er14]
02:D0D0 F5 CE                    2370   	bal	_$loop7
02:D0D2                          2371   _$L41:
02:D0D2 2E-F4                    2372   	pop	xr4
02:D0D4 3E-F8                    2373   	pop	qr8
02:D0D6 1F-FE                    2374   	rt
                                 2375   
02:D0D8                          2376   _get_line_pointer:
02:D0D8 1A-90                    2377   	sll	r0,	#1
02:D0DA 00 01                    2378   	mov	r1,	#0
02:D0DC E6-F0                    2379   	add	er0,	fp
02:D0DE F6 E0                    2380   	add	er0,	#-0Ah
02:D0E0 1F-FE                    2381   	rt
                                 2382   
02:D0E2                          2383   _menu_handle:
02:D0E2 CE-F8                    2384   	push	lr
02:D0E4 00 00                    2385   	mov	r0,	#0
02:D0E6 11-90 42-D1              2386   	st	r0,	undefined1
02:D0EA 11-90 64-D1              2387   	st	r0,	undefined2
02:D0EE 11-90 65-D1              2388   	st	r0,	undefined3
02:D0F2 11-90 10-D1              2389   	st	r0,	key_identifier
02:D0F6 01-F2 0C-D1              2390   	bl	_reset_SFR
02:D0FA 01 00                    2391   	mov	r0,	#1
02:D0FC 11-90 13-D1              2392   	st	r0,	screen_state
02:D100 01-F2 C8-63              2393   	bl	_display_menu
02:D104 00 01                    2394   	mov	r1,	#0
02:D106 11-91 13-D1              2395   	st	r1,	screen_state
02:D10A 8E-F2                    2396   	pop	pc
                                 2397   
02:D10C                          2398   _reset_SFR:
02:D10C 01 00                    2399   	mov	r0,	#1
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  47 
 Title : 
## Loc. Object                   Line   Source Statements

02:D10E 11-90 0A-F0              2400   	st	r0,	FCON
02:D112 22 00                    2401   	mov	r0,	#22h
02:D114 11-90 10-F0              2402   	st	r0,	IE0
02:D118 03 00                    2403   	mov	r0,	#3
02:D11A 11-90 18-F0              2404   	st	r0,	EXICON0
02:D11E 17 00                    2405   	mov	r0,	#17h
02:D120 11-90 28-F0              2406   	st	r0,	BLKCON0
02:D124 1F-FE                    2407   	rt
                                 2408   
02:D126                          2409   _get_keycode_fixed:
02:D126 CE-F8                    2410   	push	lr
02:D128 01-F0 22-9D              2411   	bl	_enter
02:D12C 05-F8                    2412   	mov	er8,	er0
02:D12E 01 04                    2413   	mov	r4,	#1
02:D130 01 01                    2414   	mov	r1,	#1
02:D132 01 03                    2415   	mov	r3,	#1
02:D134                          2416   _$get_key_loop:
02:D134 11-91 46-F0              2417   	st	r1,	KOD0
02:D138 00 02                    2418   	mov	r2,	#0
02:D13A 10-90 40-F0              2419   	l	r0,	KID
02:D13E 11-92 46-F0              2420   	st	r2,	KOD0
02:D142 00-82                    2421   	mov	r2,	r0
02:D144 FF 70                    2422   	cmp	r0,	#0FFh
02:D146 05 C9                    2423   	beq	_$continue
02:D148 89-91 01-00              2424   	st	r1,	01h[er8]
02:D14C FF 40                    2425   	xor	r0,	#0FFh
02:D14E 81-90                    2426   	st	r0,	[er8]
02:D150 05 CE                    2427   	bal	_$get_key_ret
02:D152                          2428   _$continue:
02:D152 1A-91                    2429   	sll	r1,	#1
02:D154 01 13                    2430   	add	r3,	#1
02:D156 07 73                    2431   	cmp	r3,	#7
02:D158 ED C3                    2432   	ble	_$get_key_loop
02:D15A 00 04                    2433   	mov	r4,	#0
02:D15C                          2434   _$get_key_ret:
02:D15C 01-F0 9A-93              2435   	bl	_reset_ko
02:D160 40-80                    2436   	mov	r0,	r4
02:D162 00-F0 2A-9D              2437   	b	_leave
                                 2438   
                                 2439   ;er0-pointer to the instruction
                                 2440   ;return:er0-pointer to the next instruc
                                        tion
02:D166                          2441   _ins_length:
02:D166 4E-F2                    2442   	push	r2
02:D168 00-92                    2443   	l	r2,	[er0]
02:D16A 0C 72                    2444   	cmp	r2,	#0Ch
02:D16C 1E C1                    2445   	blt	_$2_byte
02:D16E 10 72                    2446   	cmp	r2,	#10h
02:D170 1E C1                    2447   	blt	_$3_byte
02:D172 22 72                    2448   	cmp	r2,	#22h
02:D174 1A C1                    2449   	blt	_$2_byte
02:D176 24 72                    2450   	cmp	r2,	#24h
02:D178 1A C1                    2451   	blt	_$3_byte
02:D17A 17 C9                    2452   	beq	_$2_byte
02:D17C 26 72                    2453   	cmp	r2,	#26h
02:D17E 17 C1                    2454   	blt	_$3_byte
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  48 
 Title : 
## Loc. Object                   Line   Source Statements

02:D180 30 72                    2455   	cmp	r2,	#30h
02:D182 15 C1                    2456   	blt	_$3_byte
02:D184 3C 72                    2457   	cmp	r2,	#3Ch
02:D186 0F C1                    2458   	blt	_$1_byte
02:D188 4E 72                    2459   	cmp	r2,	#4Eh
02:D18A 11 C1                    2460   	blt	_$3_byte
02:D18C 5A 72                    2461   	cmp	r2,	#5Ah
02:D18E 0B C1                    2462   	blt	_$1_byte
02:D190 C6 72                    2463   	cmp	r2,	#0C6h
02:D192 0B C1                    2464   	blt	_$2_byte
02:D194 DE 72                    2465   	cmp	r2,	#0DEh
02:D196 0B C1                    2466   	blt	_$3_byte
02:D198 F7 72                    2467   	cmp	r2,	#0F7h
02:D19A 07 C9                    2468   	beq	_$2_byte
02:D19C FB 72                    2469   	cmp	r2,	#0FBh
02:D19E 03 C1                    2470   	blt	_$1_byte
02:D1A0 FD 72                    2471   	cmp	r2,	#0FDh
02:D1A2 05 C1                    2472   	blt	_$3_byte
02:D1A4 06 C9                    2473   	beq	_$4_byte
02:D1A6                          2474   _$1_byte:
02:D1A6 81 E0                    2475   	add	er0,	#1
02:D1A8 05 CE                    2476   	bal	_$L21
02:D1AA                          2477   _$2_byte:
02:D1AA 82 E0                    2478   	add	er0,	#2
02:D1AC 03 CE                    2479   	bal	_$L21
02:D1AE                          2480   _$3_byte:
02:D1AE 83 E0                    2481   	add	er0,	#3
02:D1B0 01 CE                    2482   	bal	_$L21
02:D1B2                          2483   _$4_byte:
02:D1B2 84 E0                    2484   	add	er0,	#4
02:D1B4                          2485   _$L21:
02:D1B4 0E-F2                    2486   	pop	r2
02:D1B6 1F-FE                    2487   	rt
                                 2488   
                                 2489   ;er0-pointer to the instruction er2-poi
                                        nter to the target string
                                 2490   ;return:er0-pointer to the next instruc
                                        tion
02:D1B8                          2491   _decode_ins:
02:D1B8 CE-F8                    2492   	push	lr
02:D1BA 01-F0 22-9D              2493   	bl	_enter
02:D1BE 05-F8                    2494   	mov	er8,	er0
02:D1C0 2A-F0                    2495   	lea	[er2]
02:D1C2 80-90                    2496   	l	r0,	[er8]
02:D1C4 81 E8                    2497   	add	er8,	#1
02:D1C6 00 01                    2498   	mov	r1,	#0
02:D1C8 10 70                    2499   	cmp	r0,	#10h
02:D1CA 2A C1                    2500   	blt	_$ins_00_0F
02:D1CC 26 70                    2501   	cmp	r0,	#26h
02:D1CE 31 C1                    2502   	blt	_$ins_10_25
02:D1D0 30 70                    2503   	cmp	r0,	#30h
02:D1D2 2A C1                    2504   	blt	_$ins_bcond
02:D1D4 5A 70                    2505   	cmp	r0,	#5Ah
02:D1D6 48 C1                    2506   	blt	_$ins_30_59
02:D1D8 F6 70                    2507   	cmp	r0, #0F6h
02:D1DA 64 C1                    2508   	blt	_$ins_5A_F5
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  49 
 Title : 
## Loc. Object                   Line   Source Statements

                                 2509   ;miscellaneous instructions
02:D1DC 0A 10                    2510   	add	r0,	#0Ah
02:D1DE 00-84                    2511   	mov	r4,	r0
02:D1E0 01-F2 44-D5              2512   	bl	_extract_string
02:D1E4 01 74                    2513   	cmp	r4,	#1
02:D1E6 15 C9                    2514   	beq	_$add_sp
02:D1E8 05 74                    2515   	cmp	r4,	#5
02:D1EA 73 C1                    2516   	blt	_$ret
02:D1EC 07 74                    2517   	cmp	r4,	#7
02:D1EE 02 C1                    2518   	blt	_$jump
02:D1F0 04 C9                    2519   	beq	_$call
02:D1F2 6F CE                    2520   	bal	_$ret
02:D1F4                          2521   _$jump:
02:D1F4 01-F2 20-D3              2522   	bl	_imm16
02:D1F8 6C CE                    2523   	bal	_$ret
02:D1FA                          2524   _$call:
02:D1FA 80-90                    2525   	l	r0,	[er8]
02:D1FC 81 E8                    2526   	add	er8,	#1
02:D1FE 01-F2 92-24              2527   	bl	_hex_byte
02:D202 51-91                    2528   	st	r1,	[ea+]
02:D204 3A 00                    2529   	mov	r0,	#3Ah
02:D206 51-90                    2530   	st	r0,	[ea+]
02:D208 01-F2 0E-D3              2531   	bl	_imm8
02:D20C 01-F2 0E-D3              2532   	bl	_imm8
02:D210 60 CE                    2533   	bal	_$ret
02:D212                          2534   _$add_sp:
02:D212 2C 02                    2535   	mov	r2,	#2Ch
02:D214 20 03                    2536   	mov	r3,	#20h
02:D216 51-92                    2537   	st	r2,	[ea+]
02:D218 51-93                    2538   	st	r3,	[ea+]
02:D21A 01-F2 F2-D2              2539   	bl	_simm8
02:D21E 59 CE                    2540   	bal	_$ret
                                 2541   
02:D220                          2542   _$ins_00_0F:
02:D220 0C 70                    2543   	cmp	r0,	#0Ch
02:D222 02 C0                    2544   	bge	_$ins_bcond
02:D224 4E 10                    2545   	add	r0,	#4Eh
02:D226 3E CE                    2546   	bal	_$ins_5A_F5
02:D228                          2547   _$ins_bcond:
02:D228 01-F2 44-D5              2548   	bl	_extract_string
02:D22C 01-F2 20-D3              2549   	bl	_imm16
02:D230 50 CE                    2550   	bal	_$ret
                                 2551   
02:D232                          2552   _$ins_10_25:
02:D232 80-96                    2553   	l	r6,	[er8]
02:D234 81 E8                    2554   	add	er8,	#1
02:D236 1F 70                    2555   	cmp	r0,	#1Fh
02:D238 06 C1                    2556   	blt	_$ins_r_r
02:D23A 1A-90                    2557   	sll	r0,	#1
02:D23C 02 E3 08-A4 5A-D5        2558   	l	er4,	far _pointer_ta
                                        ble[er0]
02:D242 43-F0                    2559   	bl	er4
02:D244 46 CE                    2560   	bal	_$ret
02:D246                          2561   _$ins_r_r:
02:D246 01-F2 44-D5              2562   	bl	_extract_string
02:D24A 72 02                    2563   	mov	r2,	#72h
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  50 
 Title : 
## Loc. Object                   Line   Source Statements

02:D24C 20 03                    2564   	mov	r3,	#20h
02:D24E 2C 04                    2565   	mov	r4,	#2Ch
02:D250 60-80                    2566   	mov	r0,	r6
02:D252 4C-90                    2567   	srl	r0,	#4
02:D254 01-F2 DC-D2              2568   	bl	_reg_index
02:D258 51-94                    2569   	st	r4,	[ea+]
02:D25A 51-93                    2570   	st	r3,	[ea+]
02:D25C 51-92                    2571   	st	r2,	[ea+]
02:D25E 60-80                    2572   	mov	r0,	r6
02:D260 0F 20                    2573   	and	r0,	#0Fh
02:D262 01-F2 DC-D2              2574   	bl	_reg_index
02:D266 35 CE                    2575   	bal	_$ret
                                 2576   
02:D268                          2577   _$ins_30_59:
02:D268 06 04                    2578   	mov	r4,	#6
02:D26A 49-F0                    2579   	div	er0,	r4
02:D26C 00-85                    2580   	mov	r5,	r0
02:D26E A8 E0                    2581   	add	er0,	#28h
02:D270 01-F2 44-D5              2582   	bl	_extract_string
02:D274 40-80                    2583   	mov	r0,	r4
02:D276 1A-90                    2584   	sll	r0,	#1
02:D278 01-F2 DC-D2              2585   	bl	_reg_index
02:D27C 2C 00                    2586   	mov	r0,	#2Ch
02:D27E 20 01                    2587   	mov	r1,	#20h
02:D280 08 75                    2588   	cmp	r5,	#8		
                                        		;mov	ern,	sp
02:D282 09 C9                    2589   	beq	_$L3
02:D284 0A 75                    2590   	cmp	r5,	#0Ah
02:D286 25 C1                    2591   	blt	_$ret
02:D288 0C 75                    2592   	cmp	r5,	#0Ch
02:D28A 23 C2                    2593   	bgt	_$ret
02:D28C 51-90                    2594   	st	r0,	[ea+]
02:D28E 51-91                    2595   	st	r1,	[ea+]
02:D290 01-F2 20-D3              2596   	bl	_imm16
02:D294 1E CE                    2597   	bal	_$ret
02:D296                          2598   _$L3:
02:D296 73 02                    2599   	mov	r2,	#73h
02:D298 70 03                    2600   	mov	r3,	#70h
02:D29A 51-90                    2601   	st	r0,	[ea+]
02:D29C 51-91                    2602   	st	r1,	[ea+]
02:D29E 51-92                    2603   	st	r2,	[ea+]
02:D2A0 51-93                    2604   	st	r3,	[ea+]
02:D2A2 17 CE                    2605   	bal	_$ret
                                 2606   
02:D2A4                          2607   _$ins_5A_F5:
02:D2A4 06 10                    2608   	add	r0,	#6
02:D2A6 0C 04                    2609   	mov	r4,	#0Ch
02:D2A8 49-F0                    2610   	div	er0,	r4
02:D2AA 00-85                    2611   	mov	r5,	r0
02:D2AC B0 E0                    2612   	add	er0,	#30h
02:D2AE 01-F2 44-D5              2613   	bl	_extract_string
02:D2B2 40-80                    2614   	mov	r0,	r4
02:D2B4 01-F2 DC-D2              2615   	bl	_reg_index
02:D2B8 12 75                    2616   	cmp	r5,	#12h
02:D2BA 0B C2                    2617   	bgt	_$ret
02:D2BC 2C 00                    2618   	mov	r0,	#2Ch
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  51 
 Title : 
## Loc. Object                   Line   Source Statements

02:D2BE 20 01                    2619   	mov	r1,	#20h
02:D2C0 51-90                    2620   	st	r0,	[ea+]
02:D2C2 51-91                    2621   	st	r1,	[ea+]
02:D2C4 11 75                    2622   	cmp	r5,	#11h
02:D2C6 03 C1                    2623   	blt	_$L5
02:D2C8 01-F2 20-D3              2624   	bl	_imm16
02:D2CC 02 CE                    2625   	bal	_$ret
02:D2CE                          2626   _$L5:
02:D2CE 01-F2 0E-D3              2627   	bl	_imm8
                                 2628   
02:D2D2                          2629   _$ret:
02:D2D2 00 00                    2630   	mov	r0,	#0
02:D2D4 31-90                    2631   	st	r0,	[ea]
02:D2D6 85-F0                    2632   	mov	er0,	er8
02:D2D8 00-F0 2A-9D              2633   	b	_leave
                                 2634   
02:D2DC                          2635   _reg_index:
02:D2DC CE-F8                    2636   	push	lr
02:D2DE 00 10                    2637   	add	r0,	#0
02:D2E0 1F-80                    2638   	daa	r0
02:D2E2 01-F2 92-24              2639   	bl	_hex_byte
02:D2E6 30 70                    2640   	cmp	r0,	#30h
02:D2E8 01 C9                    2641   	beq	_$L2
02:D2EA 51-90                    2642   	st	r0,	[ea+]
02:D2EC                          2643   _$L2:
02:D2EC 51-91                    2644   	st	r1,	[ea+]
02:D2EE 8F-FE                    2645   	nop
02:D2F0 8E-F2                    2646   	pop	pc
                                 2647   
02:D2F2                          2648   _simm8:
02:D2F2 CE-F8                    2649   	push	lr
02:D2F4 80-90                    2650   	l	r0,	[er8]
02:D2F6 81 E8                    2651   	add	er8,	#1
02:D2F8 71-A0                    2652   	tb	r0.7
02:D2FA 03 C9                    2653   	beq	_$pos
02:D2FC 60 02                    2654   	mov	r2,	#60h
02:D2FE 51-92                    2655   	st	r2,	[ea+]
02:D300 5F-80                    2656   	neg	r0
02:D302                          2657   _$pos:
02:D302 01-F2 92-24              2658   	bl	_hex_byte
02:D306 51-90                    2659   	st	r0,	[ea+]
02:D308 51-91                    2660   	st	r1,	[ea+]
02:D30A 8F-FE                    2661   	nop
02:D30C 8E-F2                    2662   	pop	pc
                                 2663   
02:D30E                          2664   _imm8:
02:D30E CE-F8                    2665   	push	lr
02:D310 80-90                    2666   	l	r0,	[er8]
02:D312 81 E8                    2667   	add	er8,	#1
02:D314 01-F2 92-24              2668   	bl	_hex_byte
02:D318 51-90                    2669   	st	r0,	[ea+]
02:D31A 51-91                    2670   	st	r1,	[ea+]
02:D31C 8F-FE                    2671   	nop
02:D31E 8E-F2                    2672   	pop	pc
                                 2673   
02:D320                          2674   _imm16:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  52 
 Title : 
## Loc. Object                   Line   Source Statements

02:D320 CE-F8                    2675   	push	lr
02:D322 80-92                    2676   	l	r2,	[er8]
02:D324 81 E8                    2677   	add	er8,	#1
02:D326 80-90                    2678   	l	r0,	[er8]
02:D328 81 E8                    2679   	add	er8,	#1
02:D32A 01-F2 92-24              2680   	bl	_hex_byte
02:D32E 51-90                    2681   	st	r0,	[ea+]
02:D330 51-91                    2682   	st	r1,	[ea+]
02:D332 20-80                    2683   	mov	r0,	r2
02:D334 01-F2 92-24              2684   	bl	_hex_byte
02:D338 51-90                    2685   	st	r0,	[ea+]
02:D33A 51-91                    2686   	st	r1,	[ea+]
02:D33C 8F-FE                    2687   	nop
02:D33E 8E-F2                    2688   	pop	pc
                                 2689   
02:D340                          2690   _ins_1F:
02:D340 CE-F8                    2691   	push	lr
02:D342 71-A6                    2692   	tb	r6.7
02:D344 03 C8                    2693   	bne	_$div
02:D346 49 02                    2694   	mov	r2,	#byte1 offset _
                                        mul
02:D348 D8 03                    2695   	mov	r3,	#byte2 offset _
                                        mul
02:D34A 02 CE                    2696   	bal	_$L4
02:D34C                          2697   _$div:
02:D34C 50 02                    2698   	mov	r2,	#byte1 offset _
                                        div
02:D34E D8 03                    2699   	mov	r3,	#byte2 offset _
                                        div
02:D350                          2700   _$L4:
02:D350 01-F2 52-D5              2701   	bl	_$L1
02:D354 60-80                    2702   	mov	r0,	r6
02:D356 3C-90                    2703   	srl	r0,	#3
02:D358 0E 20                    2704   	and	r0,	#0Eh
02:D35A 01-F2 DC-D2              2705   	bl	_reg_index
02:D35E 2C 02                    2706   	mov	r2,	#2Ch
02:D360 20 03                    2707   	mov	r3,	#20h
02:D362 72 04                    2708   	mov	r4,	#72h
02:D364 51-92                    2709   	st	r2,	[ea+]
02:D366 51-93                    2710   	st	r3,	[ea+]
02:D368 51-94                    2711   	st	r4,	[ea+]
02:D36A 60-80                    2712   	mov	r0,	r6
02:D36C 0F 20                    2713   	and	r0,	#0Fh
02:D36E 01-F2 DC-D2              2714   	bl	_reg_index
02:D372 8E-F2                    2715   	pop	pc
                                 2716   
02:D374                          2717   _ins_20:
02:D374 CE-F8                    2718   	push	lr
02:D376 31-A6                    2719   	tb	r6.3
02:D378 03 C8                    2720   	bne	_$st
02:D37A 57 02                    2721   	mov	r2,	#byte1 offset _
                                        l_r
02:D37C D8 03                    2722   	mov	r3,	#byte2 offset _
                                        l_r
02:D37E 02 CE                    2723   	bal	_$L6
02:D380                          2724   _$st:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  53 
 Title : 
## Loc. Object                   Line   Source Statements

02:D380 60 02                    2725   	mov	r2,	#byte1 offset _
                                        st_r
02:D382 D8 03                    2726   	mov	r3,	#byte2 offset _
                                        st_r
02:D384                          2727   _$L6:
02:D384 01-F2 52-D5              2728   	bl	_$L1
02:D388 60-80                    2729   	mov	r0,	r6
02:D38A 4C-90                    2730   	srl	r0,	#4
02:D38C 01-F2 DC-D2              2731   	bl	_reg_index
02:D390 2C 02                    2732   	mov	r2,	#2Ch
02:D392 20 03                    2733   	mov	r3,	#20h
02:D394 65 04                    2734   	mov	r4,	#65h
02:D396 72 05                    2735   	mov	r5,	#72h
02:D398 51-92                    2736   	st	r2,	[ea+]
02:D39A 51-93                    2737   	st	r3,	[ea+]
02:D39C 51-94                    2738   	st	r4,	[ea+]
02:D39E 51-95                    2739   	st	r5,	[ea+]
02:D3A0 60-80                    2740   	mov	r0,	r6
02:D3A2 07 20                    2741   	and	r0,	#07h
02:D3A4 1A-90                    2742   	sll	r0,	#1
02:D3A6 01-F2 DC-D2              2743   	bl	_reg_index
02:D3AA 8E-F2                    2744   	pop	pc
                                 2745   
02:D3AC                          2746   _ins_21:
02:D3AC CE-F8                    2747   	push	lr
02:D3AE 71-A6                    2748   	tb	r6.7
02:D3B0 08 C8                    2749   	bne	_$L7
02:D3B2 31-A6                    2750   	tb	r6.3
02:D3B4 03 C8                    2751   	bne	_$L8
02:D3B6 D1 02                    2752   	mov	r2,	#byte1 offset _
                                        mov_er
02:D3B8 D7 03                    2753   	mov	r3,	#byte2 offset _
                                        mov_er
02:D3BA 0A CE                    2754   	bal	_$L10
02:D3BC                          2755   _$L8:
02:D3BC E9 02                    2756   	mov	r2,	#byte1 offset _
                                        add_er
02:D3BE D7 03                    2757   	mov	r3,	#byte2 offset _
                                        add_er
02:D3C0 07 CE                    2758   	bal	_$L10
02:D3C2                          2759   _$L7:
02:D3C2 31-A6                    2760   	tb	r6.3
02:D3C4 03 C8                    2761   	bne	_$L9
02:D3C6 5B 02                    2762   	mov	r2,	#byte1 offset _
                                        l_er
02:D3C8 D8 03                    2763   	mov	r3,	#byte2 offset _
                                        l_er
02:D3CA 02 CE                    2764   	bal	_$L10
02:D3CC                          2765   _$L9:
02:D3CC 65 02                    2766   	mov	r2,	#byte1 offset _
                                        st_er
02:D3CE D8 03                    2767   	mov	r3,	#byte2 offset _
                                        st_er
02:D3D0                          2768   _$L10:
02:D3D0 01-F2 52-D5              2769   	bl	_$L1
02:D3D4 60-80                    2770   	mov	r0,	r6
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  54 
 Title : 
## Loc. Object                   Line   Source Statements

02:D3D6 3C-90                    2771   	srl	r0,	#3
02:D3D8 0E 20                    2772   	and	r0,	#0Eh
02:D3DA 01-F2 DC-D2              2773   	bl	_reg_index
02:D3DE 2C 02                    2774   	mov	r2,	#2Ch
02:D3E0 20 03                    2775   	mov	r3,	#20h
02:D3E2 65 04                    2776   	mov	r4,	#65h
02:D3E4 72 05                    2777   	mov	r5,	#72h
02:D3E6 51-92                    2778   	st	r2,	[ea+]
02:D3E8 51-93                    2779   	st	r3,	[ea+]
02:D3EA 51-94                    2780   	st	r4,	[ea+]
02:D3EC 51-95                    2781   	st	r5,	[ea+]
02:D3EE 60-80                    2782   	mov	r0,	r6
02:D3F0 07 20                    2783   	and	r0,	#07h
02:D3F2 1A-90                    2784   	sll	r0,	#1
02:D3F4 01-F2 DC-D2              2785   	bl	_reg_index
02:D3F8 8E-F2                    2786   	pop	pc
                                 2787   
02:D3FA                          2788   _ins_22:
02:D3FA CE-F8                    2789   	push	lr
02:D3FC 71-A6                    2790   	tb	r6.7
02:D3FE 23 C8                    2791   	bne	_$L11
02:D400 31-A6                    2792   	tb	r6.3
02:D402 03 C8                    2793   	bne	_$L12
02:D404 5B 02                    2794   	mov	r2,	#byte1 offset _
                                        l_er
02:D406 D8 03                    2795   	mov	r3,	#byte2 offset _
                                        l_er
02:D408 02 CE                    2796   	bal	_$L13
02:D40A                          2797   _$L12:
02:D40A 65 02                    2798   	mov	r2,	#byte1 offset _
                                        st_er
02:D40C D8 03                    2799   	mov	r3,	#byte2 offset _
                                        st_er
02:D40E                          2800   _$L13:
02:D40E 01-F2 52-D5              2801   	bl	_$L1
02:D412 60-80                    2802   	mov	r0,	r6
02:D414 3C-90                    2803   	srl	r0,	#3
02:D416 0E 20                    2804   	and	r0,	#0Eh
02:D418                          2805   _$L16:
02:D418 01-F2 DC-D2              2806   	bl	_reg_index
02:D41C 2C 02                    2807   	mov	r2,	#2Ch
02:D41E 20 03                    2808   	mov	r3,	#20h
02:D420 65 04                    2809   	mov	r4,	#65h
02:D422 72 05                    2810   	mov	r5,	#72h
02:D424 51-92                    2811   	st	r2,	[ea+]
02:D426 51-93                    2812   	st	r3,	[ea+]
02:D428 01-F2 F2-D2              2813   	bl	_simm8
02:D42C 5B 02                    2814   	mov	r2,	#5Bh
02:D42E 5D 03                    2815   	mov	r3,	#5Dh
02:D430 51-92                    2816   	st	r2,	[ea+]
02:D432 51-94                    2817   	st	r4,	[ea+]
02:D434 51-95                    2818   	st	r5,	[ea+]
02:D436 60-80                    2819   	mov	r0,	r6
02:D438 07 20                    2820   	and	r0,	#07h
02:D43A 1A-90                    2821   	sll	r0,	#1
02:D43C 01-F2 DC-D2              2822   	bl	_reg_index
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  55 
 Title : 
## Loc. Object                   Line   Source Statements

02:D440 51-93                    2823   	st	r3,	[ea+]
02:D442 8F-FE                    2824   	nop
02:D444 8E-F2                    2825   	pop	pc
02:D446                          2826   _$L11:
02:D446 A7 02                    2827   	mov	r2,	#byte1 offset _
                                        invalid
02:D448 D8 03                    2828   	mov	r3,	#byte2 offset _
                                        invalid
02:D44A 01-F2 52-D5              2829   	bl	_$L1
02:D44E 8E-F2                    2830   	pop	pc
                                 2831   
02:D450                          2832   _ins_23:
02:D450 CE-F8                    2833   	push	lr
02:D452 31-A6                    2834   	tb	r6.3
02:D454 03 C8                    2835   	bne	_$L14
02:D456 57 02                    2836   	mov	r2,	#byte1 offset _
                                        l_r
02:D458 D8 03                    2837   	mov	r3,	#byte2 offset _
                                        l_r
02:D45A 02 CE                    2838   	bal	_$L15
02:D45C                          2839   _$L14:
02:D45C 60 02                    2840   	mov	r2,	#byte1 offset _
                                        st_r
02:D45E D8 03                    2841   	mov	r3,	#byte2 offset _
                                        st_r
02:D460                          2842   _$L15:
02:D460 01-F2 52-D5              2843   	bl	_$L1
02:D464 60-80                    2844   	mov	r0,	r6
02:D466 4C-90                    2845   	srl	r0,	#4
02:D468 D7 CE                    2846   	bal	_$L16
                                 2847   
02:D46A                          2848   _ins_24:
02:D46A CE-F8                    2849   	push	lr
02:D46C 31-A6                    2850   	tb	r6.3
02:D46E 3D C8                    2851   	bne	_$tb
02:D470 50 76                    2852   	cmp	r6,	#80
02:D472 12 C1                    2853   	blt	_$cmp
02:D474 A0 76                    2854   	cmp	r6,	#0A0h
02:D476 27 C1                    2855   	blt	_$daa
02:D478 C0 76                    2856   	cmp	r6,	#0C0h
02:D47A 28 C1                    2857   	blt	_$das
02:D47C E0 76                    2858   	cmp	r6,	#0E0h
02:D47E 29 C1                    2859   	blt	_$neg
02:D480 F0 76                    2860   	cmp	r6,	#0F0h
02:D482 E1 C0                    2861   	bge	_$L11
02:D484 99 02                    2862   	mov	r2,	#byte1 offset _
                                        extbw_er
02:D486 D8 03                    2863   	mov	r3,	#byte2 offset _
                                        extbw_er
02:D488 01-F2 52-D5              2864   	bl	_$L1
02:D48C 60-80                    2865   	mov	r0,	r6
02:D48E 1A-90                    2866   	sll	r0,	#1
02:D490 0E 20                    2867   	and	r0,	#0Eh
02:D492 01-F2 DC-D2              2868   	bl	_reg_index
02:D496 8E-F2                    2869   	pop	pc
                                 2870   
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  56 
 Title : 
## Loc. Object                   Line   Source Statements

02:D498                          2871   _$cmp:
02:D498 3B 02                    2872   	mov	r2,	#byte1 offset _
                                        cmp_er
02:D49A D8 03                    2873   	mov	r3,	#byte2 offset _
                                        cmp_er
02:D49C 01-F2 52-D5              2874   	bl	_$L1
02:D4A0 60-80                    2875   	mov	r0,	r6
02:D4A2 3C-90                    2876   	srl	r0,	#3
02:D4A4 0E 20                    2877   	and	r0,	#0Eh
02:D4A6 01-F2 DC-D2              2878   	bl	_reg_index
02:D4AA 2C 02                    2879   	mov	r2,	#2Ch
02:D4AC 20 03                    2880   	mov	r3,	#20h
02:D4AE 65 04                    2881   	mov	r4,	#65h
02:D4B0 72 05                    2882   	mov	r5,	#72h
02:D4B2 51-92                    2883   	st	r2,	[ea+]
02:D4B4 51-93                    2884   	st	r3,	[ea+]
02:D4B6 51-94                    2885   	st	r4,	[ea+]
02:D4B8 51-95                    2886   	st	r5,	[ea+]
02:D4BA 60-80                    2887   	mov	r0,	r6
02:D4BC 07 20                    2888   	and	r0,	#07h
02:D4BE 1A-90                    2889   	sll	r0,	#1
02:D4C0 01-F2 DC-D2              2890   	bl	_reg_index
02:D4C4 8E-F2                    2891   	pop	pc
02:D4C6                          2892   _$daa:
02:D4C6 87 02                    2893   	mov	r2,	#byte1 offset _
                                        daa_r
02:D4C8 D8 03                    2894   	mov	r3,	#byte2 offset _
                                        daa_r
02:D4CA 05 CE                    2895   	bal	_$L17
02:D4CC                          2896   _$das:
02:D4CC 8D 02                    2897   	mov	r2,	#byte1 offset _
                                        das_r
02:D4CE D8 03                    2898   	mov	r3,	#byte2 offset _
                                        das_r
02:D4D0 02 CE                    2899   	bal	_$L17
02:D4D2                          2900   _$neg:
02:D4D2 93 02                    2901   	mov	r2,	#byte1 offset _
                                        neg_r
02:D4D4 D8 03                    2902   	mov	r3,	#byte2 offset _
                                        neg_r
02:D4D6                          2903   _$L17:
02:D4D6 01-F2 52-D5              2904   	bl	_$L1
02:D4DA 60-80                    2905   	mov	r0,	r6
02:D4DC 1C-90                    2906   	srl	r0,	#1
02:D4DE 08 20                    2907   	and	r0,	#8
02:D4E0 63-80                    2908   	or	r0,	r6
02:D4E2 0F 20                    2909   	and	r0,	#0Fh
02:D4E4 01-F2 DC-D2              2910   	bl	_reg_index
02:D4E8 8E-F2                    2911   	pop	pc
                                 2912   
02:D4EA                          2913   _$tb:
02:D4EA A2 02                    2914   	mov	r2,	#byte1 offset _
                                        tb_r
02:D4EC D8 03                    2915   	mov	r3,	#byte2 offset _
                                        tb_r
02:D4EE 01-F2 52-D5              2916   	bl	_$L1
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  57 
 Title : 
## Loc. Object                   Line   Source Statements

02:D4F2 60-80                    2917   	mov	r0,	r6
02:D4F4 4C-90                    2918   	srl	r0,	#4
02:D4F6 01-F2 DC-D2              2919   	bl	_reg_index
02:D4FA 2E 00                    2920   	mov	r0,	#2Eh
02:D4FC 51-90                    2921   	st	r0,	[ea+]
02:D4FE 60-80                    2922   	mov	r0,	r6
02:D500 07 20                    2923   	and	r0,	#7
02:D502 01-F2 92-24              2924   	bl	_hex_byte
02:D506 51-91                    2925   	st	r1,	[ea+]
02:D508 8F-FE                    2926   	nop
02:D50A 8E-F2                    2927   	pop	pc
                                 2928   
02:D50C                          2929   _ins_25:
02:D50C CE-F8                    2930   	push	lr
02:D50E 10 76                    2931   	cmp	r6,	#10h
02:D510 07 C1                    2932   	blt	_$L18
02:D512 20 76                    2933   	cmp	r6,	#20h
02:D514 08 C1                    2934   	blt	_$L19
02:D516 30 76                    2935   	cmp	r6,	#30h
02:D518 96 C0                    2936   	bge	_$L11
02:D51A 2F 02                    2937   	mov	r2,	#byte1 offset _
                                        sra_r
02:D51C D8 03                    2938   	mov	r3,	#byte2 offset _
                                        sra_r
02:D51E 05 CE                    2939   	bal	_$L20
02:D520                          2940   _$L18:
02:D520 35 02                    2941   	mov	r2,	#byte1 offset _
                                        cmp_r
02:D522 D8 03                    2942   	mov	r3,	#byte2 offset _
                                        cmp_r
02:D524 02 CE                    2943   	bal	_$L20
02:D526                          2944   _$L19:
02:D526 42 02                    2945   	mov	r2,	#byte1 offset _
                                        cmpc_r
02:D528 D8 03                    2946   	mov	r3,	#byte2 offset _
                                        cmpc_r
02:D52A                          2947   _$L20:
02:D52A 01-F2 52-D5              2948   	bl	_$L1
02:D52E 60-80                    2949   	mov	r0,	r6
02:D530 0F 20                    2950   	and	r0,	#0Fh
02:D532 01-F2 DC-D2              2951   	bl	_reg_index
02:D536 2C 02                    2952   	mov	r2,	#2Ch
02:D538 20 03                    2953   	mov	r3,	#20h
02:D53A 51-92                    2954   	st	r2,	[ea+]
02:D53C 51-93                    2955   	st	r3,	[ea+]
02:D53E 01-F2 0E-D3              2956   	bl	_imm8
02:D542 8E-F2                    2957   	pop	pc
                                 2958   
02:D544                          2959   _extract_string:
02:D544 1A-90                    2960   	sll	r0,	#1
02:D546 02 E3 08-A2 5A-D5        2961   	l	er2,	far _pointer_ta
                                        ble[er0]
02:D54C 02 CE                    2962   	bal	_$L1
02:D54E                          2963   _$extract_loop:
02:D54E 81 E2                    2964   	add	er2,	#1
02:D550 51-90                    2965   	st	r0,	[ea+]
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  58 
 Title : 
## Loc. Object                   Line   Source Statements

02:D552                          2966   _$L1:
02:D552 02 E3 20-90              2967   	l	r0,	2:[er2]
02:D556 FB C8                    2968   	bne	_$extract_loop
02:D558 1F-FE                    2969   	rt
                                 2970   
  --------------------------     2971   tseg	#2	at	0D55Ah
                                 2972   
02:D55A                          2973   _pointer_table:
02:D55A 4E-D7 52-D7 59-D7 5C-D7  2974   	dw	_nop, _add_sp, _sc, _rc
                                        ,
02:D562 5F-D7 64-D7 69-D7 6F-D7   >>>    _cplc, _jmp, _call, _call_sys,
02:D56A 79-D7 7D-D7 FF-FF FF-FF   >>>    _ret, _end, 0FFFFh, 0FFFFh,
02:D572 81-D7 86-D7 8B-D7 90-D7   >>>    _bnv, _bov, _bps, _bns
02:D57A CB-D7 E3-D7 F0-D7 F7-D7  2975   	dw	_mov_r, _add_r, _addc_r
                                        , _sub_r,
02:D582 FD-D7 04-D8 0A-D8 0F-D8   >>>    _subc_r, _and_r, _or_r, _xor_r,
02:D58A 15-D8 1B-D8 22-D8 28-D8   >>>    _sll_r, _sllc_r, _srl_r, _srlc_r
02:D592 2F-D8 35-D8 42-D8 40-D3  2976   	dw	_sra_r, _cmp_r, _cmpc_r
                                        , _ins_1F,
02:D59A 74-D3 AC-D3 FA-D3 50-D4   >>>    _ins_20, _ins_21, _ins_22, _ins_23,
02:D5A2 6A-D4 0C-D5 95-D7 9A-D7   >>>    _ins_24, _ins_25, _bge, _blt
02:D5AA 9F-D7 A4-D7 A9-D7 AF-D7  2977   	dw	_bgt, _ble, _bges, _blt
                                        s,
02:D5B2 B5-D7 BB-D7 C1-D7 C6-D7   >>>    _bgts, _bles, _bne, _beq,
02:D5BA D1-D7 D8-D7 E9-D7 5B-D8   >>>    _mov_er, _mov_sp, _add_er, _l_er,
02:D5C2 65-D8                     >>>    _st_er
02:D5C4 72-D8 80-D8 CB-D7 E3-D7  2978   	dw	_push_er, _pop_er, _mov
                                        _r, _add_r,
02:D5CC F0-D7 04-D8 0A-D8 0F-D8   >>>   	_addc_r, _and_r, _or_r, _xor_r,
02:D5D4 15-D8 1B-D8 22-D8 28-D8   >>>    _sll_r, _sllc_r, _srl_r, _srlc_r
02:D5DC 57-D8 60-D8 6B-D8 7A-D8  2979   	dw	_l_r, _st_r, _push_r, _
                                        pop_r
                                 2980   
02:D5E4                          2981   _optn_table:
02:D5E4 8D-DA 34-C6              2982   	dw	_arithmetic_str, _arith
                                        metic
02:D5E8 9D-DA 40-C6              2983   	dw	_data_transfer_str, _da
                                        ta_transfer
02:D5EC AB-DA 4C-C6              2984   	dw	_branch_inst_str, _bran
                                        ch_inst
02:D5F0 B7-DA 5E-C6              2985   	dw	_load_store_str, _load_
                                        store
                                 2986   
02:D5F4 C7-DA 6A-C6              2987   	dw	_push_pop_str, _push_po
                                        p
02:D5F8 D5-DA 76-C6              2988   	dw	_misc_str, _misc
02:D5FC 00-00 00-00 00-00 00-00  2989   	dw	4 dup 00000h
                                 2990   
02:D604 E0-D9 8C-CE              2991   	dw	_goto_menu, _goto_scree
                                        n
02:D608 E9-D9 E0-CE              2992   	dw	_copy_menu,	_copy_f
                                        n
02:D60C EE-D9 D2-CE              2993   	dw	_move_menu,	_move_f
                                        n
02:D610 F3-D9 5C-CF              2994   	dw	_fill_menu,	_fill_f
                                        n
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  59 
 Title : 
## Loc. Object                   Line   Source Statements

                                 2995   
02:D614 FF-D9 2E-D0              2996   	dw	_settings_menu,	_settin
                                        gs_screen
02:D618 00-00 00-00 00-00 00-00  2997   	dw	6 dup 00000h
02:D620 00-00 00-00               >>>   
                                 2998   
02:D624                          2999   _settings_table:
02:D624 3C-DA F0-CF              3000   	dw	_settings_1, _insert_se
                                        t_screen
02:D628 4C-DA 0A-D0              3001   	dw	_settings_2, _start_add
                                        r_set
02:D62C 5B-DA 1C-D0              3002   	dw	_settings_3, _end_addr_
                                        set
02:D630 00-00 00-00              3003   	dw	2 dup 00000h
                                 3004   
02:D634                          3005   _insert_set_table:
02:D634 68-DA D6-CF              3006   	dw	_inst_set_1, _insert_1_
                                        fn
02:D638 72-DA E0-CF              3007   	dw	_inst_set_2, _insert_2_
                                        fn
02:D63C 7F-DA E8-CF              3008   	dw	_inst_set_3, _insert_3_
                                        fn
                                 3009   
                                 3010   ;instruction data
                                 3011   ;bit7-need special handling bit6-is com
                                        plex inst bit5-is branch inst bit4-imm 
                                        length(1 for 16 bit) bit3-has immediate
                                         value bit2-type of operand2(1 for er) 
                                        bit1-type of operand1(1 for er) bit0-ha
                                        s operand
                                 3012   ;when bit 7 is set: bit0-2:instruction 
                                        code bit3:has a second register operand
                                         bit4:has immediate value bit5: type of
                                         reg operand 1 bit6: type of reg operan
                                        d 2
02:D640                          3013   _push_pop_table:
02:D640 00-00                    3014   	dw 00000h			
                                        		;page num
02:D642 01 DE                    3015   	db 00000001b, 0DEh
02:D644 03 4E                    3016   	db 00000011b, 4Eh
02:D646 01 EA                    3017   	db 00000001b, 0EAh
02:D648 03 54                    3018   	db 00000011b, 54h
02:D64A 00-00 00-00 00-00 00-00  3019   	dw 8 dup 00000h
02:D652 00-00 00-00 00-00 00-00   >>>   
                                 3020   
02:D65A                          3021   _load_store_table:
02:D65A 00-00                    3022   	dw 00000h
02:D65C 19 C6                    3023   	db 00011001b, 0C6h
02:D65E C9 02                    3024   	db 11001001b, 02h
02:D660 DC 0A                    3025   	db 11011100b, 0Ah
02:D662 1B 42                    3026   	db 00011011b, 42h
02:D664 EA 06                    3027   	db 11101010b, 06h
02:D666 FB 08                    3028   	db 11111011b, 08h
02:D668 19 D2                    3029   	db 00011001b, 0D2h
02:D66A C9 03                    3030   	db 11001001b, 03h
02:D66C DC 0B                    3031   	db 11011100b, 0Bh
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  60 
 Title : 
## Loc. Object                   Line   Source Statements

02:D66E 1B 48                    3032   	db 00011011b, 48h
02:D670 EA 07                    3033   	db 11101010b, 07h
02:D672 FB 09                    3034   	db 11111011b, 09h
                                 3035   
02:D674                          3036   _misc_table:
02:D674 00-00                    3037   	dw 00000h
02:D676 39 FD                    3038   	db 00111001b, 0FDh
02:D678 8D 0D                    3039   	db 10001101b, 0Dh
02:D67A A5 11                    3040   	db 10100101b, 11h
02:D67C 08 F7                    3041   	db 00001000b, 0F7h
02:D67E 00 F8                    3042   	db 00000000b, 0F8h
02:D680 00 F9                    3043   	db 00000000b, 0F9h
02:D682 00 FA                    3044   	db 00000000b, 0FAh
02:D684 00 F6                    3045   	db 00000000b, 0F6h
02:D686 00 FE                    3046   	db 00000000b, 0FEh
02:D688 00 FF                    3047   	db 00000000b, 0FFh
02:D68A 00-00 00-00              3048   	dw 2 dup 00000h
                                 3049   
02:D68E                          3050   _branch_inst_table:
02:D68E 01-00                    3051   	dw 00001h
02:D690 39 26                    3052   	db 00111001b, 26h
02:D692 39 27                    3053   	db 00111001b, 27h
02:D694 39 28                    3054   	db 00111001b, 28h
02:D696 39 29                    3055   	db 00111001b, 29h
02:D698 39 2A                    3056   	db 00111001b, 2Ah
02:D69A 39 2B                    3057   	db 00111001b, 2Bh
02:D69C 39 2C                    3058   	db 00111001b, 2Ch
02:D69E 39 2D                    3059   	db 00111001b, 2Dh
02:D6A0 39 2E                    3060   	db 00111001b, 2Eh
02:D6A2 39 2F                    3061   	db 00111001b, 2Fh
02:D6A4 39 0C                    3062   	db 00111001b, 0Ch
02:D6A6 39 0D                    3063   	db 00111001b, 0Dh
02:D6A8 39 0E                    3064   	db 00111001b, 0Eh
02:D6AA 39 0F                    3065   	db 00111001b, 0Fh
02:D6AC 39 FB                    3066   	db 00111001b, 0FBh
02:D6AE 39 FC                    3067   	db 00111001b, 0FCh
02:D6B0 00-00 00-00 00-00 00-00  3068   	dw 8 dup 00000h
02:D6B8 00-00 00-00 00-00 00-00   >>>   
                                 3069   
02:D6C0                          3070   _arithmetic_table:
02:D6C0 02-00                    3071   	dw 00002h
02:D6C2 09 5A                    3072   	db 00001001b, 5Ah
02:D6C4 41 11                    3073   	db 01000001b, 11h
02:D6C6 09 66                    3074   	db 00001001b, 66h
02:D6C8 41 12                    3075   	db 01000001b, 12h
02:D6CA 1B 3C                    3076   	db 00011011b, 3Ch
02:D6CC EA 05                    3077   	db 11101010b, 05h
02:D6CE 41 13                    3078   	db 01000001b, 13h
02:D6D0 41 14                    3079   	db 01000001b, 14h
02:D6D2 09 72                    3080   	db 00001001b, 72h
02:D6D4 41 15                    3081   	db 01000001b, 15h
02:D6D6 09 7E                    3082   	db 00001001b, 7Eh
02:D6D8 41 16                    3083   	db 01000001b, 16h
02:D6DA 09 8A                    3084   	db 00001001b, 8Ah
02:D6DC 41 17                    3085   	db 01000001b, 17h
02:D6DE 09 96                    3086   	db 00001001b, 96h
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  61 
 Title : 
## Loc. Object                   Line   Source Statements

02:D6E0 41 18                    3087   	db 01000001b, 18h
02:D6E2 09 A2                    3088   	db 00001001b, 0A2h
02:D6E4 41 19                    3089   	db 01000001b, 19h
02:D6E6 09 AE                    3090   	db 00001001b, 0AEh
02:D6E8 41 1A                    3091   	db 01000001b, 1Ah
02:D6EA 09 BA                    3092   	db 00001001b, 0BAh
02:D6EC 41 1B                    3093   	db 01000001b, 1Bh
02:D6EE 96 14                    3094   	db 10010110b, 14h
02:D6F0 41 1C                    3095   	db 01000001b, 1Ch
02:D6F2 A8 00                    3096   	db 10101000b, 00h
02:D6F4 A8 01                    3097   	db 10101000b, 01h
02:D6F6 96 12                    3098   	db 10010110b, 12h
02:D6F8 41 1D                    3099   	db 01000001b, 1Dh
02:D6FA 96 13                    3100   	db 10010110b, 13h
02:D6FC 41 1E                    3101   	db 01000001b, 1Eh
02:D6FE ED 0C                    3102   	db 11101101b, 0Ch
02:D700 85 0E                    3103   	db 10000101b, 0Eh
02:D702 85 0F                    3104   	db 10000101b, 0Fh
02:D704 85 10                    3105   	db 10000101b, 10h
02:D706 00-00 00-00              3106   	dw 2 dup 00000h
                                 3107   
02:D70A                          3108   _data_transfer_table:
02:D70A 00-00                    3109   	dw 00000h
02:D70C 09 00                    3110   	db 00001001b, 00h
02:D70E 41 10                    3111   	db 01000001b, 10h
02:D710 EA 04                    3112   	db 11101010b, 04h
02:D712 03 30                    3113   	db 00000011b, 30h
02:D714 03 36                    3114   	db 00000011b, 36h
02:D716 00-00 00-00 00-00 00-00  3115   	dw 7 dup 00000h
02:D71E 00-00 00-00 00-00         >>>   
                                 3116   	
                                 3117   ;strings for instructions in extraordin
                                        ary encoding are hard-coded to make thi
                                        ngs easier.
02:D724                          3118   _inst_menu_str_table:
02:D724 AF-D8 BB-D8 C7-D8 D3-D8  3119   	dw	_mul_str, _div_str, _l_
                                        r_er, _st_r_er,
02:D72C E0-D8 ED-D8 FA-D8 07-D9   >>>    _mov_er_er, _add_er_er, _l_er_er, _st_
                                        er_er,
02:D734 15-D9 28-D9               >>>    l_er_d_er, _st_er_d_er
02:D738 3C-D9 4E-D9 61-D9 6E-D9  3120   	dw	_l_r_d_er, _st_r_d_er, 
                                        _cmp_er_er, _tb_r_b,
02:D740 87-D8 8D-D8 93-D8 99-D8   >>>    _daa_r, _das_r, _neg_r, _extbw_er,
02:D748 76-D9 84-D9 93-D9         >>>    _cmp_r_i, _cmpc_r_i, _sra_r_i
                                 3121   
02:D74E                          3122   _nop:
02:D74E 6E 6F 70 00              3123   	db	"nop\0"
02:D752                          3124   _add_sp:
02:D752 61 64 64 20 73 70 00     3125   	db	"add sp\0"
02:D759                          3126   _sc:
02:D759 73 63 00                 3127   	db	"sc\0"
02:D75C                          3128   _rc:
02:D75C 72 63 00                 3129   	db	"rc\0"
02:D75F                          3130   _cplc:
02:D75F 63 70 6C 63 00           3131   	db	"cplc\0"
02:D764                          3132   _jmp:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  62 
 Title : 
## Loc. Object                   Line   Source Statements

02:D764 6A 6D 70 20 00           3133   	db	"jmp \0"
02:D769                          3134   _call:
02:D769 63 61 6C 6C 20 00        3135   	db	"call \0"
02:D76F                          3136   _call_sys:
02:D76F 63 61 6C 6C 5F 73 79 73  3137   	db	"call_sys \0"
02:D777 20 00                     >>>   
02:D779                          3138   _ret:
02:D779 72 65 74 00              3139   	db	"ret\0"
02:D77D                          3140   _end:
02:D77D 65 6E 64 00              3141   	db	"end\0"
02:D781                          3142   _bnv:
02:D781 62 6E 76 20 00           3143   	db	"bnv \0"
02:D786                          3144   _bov:
02:D786 62 6F 76 20 00           3145   	db	"bov \0"
02:D78B                          3146   _bps:
02:D78B 62 70 73 20 00           3147   	db	"bps \0"
02:D790                          3148   _bns:
02:D790 62 6E 73 20 00           3149   	db	"bns \0"
02:D795                          3150   _bge:
02:D795 62 67 65 20 00           3151   	db	"bge \0"
02:D79A                          3152   _blt:
02:D79A 62 6C 74 20 00           3153   	db	"blt \0"
02:D79F                          3154   _bgt:
02:D79F 62 67 74 20 00           3155   	db	"bgt \0"
02:D7A4                          3156   _ble:
02:D7A4 62 6C 65 20 00           3157   	db	"ble \0"
02:D7A9                          3158   _bges:
02:D7A9 62 67 65 73 20 00        3159   	db	"bges \0"
02:D7AF                          3160   _blts:
02:D7AF 62 6C 74 73 20 00        3161   	db	"blts \0"
02:D7B5                          3162   _bgts:
02:D7B5 62 67 74 73 20 00        3163   	db	"bgts \0"
02:D7BB                          3164   _bles:
02:D7BB 62 6C 65 73 20 00        3165   	db	"bles \0"
02:D7C1                          3166   _bne:
02:D7C1 62 6E 65 20 00           3167   	db	"bne \0"
02:D7C6                          3168   _beq:
02:D7C6 62 65 71 20 00           3169   	db	"beq \0"
02:D7CB                          3170   _mov_r:
02:D7CB 6D 6F 76 20 72 00        3171   	db	"mov r\0"
02:D7D1                          3172   _mov_er:
02:D7D1 6D 6F 76 20 65 72 00     3173   	db	"mov er\0"
02:D7D8                          3174   _mov_sp:
02:D7D8 6D 6F 76 20 73 70 2C 20  3175   	db	"mov sp, er\0"
02:D7E0 65 72 00                  >>>   
02:D7E3                          3176   _add_r:
02:D7E3 61 64 64 20 72 00        3177   	db	"add r\0"
02:D7E9                          3178   _add_er:
02:D7E9 61 64 64 20 65 72 00     3179   	db	"add er\0"
02:D7F0                          3180   _addc_r:
02:D7F0 61 64 64 63 20 72 00     3181   	db	"addc r\0"
02:D7F7                          3182   _sub_r:
02:D7F7 73 75 62 20 72 00        3183   	db	"sub r\0"
02:D7FD                          3184   _subc_r:
02:D7FD 73 75 62 63 20 72 00     3185   	db	"subc r\0"
02:D804                          3186   _and_r:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  63 
 Title : 
## Loc. Object                   Line   Source Statements

02:D804 61 6E 64 20 72 00        3187   	db	"and r\0"
02:D80A                          3188   _or_r:
02:D80A 6F 72 20 72 00           3189   	db	"or r\0"
02:D80F                          3190   _xor_r:
02:D80F 78 6F 72 20 72 00        3191   	db	"xor r\0"
02:D815                          3192   _sll_r:
02:D815 73 6C 6C 20 72 00        3193   	db	"sll r\0"
02:D81B                          3194   _sllc_r:
02:D81B 73 6C 6C 63 20 72 00     3195   	db	"sllc r\0"
02:D822                          3196   _srl_r:
02:D822 73 72 6C 20 72 00        3197   	db	"srl r\0"
02:D828                          3198   _srlc_r:
02:D828 73 72 6C 63 20 72 00     3199   	db	"srlc r\0"
02:D82F                          3200   _sra_r:
02:D82F 73 72 61 20 72 00        3201   	db	"sra r\0"
02:D835                          3202   _cmp_r:
02:D835 63 6D 70 20 72 00        3203   	db	"cmp r\0"
02:D83B                          3204   _cmp_er:
02:D83B 63 6D 70 20 65 72 00     3205   	db	"cmp er\0"
02:D842                          3206   _cmpc_r:
02:D842 63 6D 70 63 20 72 00     3207   	db	"cmpc r\0"
02:D849                          3208   _mul:
02:D849 6D 75 6C 20 65 72 00     3209   	db	"mul er\0"
02:D850                          3210   _div:
02:D850 64 69 76 20 65 72 00     3211   	db	"div er\0"
02:D857                          3212   _l_r:
02:D857 6C 20 72 00              3213   	db	"l r\0"
02:D85B                          3214   _l_er:
02:D85B 6C 20 65 72 00           3215   	db	"l er\0"
02:D860                          3216   _st_r:
02:D860 73 74 20 72 00           3217   	db	"st r\0"
02:D865                          3218   _st_er:
02:D865 73 74 20 65 72 00        3219   	db	"st er\0"
02:D86B                          3220   _push_r:
02:D86B 70 75 73 68 20 72 00     3221   	db	"push r\0"
02:D872                          3222   _push_er:
02:D872 70 75 73 68 20 65 72 00  3223   	db	"push er\0"
02:D87A                          3224   _pop_r:
02:D87A 70 6F 70 20 72 00        3225   	db	"pop r\0"
02:D880                          3226   _pop_er:
02:D880 70 6F 70 20 65 72 00     3227   	db	"pop er\0"
02:D887                          3228   _daa_r:
02:D887 64 61 61 20 72 00        3229   	db	"daa r\0"
02:D88D                          3230   _das_r:
02:D88D 64 61 73 20 72 00        3231   	db	"das r\0"
02:D893                          3232   _neg_r:
02:D893 6E 65 67 20 72 00        3233   	db	"neg r\0"
02:D899                          3234   _extbw_er:
02:D899 65 78 74 62 77 20 65 72  3235   	db	"extbw er\0"
02:D8A1 00                        >>>   
02:D8A2                          3236   _tb_r:
02:D8A2 74 62 20 72 00           3237   	db	"tb r\0"
02:D8A7                          3238   _invalid:
02:D8A7 49 6E 76 61 6C 69 64 00  3239   	db	"Invalid\0"
                                 3240   
02:D8AF                          3241   _mul_str:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  64 
 Title : 
## Loc. Object                   Line   Source Statements

02:D8AF 6D 75 6C 20 65 72 6E 2C  3242   	db	"mul ern, rm\0"
02:D8B7 20 72 6D 00               >>>   
02:D8BB                          3243   _div_str:
02:D8BB 64 69 76 20 65 72 6E 2C  3244   	db	"div ern, rm\0"
02:D8C3 20 72 6D 00               >>>   
02:D8C7                          3245   _l_r_er:
02:D8C7 6C 20 72 6E 2C 20 5B 65  3246   	db	"l rn, [erm]\0"
02:D8CF 72 6D 5D 00               >>>   
02:D8D3                          3247   _st_r_er:
02:D8D3 73 74 20 72 6E 2C 20 5B  3248   	db	"st rn, [erm]\0"
02:D8DB 65 72 6D 5D 00            >>>   
02:D8E0                          3249   _mov_er_er:
02:D8E0 6D 6F 76 20 65 72 6E 2C  3250   	db	"mov ern, erm\0"
02:D8E8 20 65 72 6D 00            >>>   
02:D8ED                          3251   _add_er_er:
02:D8ED 61 64 64 20 65 72 6E 2C  3252   	db	"add ern, erm\0"
02:D8F5 20 65 72 6D 00            >>>   
02:D8FA                          3253   _l_er_er:
02:D8FA 6C 20 65 72 6E 2C 20 5B  3254   	db	"l ern, [erm]\0"
02:D902 65 72 6D 5D 00            >>>   
02:D907                          3255   _st_er_er:
02:D907 73 74 20 65 72 6E 2C 20  3256   	db	"st ern, [erm]\0"
02:D90F 5B 65 72 6D 5D 00         >>>   
02:D915                          3257   l_er_d_er:
02:D915 6C 20 65 72 6E 2C 20 23  3258   	db	"l ern, #Disp8[erm]\0"
02:D91D 44 69 73 70 38 5B 65 72   >>>   
02:D925 6D 5D 00                  >>>   
02:D928                          3259   _st_er_d_er:
02:D928 73 74 20 65 72 6E 2C 20  3260   	db	"st ern, #Disp8[erm]\0"
02:D930 23 44 69 73 70 38 5B 65   >>>   
02:D938 72 6D 5D 00               >>>   
02:D93C                          3261   _l_r_d_er:
02:D93C 6C 20 72 6E 2C 20 23 44  3262   	db	"l rn, #Disp8[erm]\0"
02:D944 69 73 70 38 5B 65 72 6D   >>>   
02:D94C 5D 00                     >>>   
02:D94E                          3263   _st_r_d_er:
02:D94E 73 74 20 72 6E 2C 20 23  3264   	db	"st rn, #Disp8[erm]\0"
02:D956 44 69 73 70 38 5B 65 72   >>>   
02:D95E 6D 5D 00                  >>>   
02:D961                          3265   _cmp_er_er:
02:D961 63 6D 70 20 65 72 6E 2C  3266   	db	"cmp ern, erm\0"
02:D969 20 65 72 6D 00            >>>   
02:D96E                          3267   _tb_r_b:
02:D96E 74 62 20 72 6E 2E 6D 00  3268   	db	"tb rn.m\0"
02:D976                          3269   _cmp_r_i:
02:D976 63 6D 70 20 72 6E 2C 20  3270   	db	"cmp rn, #imm8\0"
02:D97E 23 69 6D 6D 38 00         >>>   
02:D984                          3271   _cmpc_r_i:
02:D984 63 6D 70 63 20 72 6E 2C  3272   	db	"cmpc rn, #imm8\0"
02:D98C 20 23 69 6D 6D 38 00      >>>   
02:D993                          3273   _sra_r_i:
02:D993 73 72 61 20 72 6E 2C 20  3274   	db	"sra rn, #imm8\0"
02:D99B 23 69 6D 6D 38 00         >>>   
                                 3275   
02:D9A1                          3276   _addr_str:
02:D9A1 23 61 64 64 72 00        3277   	db	"#addr\0"
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  65 
 Title : 
## Loc. Object                   Line   Source Statements

                                 3278   
02:D9A7                          3279   _imm8_str:
02:D9A7 2C 20 23 69 6D 6D 38 00  3280   	db	", #imm8\0"
                                 3281   
02:D9AF                          3282   _imm16_str:
02:D9AF 2C 20 23 69 6D 6D 31 36  3283   	db	", #imm16\0"
02:D9B7 00                        >>>   
                                 3284   
02:D9B8                          3285   _erm_str:
02:D9B8 2C 20 65 72 6D 00        3286   	db	", erm\0"
                                 3287   
02:D9BE                          3288   _rm_str:
02:D9BE 2C 20 72 6D 00           3289   	db	", rm\0"
                                 3290   
02:D9C3                          3291   _sp_str:
02:D9C3 2C 20 73 70 00           3292   	db	", sp\0"
                                 3293   
02:D9C8                          3294   _submode_0:
02:D9C8 44 69 73 61 73 20 4D 6F  3295   	db	"Disas Mode \0"
02:D9D0 64 65 20 00               >>>   
                                 3296   
02:D9D4                          3297   _submode_1:
02:D9D4 20 48 65 78 20 4D 6F 64  3298   	db	" Hex Mode  \0"
02:D9DC 65 20 20 00               >>>   
                                 3299   
02:D9E0                          3300   _goto_menu:
02:D9E0 47 6F 20 74 6F 2E 2E 2E  3301   	db	"Go to...\0"
02:D9E8 00                        >>>   
                                 3302   
02:D9E9                          3303   _copy_menu:
02:D9E9 43 6F 70 79 00           3304   	db	"Copy\0"
                                 3305   
02:D9EE                          3306   _move_menu:
02:D9EE 4D 6F 76 65 00           3307   	db	"Move\0"
                                 3308   
02:D9F3                          3309   _fill_menu:
02:D9F3 46 69 6C 6C 00           3310   	db	"Fill\0"
                                 3311   
02:D9F8                          3312   _goto:
02:D9F8 47 6F 20 74 6F 3A 00     3313   	db	"Go to:\0"
                                 3314   
02:D9FF                          3315   _settings_menu:
02:D9FF 53 65 74 74 69 6E 67 73  3316   	db	"Settings\0"
02:DA07 00                        >>>   
                                 3317   
02:DA08                          3318   _move_str:
02:DA08 4D 6F 76 65 20 64 61 74  3319   	db	"Move data:\0"
02:DA10 61 3A 00                  >>>   
                                 3320   
02:DA13                          3321   _copy_str:
02:DA13 43 6F 70 79 20 64 61 74  3322   	db	"Copy data:\0"
02:DA1B 61 3A 00                  >>>   
02:DA1E                          3323   _copy_str_1:
02:DA1E 62 79 74 65 73 20 66 72  3324   	db	"bytes from\0"
02:DA26 6F 6D 00                  >>>   
02:DA29                          3325   _copy_str_2:
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  66 
 Title : 
## Loc. Object                   Line   Source Statements

02:DA29 74 6F 00                 3326   	db	"to\0"
                                 3327   
02:DA2C                          3328   _fill_str:
02:DA2C 46 69 6C 6C 20 64 61 74  3329   	db	"Fill data:\0"
02:DA34 61 3A 00                  >>>   
02:DA37                          3330   _fill_str_1:
02:DA37 77 69 74 68 00           3331   	db	"with\0"
                                 3332   
02:DA3C                          3333   _settings_1:
02:DA3C 4E 65 77 20 69 6E 73 74  3334   	db	"New instruction\0"
02:DA44 72 75 63 74 69 6F 6E 00   >>>   
02:DA4C                          3335   _settings_2:
02:DA4C 53 65 74 20 73 74 61 72  3336   	db	"Set start addr\0"
02:DA54 74 20 61 64 64 72 00      >>>   
02:DA5B                          3337   _settings_3:
02:DA5B 53 65 74 20 65 6E 64 20  3338   	db	"Set end addr\0"
02:DA63 61 64 64 72 00            >>>   
02:DA68                          3339   _inst_set_1:
02:DA68 4F 76 65 72 77 72 69 74  3340   	db	"Overwrite\0"
02:DA70 65 00                     >>>   
02:DA72                          3341   _inst_set_2:
02:DA72 4D 6F 76 65 20 74 69 6C  3342   	db	"Move till FF\0"
02:DA7A 6C 20 46 46 00            >>>   
02:DA7F                          3343   _inst_set_3:
02:DA7F 4D 6F 76 65 20 74 69 6C  3344   	db	"Move till end\0"
02:DA87 6C 20 65 6E 64 00         >>>   
                                 3345   
02:DA8D                          3346   _arithmetic_str:
02:DA8D 41 72 69 74 68 6D 65 74  3347   	db	"Arithmetic inst\0"
02:DA95 69 63 20 69 6E 73 74 00   >>>   
02:DA9D                          3348   _data_transfer_str:
02:DA9D 44 61 74 61 20 74 72 61  3349   	db	"Data transfer\0"
02:DAA5 6E 73 66 65 72 00         >>>   
02:DAAB                          3350   _branch_inst_str:
02:DAAB 42 72 61 6E 63 68 20 69  3351   	db	"Branch inst\0"
02:DAB3 6E 73 74 00               >>>   
02:DAB7                          3352   _load_store_str:
02:DAB7 4C 6F 61 64 2F 73 74 6F  3353   	db	"Load/store inst\0"
02:DABF 72 65 20 69 6E 73 74 00   >>>   
                                 3354   
02:DAC7                          3355   _push_pop_str:
02:DAC7 50 75 73 68 2F 70 6F 70  3356   	db	"Push/pop inst\0"
02:DACF 20 69 6E 73 74 00         >>>   
02:DAD5                          3357   _misc_str:
02:DAD5 4D 69 73 63 65 6C 6C 61  3358   	db	"Miscellaneous\0"
02:DADD 6E 65 6F 75 73 00         >>>   
                                 3359   
02:DAE3                          3360   _sel_operand:
02:DAE3 53 65 6C 65 63 74 20 6F  3361   	db	"Select operand\0"
02:DAEB 70 65 72 61 6E 64 00      >>>   
02:DAF2                          3362   _sel_rn:
02:DAF2 52 6E 3F 20 5B 30 2D 42  3363   	db	"Rn? [0-B]\0"
02:DAFA 5D 00                     >>>   
02:DAFC                          3364   _sel_ern:
02:DAFC 45 52 6E 3F 20 5B 30 2D  3365   	db	"ERn? [0-A]\0"
02:DB04 41 5D 00                  >>>   
RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:  67 
 Title : 
## Loc. Object                   Line   Source Statements

02:DB07                          3366   _sel_bit:
02:DB07 62 69 74 3F 20 5B 30 2D  3367   	db	"bit? [0-7]\0"
02:DB0F 37 5D 00                  >>>   
                                 3368   
02:DB12                          3369   _sel_imm:
02:DB12 49 6E 70 75 74 20 69 6D  3370   	db	"Input immediate\0"
02:DB1A 6D 65 64 69 61 74 65 00   >>>   
02:DB22                          3371   _sel_imm_2:
02:DB22 76 61 6C 75 65 3A 00     3372   	db	"value:\0"
                                 3373   
02:DB29                          3374   _sel_sys_func:
02:DB29 49 6E 70 75 74 20 66 75  3375   	db	"Input function"
02:DB31 6E 63 74 69 6F 6E         >>>   
02:DB37                          3376   __sys_func:
02:DB37 3A 00                    3377   	db	":\0"
                                 3378   
02:DB39                          3379   _input_branch:
02:DB39 31 2E 49 6E 70 75 74 20  3380   	db	"1.Input addr...\0"
02:DB41 61 64 64 72 2E 2E 2E 00   >>>   
02:DB49                          3381   _sel_branch:
02:DB49 32 2E 53 65 6C 65 63 74  3382   	db	"2.Select...\0"
02:DB51 2E 2E 2E 00               >>>   
02:DB55                          3383   _sel_branch_addr:
02:DB55 49 6E 70 75 74 20 61 64  3384   	db	"Input address:\0"
02:DB5D 64 72 65 73 73 3A 00      >>>   
                                 3385   
    = 03:1000H                   3386   _program_main	EQU	03h:01000h
    = 00:9D22H                   3387   _enter	EQU	00h:09D22h
    = 00:9D2AH                   3388   _leave	EQU	00h:09D2Ah
    = 02:2492H                   3389   _hex_byte	EQU	02h:02492h
    = 00:7F00H                   3390   _clear_DDD4	EQU	00h:07F00h
    = 00:8704H                   3391   _render_DDD4	EQU	00h:08704h
    = 00:86F8H                   3392   _render_E3D4	EQU	00h:086F8h
    = 00:821EH                   3393   _line_print	EQU	00h:0821Eh
    = 00:82F6H                   3394   _char_print	EQU	00h:082F6h
    = 02:52DCH                   3395   _convert_keycode	EQU	02h:052
                                        DCh
    = 00:939AH                   3396   _reset_ko	EQU	00h:0939Ah
    = 00:9118H                   3397   _shutdown	EQU	00h:09118h
    = 00:8786H                   3398   _render_stat_bar	EQU	00h:087
                                        86h
    = 02:63C8H                   3399   _display_menu	EQU	02h:063C8h
    = 00:F746H                   3400   _wait_input	EQU	00h:0F746h
    = 00:D070H                   3401   _strcpy	EQU	00h:0D070h
    = 00:9A3AH                   3402   _smart_memcpy	EQU	00h:09A3Ah
    = 00:F1A8H                   3403   _memset	EQU	00h:0F1A8h
    = 02:83C6H                   3404   _draw_scroll_bar	EQU	02h:083
                                        C6h
    = 00:7EACH                   3405   _fill_screen	EQU	00h:07EACh
                                 3406   



  Target       : ML620906 (nX-U8/100)
  Memory Model : LARGE
  Data   Model : NEAR
  ROM WINDOW   :    0H to CFFFH
  Internal RAM : D000H to EFFFH

  Errors   : 0
  Warnings : 0  (/Wrpeast)
  Lines    : 3406
