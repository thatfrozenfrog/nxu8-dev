RASU8(ML620906)Relocatable Assembler, Ver.1.80.4    assemble list. page:   1 
 Source File: main.asm
 Object File: .\main.obj
 Date  : 2024/09/23 Mon.[11:03]
 Title : 
## Loc. Object                   Line   Source Statements

                                    1   ;; Compile Options : /TML620906 /ML /far /SD /Oa /Om /W 1 /Fa.\ /Zs 
                                    2   ;; Version Number  : Ver.3.66.2
                                    3   ;; File Name       : main.c
                                    4   
                                    5   	type (ML620906) 
                                    6   	model large, far
                                    7   	$$TABboard1$main segment table 2h any
                                    8   	$$TABcircle$main segment table 2h any
                                    9   	$$TABcross$main segment table 2h any
                                   10   	$$delay$main segment code 2h any
                                   11   	$$getrandom$main segment code 2h any
                                   12   	$$main$main segment code 2h any
                                   13   	$$render_pattern$main segment code 2h any
                                   14   	$$render_rect$main segment code 2h any
                                   15   	$$set_bits$main segment code 2h any
                                   16   	$$set_bits_old$main segment code 2h any
                                   17   	$$wait_AC$main segment code 2h any
                                   18   	STACKSEG 0400h
                                   19   CVERSION 3.66.2
                                   20   CGLOBAL 01H 03H 0000H "set_bits_old" 08H 02H 0C0H 00H 83H 20H 00H 00H 07H
                                   21   CGLOBAL 01H 03H 0000H "wait_AC" 08H 02H 0C4H 00H 80H 00H 00H 00H 07H
                                   22   CGLOBAL 01H 03H 0000H "main" 08H 02H 0C3H 00H 82H 14H 00H 00H 01H
                                   23   CGLOBAL 01H 02H 0000H "getrandom" 08H 02H 0BEH 00H 81H 06H 00H 00H 08H
                                   24   CGLOBAL 01H 03H 0000H "render_pattern" 08H 02H 0C1H 00H 83H 16H 00H 00H 07H
                                   25   CGLOBAL 01H 03H 0000H "delay" 08H 02H 0BBH 00H 80H 00H 00H 00H 07H
                                   26   CGLOBAL 01H 03H 0000H "set_bits" 08H 02H 0BFH 00H 83H 1eH 00H 00H 07H
                                   27   CGLOBAL 01H 03H 0000H "render_rect" 08H 02H 0C2H 00H 83H 16H 00H 00H 07H
                                   28   CSTRUCTTAG 0000H 0000H 0003H 0002H 00000008H "_Notag"
                                   29   CSTRUCTMEM 63H 00000004H 00000000H "quot" 02H 00H 02H
                                   30   CSTRUCTMEM 63H 00000004H 00000004H "rem" 02H 00H 02H
                                   31   CSTRUCTTAG 0000H 0000H 0002H 0002H 00000004H "_Notag"
                                   32   CSTRUCTMEM 63H 00000002H 00000000H "quot" 02H 00H 01H
                                   33   CSTRUCTMEM 63H 00000002H 00000002H "rem" 02H 00H 01H
                                   34   CSTRUCTTAG 0000H 0000H 0001H 000CH 00000024H "_Notag"
                                   35   CSTRUCTMEM 62H 00000002H 00000000H "_Mode" 02H 00H 08H
                                   36   CSTRUCTMEM 63H 00000002H 00000002H "_Handle" 02H 00H 08H
                                   37   CSTRUCTMEM 62H 00000003H 00000004H "_Buf" 04H 03H 04H 00H 00H
                                   38   CSTRUCTMEM 62H 00000003H 00000008H "_Bend" 04H 03H 04H 00H 00H
                                   39   CSTRUCTMEM 62H 00000003H 0000000CH "_Next" 04H 03H 04H 00H 00H
                                   40   CSTRUCTMEM 62H 00000003H 00000010H "_Rend" 04H 03H 04H 00H 00H
                                   41   CSTRUCTMEM 62H 00000003H 00000014H "_Rsave" 04H 03H 04H 00H 00H
                                   42   CSTRUCTMEM 62H 00000003H 00000018H "_Wend" 04H 03H 04H 00H 00H
                                   43   CSTRUCTMEM 62H 00000002H 0000001CH "_Back" 05H 01H 02H 00H 00H 00H
                                   44   CSTRUCTMEM 62H 00000001H 0000001EH "_Cbuf" 02H 00H 00H
                                   45   CSTRUCTMEM 62H 00000001H 0000001FH "_Nback" 02H 00H 00H
                                   46   CSTRUCTMEM 63H 00000003H 00000020H "_Tmpnam" 04H 03H 04H 00H 00H
                                   47   CSTRUCTTAG 0000H 0000H 0000H 0001H 00000004H "_Notag"
                                   48   CSTRUCTMEM 62H 00000004H 00000000H "_Off" 02H 00H 02H
                                   49   CUNIONTAG 0000H 0000H 0004H 0002H 00000008H "_Notag"
                                   50   CUNIONMEM 62H 00000008H "_W" 05H 01H 04H 00H 00H 08H
                                   51   CUNIONMEM 63H 00000008H "_D" 02H 00H 04H
                                   52   CTYPEDEF 0000H 0000H 21H "_Dconst" 04H 00H 06H 04H 00H
                                   53   CTYPEDEF 0000H 0000H 63H "_Ptrdifft" 02H 00H 01H
                                   54   CTYPEDEF 0000H 0000H 63H "sword" 02H 00H 08H
                                   55   CTYPEDEF 0000H 0000H 62H "ushort" 02H 00H 08H
                                   56   CTYPEDEF 0000H 0000H 62H "byte" 02H 00H 00H
                                   57   CTYPEDEF 0000H 0000H 62H "_Sizet" 02H 00H 01H
                                   58   CTYPEDEF 0000H 0000H 62H "size_t" 02H 00H 01H
                                   59   CTYPEDEF 0000H 0000H 62H "uint8_t" 02H 00H 00H
                                   60   CTYPEDEF 0000H 0000H 63H "fpos_t" 04H 00H 05H 00H 00H
                                   61   CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 31H 00H 00H 00H 00H 00H 01H
                                   62   CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 30H 00H 00H 00H 00H 00H 01H
                                   63   CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 33H 00H 00H 00H 00H 00H 01H
                                   64   CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 32H 00H 00H 00H 00H 00H 01H
                                   65   CTYPEDEF 0000H 0000H 62H "word" 02H 00H 08H
                                   66   CTYPEDEF 0000H 0000H 63H "FILE" 04H 00H 05H 01H 00H
                                   67   CTYPEDEF 0000H 0000H 63H "div_t" 04H 00H 05H 02H 00H
                                   68   CTYPEDEF 0000H 0000H 63H "ldiv_t" 04H 00H 05H 03H 00H
                                   69   CTYPEDEF 0000H 0000H 62H "uint16_t" 02H 00H 08H
                                   70   CGLOBAL 01H 20H 01F8H "board1" 05H 01H 0F8H 01H 00H 00H
                                   71   CGLOBAL 01H 20H 006FH "cross" 05H 01H 6FH 00H 00H 00H
                                   72   CGLOBAL 01H 20H 0064H "circle" 05H 01H 64H 00H 00H 00H
                                   73   CFILE 0001H 00000070H "..\\base.h"
                                   74   CFILE 0002H 00000105H "E:\\Lexide\\BuildTools\\Ver.20231124\\Inc\\U16\\stdio.h"
                                   75   CFILE 0003H 0000007AH "E:\\Lexide\\BuildTools\\Ver.20231124\\Inc\\U16\\yvals.h"
                                   76   CFILE 0004H 000000D8H "E:\\Lexide\\BuildTools\\Ver.20231124\\Inc\\U16\\stdlib.h"
                                   77   CFILE 0005H 000000C9H "E:\\Lexide\\BuildTools\\Ver.20231124\\Inc\\U16\\string.h"
                                   78   CFILE 0006H 00000066H "..\\tictactoe.h"
                                   79   CFILE 0007H 00000057H "E:\\Lexide\\BuildTools\\Ver.20231124\\Inc\\U16\\math.h"
                                   80   CFILE 0000H 000000CBH "..\\main.c"
                                   81   
  --------------------------       82   	rseg $$delay$main
                                   83   CFUNCTION 187
                                   84   
??:0000                            85   _delay	:
                                   86   CBLOCK 187 1 12
                                   87   
                                   88   ;;{
                                   89   CLINEA 0000H 0001H 000CH 0001H 0001H
                                   90   CBLOCK 187 2 12
                                   91   CARGUMENT 46H 0002H 0024H "after_ticks" 02H 00H 01H
                                   92   
                                   93   ;;    if ((FCON & 2) != 0)
                                   94   CLINEA 0000H 0001H 000DH 0005H 0018H
??:0000 91-A0 0A-F0                95   	tb	00h:0f00ah.1
??:0004 02 C9                      96   	beq	_$L1
                                   97   
                                   98   ;;        FCON &= 0xfd;
                                   99   CLINEA 0000H 0001H 000EH 0009H 0015H
??:0006 92-A0 0A-F0               100   	rb	00h:0f00ah.1
??:000A                           101   _$L1 :
                                  102   
                                  103   ;;    __DI();
                                  104   CLINEA 0000H 0001H 000FH 0005H 000BH
??:000A F7-EB                     105   	di
                                  106   
                                  107   ;;    Timer0Interval = after_ticks;
                                  108   CLINEA 0000H 0001H 0010H 0005H 0021H
??:000C 13-90 20-F0               109   	st	er0,	00h:0f020h
                                  110   
                                  111   ;;    Timer0Counter = 0;
                                  112   CLINEA 0000H 0001H 0011H 0005H 0016H
??:0010 00 E0                     113   	mov	er0,	#0 
??:0012 13-90 22-F0               114   	st	er0,	00h:0f022h
                                  115   
                                  116   ;;    Timer0Control = 0x0101;
                                  117   CLINEA 0000H 0001H 0012H 0005H 001BH
??:0016 01 00                     118   	mov	r0,	#01h
??:0018 01 01                     119   	mov	r1,	#01h
??:001A 13-90 24-F0               120   	st	er0,	00h:0f024h
                                  121   
                                  122   ;;    InterruptPending_W0 = 0;
                                  123   CLINEA 0000H 0001H 0013H 0005H 001CH
??:001E 00 E0                     124   	mov	er0,	#0 
??:0020 13-90 14-F0               125   	st	er0,	00h:0f014h
 ** Warning 25: illegal access to SFR
                                  126   
                                  127   ;;    StopAcceptor = 0x50;
                                  128   CLINEA 0000H 0001H 0014H 0005H 0018H
??:0024 50 00                     129   	mov	r0,	#050h
??:0026 11-90 08-F0               130   	st	r0,	00h:0f008h
                                  131   
                                  132   ;;    StopAcceptor = 0xa0;
                                  133   CLINEA 0000H 0001H 0015H 0005H 0018H
??:002A A0 00                     134   	mov	r0,	#0a0h
??:002C 11-90 08-F0               135   	st	r0,	00h:0f008h
                                  136   
                                  137   ;;    StopControl = 2;
                                  138   CLINEA 0000H 0001H 0016H 0005H 0014H
??:0030 02 00                     139   	mov	r0,	#02h
??:0032 11-90 09-F0               140   	st	r0,	00h:0f009h
                                  141   
                                  142   ;;    __asm("nop");
                                  143   CLINEA 0000H 0001H 0017H 0005H 0011H
??:0036 8F-FE                     144   nop
                                  145   
                                  146   ;;    __asm("nop");
                                  147   CLINEA 0000H 0001H 0018H 0005H 0011H
??:0038 8F-FE                     148   nop
                                  149   
                                  150   ;;    __EI();
                                  151   CLINEA 0000H 0001H 0019H 0005H 000BH
??:003A 08-ED                     152   	ei
                                  153   CBLOCKEND 187 2 26
                                  154   
                                  155   ;;}
                                  156   CLINEA 0000H 0001H 001AH 0001H 0001H
??:003C 1F-FE                     157   	rt
                                  158   CBLOCKEND 187 1 26
                                  159   CFUNCTIONEND 187
                                  160   
                                  161   
  --------------------------      162   	rseg $$getrandom$main
                                  163   CFUNCTION 190
                                  164   
??:0000                           165   _getrandom	:
                                  166   CBLOCK 190 1 28
                                  167   
                                  168   ;;word getrandom(word max) {
                                  169   CLINEA 0000H 0001H 001CH 0001H 001AH
??:0000 CE-F8                     170   	push	lr
??:0002 5E-F8                     171   	push	er8
??:0004 05-F8                     172   	mov	er8,	er0
                                  173   CBLOCK 190 2 28
                                  174   CRET 0002H
                                  175   CARGUMENT 46H 0002H 0028H "max" 02H 00H 01H
                                  176   
                                  177   ;;  return deref(0xF00C) % max;
                                  178   CLINEA 0000H 0001H 001DH 0003H 001DH
??:0006 10-90 0C-F0               179   	l	r0,	00h:0f00ch
??:000A 00 01                     180   	mov	r1,	#00h
??:000C 85-F2                     181   	mov	er2,	er8
??:000E 01-F0'00-00'              182   	bl	__uimodu8lw
                                  183   CBLOCKEND 190 2 30
                                  184   
                                  185   ;;}
                                  186   CLINEA 0000H 0000H 001EH 0001H 0001H
??:0012 1E-F8                     187   	pop	er8
??:0014 8E-F2                     188   	pop	pc
                                  189   CBLOCKEND 190 1 30
                                  190   CFUNCTIONEND 190
                                  191   
                                  192   
  --------------------------      193   	rseg $$set_bits$main
                                  194   CFUNCTION 191
                                  195   
??:0000                           196   _set_bits	:
                                  197   CBLOCK 191 1 32
                                  198   
                                  199   ;;void set_bits(uint8_t *mem_address, int start_bit, int num_bits, uint8_t pattern, byte invert) {
                                  200   CLINEA 0000H 0001H 0020H 0001H 0060H
??:0000 CE-F8                     201   	push	lr
??:0002 01-F0'00-00'              202   	bl	__regpushu8lw
??:0006 F2 E1                     203   	add	sp,	#-014
??:0008 05-F8                     204   	mov	er8,	er0
??:000A 25-FA                     205   	mov	er10,	er2
                                  206   CBLOCK 191 2 32
                                  207   CRET 001AH
                                  208   CARGUMENT 66H 0003H 1E28H "mem_address" 04H 03H 00H 00H 00H
                                  209   CARGUMENT 46H 0001H 001FH "pattern" 02H 00H 00H
                                  210   CARGUMENT 43H 0002H 0010H "start_bit" 02H 00H 01H
                                  211   CARGUMENT 43H 0002H 0012H "num_bits" 02H 00H 01H
                                  212   CARGUMENT 42H 0001H 0014H "invert" 02H 00H 00H
                                  213   CLOCAL 43H 0002H 0002H 0002H "start_byte" 02H 00H 01H
                                  214   CLOCAL 43H 0002H 0004H 0002H "start_offset" 02H 00H 01H
                                  215   CLOCAL 4BH 0002H 0000H 0002H "end_bit" 02H 00H 01H
                                  216   CLOCAL 43H 0002H 0006H 0002H "end_byte" 02H 00H 01H
                                  217   CLOCAL 43H 0002H 0008H 0002H "end_offset" 02H 00H 01H
                                  218   CLOCAL 43H 0002H 000CH 0002H "i" 02H 00H 01H
                                  219   CLOCAL 42H 0001H 0009H 0002H "mask" 02H 00H 00H
                                  220   CLOCAL 42H 0001H 000AH 0002H "start_mask" 02H 00H 00H
                                  221   CLOCAL 42H 0001H 000DH 0002H "end_mask" 02H 00H 00H
                                  222   
                                  223   ;;    int start_byte = start_bit / 8;
                                  224   CLINEA 0000H 0001H 0022H 0005H 0023H
??:000C 50 B0                     225   	l	er0,	16[fp]
??:000E 08 E2                     226   	mov	er2,	#8 
??:0010 01-F0'00-00'              227   	bl	__idivu8lw
??:0014 05-F6                     228   	mov	er6,	er0
??:0016 FE B0                     229   	st	er0,	-2[fp]
                                  230   
                                  231   ;;    int start_offset = start_bit % 8;
                                  232   CLINEA 0000H 0001H 0023H 0005H 0025H
??:0018 50 B0                     233   	l	er0,	16[fp]
??:001A 08 E2                     234   	mov	er2,	#8 
??:001C 01-F0'00-00'              235   	bl	__imodu8lw
??:0020 FC B0                     236   	st	er0,	-4[fp]
                                  237   
                                  238   ;;    int end_byte = end_bit / 8;
                                  239   CLINEA 0000H 0001H 0026H 0005H 001FH
??:0022 50 B4                     240   	l	er4,	16[fp]
??:0024 52 B0                     241   	l	er0,	18[fp]
??:0026 06-F4                     242   	add	er4,	er0
??:0028 FF E4                     243   	add	er4,	#-1
??:002A 45-F0                     244   	mov	er0,	er4
??:002C 08 E2                     245   	mov	er2,	#8 
??:002E 01-F0'00-00'              246   	bl	__idivu8lw
??:0032 05-FC                     247   	mov	bp,	er0
??:0034 FA B0                     248   	st	er0,	-6[fp]
                                  249   
                                  250   ;;    int end_offset = end_bit % 8;
                                  251   CLINEA 0000H 0001H 0027H 0005H 0021H
??:0036 45-F0                     252   	mov	er0,	er4
??:0038 08 E2                     253   	mov	er2,	#8 
??:003A 01-F0'00-00'              254   	bl	__imodu8lw
??:003E F8 B0                     255   	st	er0,	-8[fp]
                                  256   
                                  257   ;;    if (start_byte == end_byte) {
                                  258   CLINEA 0000H 0001H 002DH 0005H 0021H
??:0040 C7-F6                     259   	cmp	er6,	bp
??:0042 30 C8                     260   	bne	_$L5
                                  261   CBLOCK 191 3 45
                                  262   
                                  263   ;;        mask = ((1 << num_bits) - 1) << (8 - start_offset - num_bits);
                                  264   CLINEA 0000H 0001H 002FH 0009H 0046H
??:0044 01 E0                     265   	mov	er0,	#1 
??:0046 52 B2                     266   	l	er2,	18[fp]
??:0048 04 C9                     267   	beq	_$M3
??:004A                           268   _$M4 :
??:004A 1B-91                     269   	sllc	r1,	#01h
??:004C 1A-90                     270   	sll	r0,	#01h
??:004E FF E2                     271   	add	er2,	#-1
??:0050 FC C8                     272   	bne	_$M4
??:0052                           273   _$M3 :
??:0052 05-F2                     274   	mov	er2,	er0
??:0054 FF E2                     275   	add	er2,	#-1
??:0056 08 E0                     276   	mov	er0,	#8 
??:0058 7C B4                     277   	l	er4,	-4[fp]
??:005A 48-80                     278   	sub	r0,	r4
??:005C 59-81                     279   	subc	r1,	r5
??:005E 52 B4                     280   	l	er4,	18[fp]
??:0060 48-80                     281   	sub	r0,	r4
??:0062 59-81                     282   	subc	r1,	r5
??:0064 05-F0                     283   	mov	er0,	er0
??:0066 04 C9                     284   	beq	_$M5
??:0068                           285   _$M6 :
??:0068 1B-93                     286   	sllc	r3,	#01h
??:006A 1A-92                     287   	sll	r2,	#01h
??:006C FF E0                     288   	add	er0,	#-1
??:006E FC C8                     289   	bne	_$M6
??:0070                           290   _$M5 :
??:0070 F7 D2                     291   	st	r2,	-9[fp]
                                  292   
                                  293   ;;        if (invert) {
                                  294   CLINEA 0000H 0001H 0030H 0009H 0015H
??:0072 54 D0                     295   	l	r0,	20[fp]
??:0074 09 C9                     296   	beq	_$L7
                                  297   CBLOCK 191 4 48
                                  298   
                                  299   ;;            *(mem_address + start_byte) ^= mask;  // XOR để invert bit
                                  300   CLINEA 0000H 0001H 0031H 000DH 0049H
??:0076 7E B0                     301   	l	er0,	-2[fp]
??:0078 86-F0                     302   	add	er0,	er8
??:007A AF-90 00-92               303   	l	r2,	r10:[er0]
??:007E 77 D3                     304   	l	r3,	-9[fp]
??:0080 34-82                     305   	xor	r2,	r3
??:0082 9F-FE 01-92               306   	st	r2,	DSR:[er0]
                                  307   CBLOCKEND 191 4 50
??:0086 0C CE                     308   	bal	_$L9
??:0088                           309   _$L7 :
                                  310   
                                  311   ;;        } else {
                                  312   CLINEA 0000H 0000H 0032H 0009H 0010H
                                  313   CBLOCK 191 5 50
                                  314   
                                  315   ;;            *(mem_address + start_byte) = (*(mem_address + start_byte) & ~mask) | (pattern & mask);  // Đặt các bit theo `pattern`
                                  316   CLINEA 0000H 0001H 0033H 000DH 0086H
??:0088 7E B0                     317   	l	er0,	-2[fp]
??:008A 86-F0                     318   	add	er0,	er8
??:008C 20-83                     319   	mov	r3,	r2
??:008E FF 43                     320   	xor	r3,	#0ffh
??:0090 AF-90 00-94               321   	l	r4,	r10:[er0]
??:0094 42-83                     322   	and	r3,	r4
??:0096 B0-84                     323   	mov	r4,	r11
??:0098 22-84                     324   	and	r4,	r2
??:009A 33-84                     325   	or	r4,	r3
??:009C 9F-FE 01-94               326   	st	r4,	DSR:[er0]
                                  327   CBLOCKEND 191 5 52
                                  328   
                                  329   ;;        }
                                  330   CLINEA 0000H 0000H 0034H 0009H 0009H
??:00A0                           331   _$L9 :
                                  332   CBLOCKEND 191 3 53
??:00A0 00-F0'00-00'              333   	b	_$L25
??:00A4                           334   _$L5 :
                                  335   
                                  336   ;;    } else {
                                  337   CLINEA 0000H 0000H 0035H 0005H 000CH
                                  338   CBLOCK 191 6 53
                                  339   
                                  340   ;;        start_mask = 0xFF >> start_offset;
                                  341   CLINEA 0000H 0001H 0037H 0009H 002AH
??:00A4 FF 00                     342   	mov	r0,	#0ffh
??:00A6 00 01                     343   	mov	r1,	#00h
??:00A8 7C B2                     344   	l	er2,	-4[fp]
??:00AA 04 C9                     345   	beq	_$M7
??:00AC                           346   _$M8 :
??:00AC 1D-90                     347   	srlc	r0,	#01h
??:00AE 1E-91                     348   	sra	r1,	#01h
??:00B0 FF E2                     349   	add	er2,	#-1
??:00B2 FC C8                     350   	bne	_$M8
??:00B4                           351   _$M7 :
??:00B4 F6 D0                     352   	st	r0,	-10[fp]
                                  353   
                                  354   ;;        if (invert) {
                                  355   CLINEA 0000H 0001H 0038H 0009H 0015H
??:00B6 54 D0                     356   	l	r0,	20[fp]
??:00B8 09 C9                     357   	beq	_$L11
                                  358   CBLOCK 191 7 56
                                  359   
                                  360   ;;            *(mem_address + start_byte) ^= start_mask;  // XOR để invert bit
                                  361   CLINEA 0000H 0001H 0039H 000DH 004FH
??:00BA 7E B0                     362   	l	er0,	-2[fp]
??:00BC 86-F0                     363   	add	er0,	er8
??:00BE AF-90 00-92               364   	l	r2,	r10:[er0]
??:00C2 76 D3                     365   	l	r3,	-10[fp]
??:00C4 34-82                     366   	xor	r2,	r3
??:00C6 9F-FE 01-92               367   	st	r2,	DSR:[er0]
                                  368   CBLOCKEND 191 7 58
??:00CA 0D CE                     369   	bal	_$L13
??:00CC                           370   _$L11 :
                                  371   
                                  372   ;;        } else {
                                  373   CLINEA 0000H 0000H 003AH 0009H 0010H
                                  374   CBLOCK 191 8 58
                                  375   
                                  376   ;;            *(mem_address + start_byte) = (*(mem_address + start_byte) & ~start_mask) | (pattern & start_mask);  // Đặt các bit theo `pattern`
                                  377   CLINEA 0000H 0001H 003BH 000DH 0092H
??:00CC 7E B0                     378   	l	er0,	-2[fp]
??:00CE 86-F0                     379   	add	er0,	er8
??:00D0 76 D3                     380   	l	r3,	-10[fp]
??:00D2 FF 43                     381   	xor	r3,	#0ffh
??:00D4 AF-90 00-94               382   	l	r4,	r10:[er0]
??:00D8 42-83                     383   	and	r3,	r4
??:00DA B0-84                     384   	mov	r4,	r11
??:00DC 76 D5                     385   	l	r5,	-10[fp]
??:00DE 52-84                     386   	and	r4,	r5
??:00E0 33-84                     387   	or	r4,	r3
??:00E2 9F-FE 01-94               388   	st	r4,	DSR:[er0]
                                  389   CBLOCKEND 191 8 60
                                  390   
                                  391   ;;        }
                                  392   CLINEA 0000H 0000H 003CH 0009H 0009H
??:00E6                           393   _$L13 :
                                  394   
                                  395   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  396   CLINEA 0000H 0001H 003FH 000EH 0020H
??:00E6 7E B0                     397   	l	er0,	-2[fp]
                                  398   
                                  399   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  400   CLINEA 0000H 0000H 003FH 0022H 002EH
??:00E8 0F CE                     401   	bal	_$L19
                                  402   
                                  403   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  404   CLINEA 0000H 0000H 003FH 0030H 0032H
??:00EA                           405   _$L16 :
                                  406   CBLOCK 191 9 63
                                  407   
                                  408   ;;            if (invert) {
                                  409   CLINEA 0000H 0001H 0040H 000DH 0019H
??:00EA 54 D0                     410   	l	r0,	20[fp]
??:00EC 08 C9                     411   	beq	_$L20
                                  412   CBLOCK 191 10 64
                                  413   
                                  414   ;;                *(mem_address + i) ^= pattern;  // XOR để invert toàn bộ byte
                                  415   CLINEA 0000H 0001H 0041H 0011H 0053H
??:00EE 74 B0                     416   	l	er0,	-12[fp]
??:00F0 86-F0                     417   	add	er0,	er8
??:00F2 AF-90 00-92               418   	l	r2,	r10:[er0]
??:00F6 B4-82                     419   	xor	r2,	r11
??:00F8 9F-FE 01-92               420   	st	r2,	DSR:[er0]
                                  421   CBLOCKEND 191 10 66
??:00FC 04 CE                     422   	bal	_$L22
??:00FE                           423   _$L20 :
                                  424   
                                  425   ;;            } else {
                                  426   CLINEA 0000H 0000H 0042H 000DH 0014H
                                  427   CBLOCK 191 11 66
                                  428   
                                  429   ;;                *(mem_address + i) = pattern;  // Đặt toàn bộ byte theo `pattern`
                                  430   CLINEA 0000H 0001H 0043H 0011H 0057H
??:00FE 74 B0                     431   	l	er0,	-12[fp]
??:0100 86-F0                     432   	add	er0,	er8
??:0102 AF-90 01-9B               433   	st	r11,	r10:[er0]
                                  434   CBLOCKEND 191 11 68
                                  435   
                                  436   ;;            }
                                  437   CLINEA 0000H 0000H 0044H 000DH 000DH
??:0106                           438   _$L22 :
                                  439   CBLOCKEND 191 9 69
                                  440   
                                  441   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  442   CLINEA 0000H 0000H 003FH 0030H 0032H
??:0106 74 B0                     443   	l	er0,	-12[fp]
                                  444   
                                  445   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  446   CLINEA 0000H 0000H 003FH 0022H 002EH
??:0108                           447   _$L19 :
??:0108 81 E0                     448   	add	er0,	#1 
??:010A F4 B0                     449   	st	er0,	-12[fp]
??:010C 7A B2                     450   	l	er2,	-6[fp]
??:010E 27-F0                     451   	cmp	er0,	er2
??:0110 EC C5                     452   	blts	_$L16
                                  453   
                                  454   ;;        end_mask = ~(0xFF >> (end_offset + 1));
                                  455   CLINEA 0000H 0001H 0048H 0009H 002FH
??:0112 78 B2                     456   	l	er2,	-8[fp]
??:0114 81 E2                     457   	add	er2,	#1 
??:0116 FF 00                     458   	mov	r0,	#0ffh
??:0118 00 01                     459   	mov	r1,	#00h
??:011A 25-F2                     460   	mov	er2,	er2
??:011C 04 C9                     461   	beq	_$M9
??:011E                           462   _$M10 :
??:011E 1D-90                     463   	srlc	r0,	#01h
??:0120 1E-91                     464   	sra	r1,	#01h
??:0122 FF E2                     465   	add	er2,	#-1
??:0124 FC C8                     466   	bne	_$M10
??:0126                           467   _$M9 :
??:0126 FF 40                     468   	xor	r0,	#0ffh
??:0128 F3 D0                     469   	st	r0,	-13[fp]
                                  470   
                                  471   ;;        if (invert) {
                                  472   CLINEA 0000H 0001H 0049H 0009H 0015H
??:012A 54 D0                     473   	l	r0,	20[fp]
??:012C 09 C9                     474   	beq	_$L23
                                  475   CBLOCK 191 12 73
                                  476   
                                  477   ;;            *(mem_address + end_byte) ^= end_mask;  // XOR để invert các bit
                                  478   CLINEA 0000H 0001H 004AH 000DH 0050H
??:012E 7A B0                     479   	l	er0,	-6[fp]
??:0130 86-F0                     480   	add	er0,	er8
??:0132 AF-90 00-92               481   	l	r2,	r10:[er0]
??:0136 73 D3                     482   	l	r3,	-13[fp]
??:0138 34-82                     483   	xor	r2,	r3
??:013A 9F-FE 01-92               484   	st	r2,	DSR:[er0]
                                  485   CBLOCKEND 191 12 75
??:013E 0D CE                     486   	bal	_$L25
??:0140                           487   _$L23 :
                                  488   
                                  489   ;;        } else {
                                  490   CLINEA 0000H 0000H 004BH 0009H 0010H
                                  491   CBLOCK 191 13 75
                                  492   
                                  493   ;;            *(mem_address + end_byte) = (*(mem_address + end_byte) & ~end_mask) | (pattern & end_mask);  // Đặt các bit theo `pattern`
                                  494   CLINEA 0000H 0001H 004CH 000DH 008AH
??:0140 7A B0                     495   	l	er0,	-6[fp]
??:0142 86-F0                     496   	add	er0,	er8
??:0144 73 D3                     497   	l	r3,	-13[fp]
??:0146 FF 43                     498   	xor	r3,	#0ffh
??:0148 AF-90 00-94               499   	l	r4,	r10:[er0]
??:014C 42-83                     500   	and	r3,	r4
??:014E B0-84                     501   	mov	r4,	r11
??:0150 73 D5                     502   	l	r5,	-13[fp]
??:0152 52-84                     503   	and	r4,	r5
??:0154 33-84                     504   	or	r4,	r3
??:0156 9F-FE 01-94               505   	st	r4,	DSR:[er0]
                                  506   CBLOCKEND 191 13 77
                                  507   
                                  508   ;;        }
                                  509   CLINEA 0000H 0000H 004DH 0009H 0009H
??:015A                           510   _$L25 :
                                  511   CBLOCKEND 191 6 78
                                  512   CBLOCKEND 191 2 79
                                  513   
                                  514   ;;}
                                  515   CLINEA 0000H 0001H 004FH 0001H 0001H
??:015A 00-F0'00-00'              516   	b	__regpopu8lw
                                  517   CBLOCKEND 191 1 79
                                  518   CFUNCTIONEND 191
                                  519   
                                  520   
  --------------------------      521   	rseg $$set_bits_old$main
                                  522   CFUNCTION 192
                                  523   
??:0000                           524   _set_bits_old	:
                                  525   CBLOCK 192 1 81
                                  526   
                                  527   ;;void set_bits_old(uint8_t *mem_address, int start_bit, int num_bits, byte color, byte invert) {
                                  528   CLINEA 0000H 0001H 0051H 0001H 005FH
??:0000 CE-F8                     529   	push	lr
??:0002 01-F0'00-00'              530   	bl	__regpushu8lw
??:0006 F0 E1                     531   	add	sp,	#-016
??:0008 30-8B                     532   	mov	r11,	r3
??:000A 05-F8                     533   	mov	er8,	er0
??:000C 20-8A                     534   	mov	r10,	r2
                                  535   CBLOCK 192 2 81
                                  536   CRET 001CH
                                  537   CARGUMENT 66H 0003H 1E28H "mem_address" 04H 03H 00H 00H 00H
                                  538   CARGUMENT 46H 0001H 001FH "color" 02H 00H 00H
                                  539   CARGUMENT 43H 0002H 0010H "start_bit" 02H 00H 01H
                                  540   CARGUMENT 43H 0002H 0012H "num_bits" 02H 00H 01H
                                  541   CARGUMENT 42H 0001H 0014H "invert" 02H 00H 00H
                                  542   CLOCAL 43H 0002H 0002H 0002H "start_byte" 02H 00H 01H
                                  543   CLOCAL 43H 0002H 0004H 0002H "start_offset" 02H 00H 01H
                                  544   CLOCAL 4BH 0002H 0000H 0002H "end_bit" 02H 00H 01H
                                  545   CLOCAL 43H 0002H 0006H 0002H "end_byte" 02H 00H 01H
                                  546   CLOCAL 43H 0002H 0008H 0002H "end_offset" 02H 00H 01H
                                  547   CLOCAL 43H 0002H 000EH 0002H "i" 02H 00H 01H
                                  548   CLOCAL 42H 0001H 000AH 0002H "mask" 02H 00H 00H
                                  549   CLOCAL 42H 0001H 000BH 0002H "start_mask" 02H 00H 00H
                                  550   CLOCAL 42H 0001H 000FH 0002H "end_mask" 02H 00H 00H
                                  551   CLOCAL 42H 0001H 0009H 0002H "color_mask" 02H 00H 00H
                                  552   
                                  553   ;;    int start_byte = start_bit / 8;
                                  554   CLINEA 0000H 0001H 0053H 0005H 0023H
??:000E 50 B0                     555   	l	er0,	16[fp]
??:0010 08 E2                     556   	mov	er2,	#8 
??:0012 01-F0'00-00'              557   	bl	__idivu8lw
??:0016 05-F6                     558   	mov	er6,	er0
??:0018 FE B0                     559   	st	er0,	-2[fp]
                                  560   
                                  561   ;;    int start_offset = start_bit % 8;
                                  562   CLINEA 0000H 0001H 0054H 0005H 0025H
??:001A 50 B0                     563   	l	er0,	16[fp]
??:001C 08 E2                     564   	mov	er2,	#8 
??:001E 01-F0'00-00'              565   	bl	__imodu8lw
??:0022 FC B0                     566   	st	er0,	-4[fp]
                                  567   
                                  568   ;;    int end_byte = end_bit / 8;
                                  569   CLINEA 0000H 0001H 0057H 0005H 001FH
??:0024 50 B4                     570   	l	er4,	16[fp]
??:0026 52 B0                     571   	l	er0,	18[fp]
??:0028 06-F4                     572   	add	er4,	er0
??:002A FF E4                     573   	add	er4,	#-1
??:002C 45-F0                     574   	mov	er0,	er4
??:002E 08 E2                     575   	mov	er2,	#8 
??:0030 01-F0'00-00'              576   	bl	__idivu8lw
??:0034 05-FC                     577   	mov	bp,	er0
??:0036 FA B0                     578   	st	er0,	-6[fp]
                                  579   
                                  580   ;;    int end_offset = end_bit % 8;
                                  581   CLINEA 0000H 0001H 0058H 0005H 0021H
??:0038 45-F0                     582   	mov	er0,	er4
??:003A 08 E2                     583   	mov	er2,	#8 
??:003C 01-F0'00-00'              584   	bl	__imodu8lw
??:0040 F8 B0                     585   	st	er0,	-8[fp]
                                  586   
                                  587   ;;    byte color_mask = color;// ? 0xFF : 0x00;
                                  588   CLINEA 0000H 0001H 005DH 0005H 002DH
??:0042 F7 DB                     589   	st	r11,	-9[fp]
                                  590   
                                  591   ;;    if (start_byte == end_byte) {
                                  592   CLINEA 0000H 0001H 0060H 0005H 0021H
??:0044 C7-F6                     593   	cmp	er6,	bp
??:0046 30 C8                     594   	bne	_$L27
                                  595   CBLOCK 192 3 96
                                  596   
                                  597   ;;        mask = ((1 << num_bits) - 1) << (8 - start_offset - num_bits);
                                  598   CLINEA 0000H 0001H 0062H 0009H 0046H
??:0048 01 E0                     599   	mov	er0,	#1 
??:004A 52 B2                     600   	l	er2,	18[fp]
??:004C 04 C9                     601   	beq	_$M12
??:004E                           602   _$M13 :
??:004E 1B-91                     603   	sllc	r1,	#01h
??:0050 1A-90                     604   	sll	r0,	#01h
??:0052 FF E2                     605   	add	er2,	#-1
??:0054 FC C8                     606   	bne	_$M13
??:0056                           607   _$M12 :
??:0056 05-F2                     608   	mov	er2,	er0
??:0058 FF E2                     609   	add	er2,	#-1
??:005A 08 E0                     610   	mov	er0,	#8 
??:005C 7C B4                     611   	l	er4,	-4[fp]
??:005E 48-80                     612   	sub	r0,	r4
??:0060 59-81                     613   	subc	r1,	r5
??:0062 52 B4                     614   	l	er4,	18[fp]
??:0064 48-80                     615   	sub	r0,	r4
??:0066 59-81                     616   	subc	r1,	r5
??:0068 05-F0                     617   	mov	er0,	er0
??:006A 04 C9                     618   	beq	_$M14
??:006C                           619   _$M15 :
??:006C 1B-93                     620   	sllc	r3,	#01h
??:006E 1A-92                     621   	sll	r2,	#01h
??:0070 FF E0                     622   	add	er0,	#-1
??:0072 FC C8                     623   	bne	_$M15
??:0074                           624   _$M14 :
??:0074 F6 D2                     625   	st	r2,	-10[fp]
                                  626   
                                  627   ;;        if (invert) {
                                  628   CLINEA 0000H 0001H 0063H 0009H 0015H
??:0076 54 D0                     629   	l	r0,	20[fp]
??:0078 09 C9                     630   	beq	_$L29
                                  631   CBLOCK 192 4 99
                                  632   
                                  633   ;;            *(mem_address + start_byte) ^= mask;  // XOR để invert bit
                                  634   CLINEA 0000H 0001H 0064H 000DH 0049H
??:007A 7E B0                     635   	l	er0,	-2[fp]
??:007C 86-F0                     636   	add	er0,	er8
??:007E AF-90 00-92               637   	l	r2,	r10:[er0]
??:0082 76 D3                     638   	l	r3,	-10[fp]
??:0084 34-82                     639   	xor	r2,	r3
??:0086 9F-FE 01-92               640   	st	r2,	DSR:[er0]
                                  641   CBLOCKEND 192 4 101
??:008A 0C CE                     642   	bal	_$L31
??:008C                           643   _$L29 :
                                  644   
                                  645   ;;        } else {
                                  646   CLINEA 0000H 0000H 0065H 0009H 0010H
                                  647   CBLOCK 192 5 101
                                  648   
                                  649   ;;            *(mem_address + start_byte) = (*(mem_address + start_byte) & ~mask) | (color_mask & mask);  // OR để đặt bit với màu sắc
                                  650   CLINEA 0000H 0001H 0066H 000DH 008FH
??:008C 7E B0                     651   	l	er0,	-2[fp]
??:008E 86-F0                     652   	add	er0,	er8
??:0090 20-83                     653   	mov	r3,	r2
??:0092 FF 43                     654   	xor	r3,	#0ffh
??:0094 AF-90 00-94               655   	l	r4,	r10:[er0]
??:0098 42-83                     656   	and	r3,	r4
??:009A 77 D4                     657   	l	r4,	-9[fp]
??:009C 22-84                     658   	and	r4,	r2
??:009E 33-84                     659   	or	r4,	r3
??:00A0 9F-FE 01-94               660   	st	r4,	DSR:[er0]
                                  661   CBLOCKEND 192 5 103
                                  662   
                                  663   ;;        }
                                  664   CLINEA 0000H 0000H 0067H 0009H 0009H
??:00A4                           665   _$L31 :
                                  666   CBLOCKEND 192 3 104
??:00A4 00-F0'00-00'              667   	b	_$L47
??:00A8                           668   _$L27 :
                                  669   
                                  670   ;;    } else {
                                  671   CLINEA 0000H 0000H 0068H 0005H 000CH
                                  672   CBLOCK 192 6 104
                                  673   
                                  674   ;;        start_mask = 0xFF >> start_offset;
                                  675   CLINEA 0000H 0001H 006AH 0009H 002AH
??:00A8 FF 00                     676   	mov	r0,	#0ffh
??:00AA 00 01                     677   	mov	r1,	#00h
??:00AC 7C B2                     678   	l	er2,	-4[fp]
??:00AE 04 C9                     679   	beq	_$M16
??:00B0                           680   _$M17 :
??:00B0 1D-90                     681   	srlc	r0,	#01h
??:00B2 1E-91                     682   	sra	r1,	#01h
??:00B4 FF E2                     683   	add	er2,	#-1
??:00B6 FC C8                     684   	bne	_$M17
??:00B8                           685   _$M16 :
??:00B8 F5 D0                     686   	st	r0,	-11[fp]
                                  687   
                                  688   ;;        if (invert) {
                                  689   CLINEA 0000H 0001H 006BH 0009H 0015H
??:00BA 54 D0                     690   	l	r0,	20[fp]
??:00BC 09 C9                     691   	beq	_$L33
                                  692   CBLOCK 192 7 107
                                  693   
                                  694   ;;            *(mem_address + start_byte) ^= start_mask;  // XOR để invert bit
                                  695   CLINEA 0000H 0001H 006CH 000DH 004FH
??:00BE 7E B0                     696   	l	er0,	-2[fp]
??:00C0 86-F0                     697   	add	er0,	er8
??:00C2 AF-90 00-92               698   	l	r2,	r10:[er0]
??:00C6 75 D3                     699   	l	r3,	-11[fp]
??:00C8 34-82                     700   	xor	r2,	r3
??:00CA 9F-FE 01-92               701   	st	r2,	DSR:[er0]
                                  702   CBLOCKEND 192 7 109
??:00CE 0D CE                     703   	bal	_$L35
??:00D0                           704   _$L33 :
                                  705   
                                  706   ;;        } else {
                                  707   CLINEA 0000H 0000H 006DH 0009H 0010H
                                  708   CBLOCK 192 8 109
                                  709   
                                  710   ;;            *(mem_address + start_byte) = (*(mem_address + start_byte) & ~start_mask) | (color_mask & start_mask);  // OR để đặt bit với màu sắc
                                  711   CLINEA 0000H 0001H 006EH 000DH 009BH
??:00D0 7E B0                     712   	l	er0,	-2[fp]
??:00D2 86-F0                     713   	add	er0,	er8
??:00D4 75 D3                     714   	l	r3,	-11[fp]
??:00D6 FF 43                     715   	xor	r3,	#0ffh
??:00D8 AF-90 00-94               716   	l	r4,	r10:[er0]
??:00DC 42-83                     717   	and	r3,	r4
??:00DE 77 D4                     718   	l	r4,	-9[fp]
??:00E0 75 D5                     719   	l	r5,	-11[fp]
??:00E2 52-84                     720   	and	r4,	r5
??:00E4 33-84                     721   	or	r4,	r3
??:00E6 9F-FE 01-94               722   	st	r4,	DSR:[er0]
                                  723   CBLOCKEND 192 8 111
                                  724   
                                  725   ;;        }
                                  726   CLINEA 0000H 0000H 006FH 0009H 0009H
??:00EA                           727   _$L35 :
                                  728   
                                  729   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  730   CLINEA 0000H 0001H 0072H 000EH 0020H
??:00EA 7E B0                     731   	l	er0,	-2[fp]
                                  732   
                                  733   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  734   CLINEA 0000H 0000H 0072H 0022H 002EH
??:00EC 10 CE                     735   	bal	_$L41
                                  736   
                                  737   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  738   CLINEA 0000H 0000H 0072H 0030H 0032H
??:00EE                           739   _$L38 :
                                  740   CBLOCK 192 9 114
                                  741   
                                  742   ;;            if (invert) {
                                  743   CLINEA 0000H 0001H 0073H 000DH 0019H
??:00EE 54 D0                     744   	l	r0,	20[fp]
??:00F0 08 C9                     745   	beq	_$L42
                                  746   CBLOCK 192 10 115
                                  747   
                                  748   ;;                *(mem_address + i) ^= 0xFF;  // XOR toàn bộ byte để invert
                                  749   CLINEA 0000H 0001H 0074H 0011H 0050H
??:00F2 72 B0                     750   	l	er0,	-14[fp]
??:00F4 86-F0                     751   	add	er0,	er8
??:00F6 AF-90 00-92               752   	l	r2,	r10:[er0]
??:00FA FF 42                     753   	xor	r2,	#0ffh
??:00FC 9F-FE 01-92               754   	st	r2,	DSR:[er0]
                                  755   CBLOCKEND 192 10 117
??:0100 05 CE                     756   	bal	_$L44
??:0102                           757   _$L42 :
                                  758   
                                  759   ;;            } else {
                                  760   CLINEA 0000H 0000H 0075H 000DH 0014H
                                  761   CBLOCK 192 11 117
                                  762   
                                  763   ;;                *(mem_address + i) = color_mask;  // Đặt toàn bộ byte thành `color`
                                  764   CLINEA 0000H 0001H 0076H 0011H 005AH
??:0102 72 B0                     765   	l	er0,	-14[fp]
??:0104 86-F0                     766   	add	er0,	er8
??:0106 77 D3                     767   	l	r3,	-9[fp]
??:0108 AF-90 01-93               768   	st	r3,	r10:[er0]
                                  769   CBLOCKEND 192 11 119
                                  770   
                                  771   ;;            }
                                  772   CLINEA 0000H 0000H 0077H 000DH 000DH
??:010C                           773   _$L44 :
                                  774   CBLOCKEND 192 9 120
                                  775   
                                  776   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  777   CLINEA 0000H 0000H 0072H 0030H 0032H
??:010C 72 B0                     778   	l	er0,	-14[fp]
                                  779   
                                  780   ;;        for (i = start_byte + 1; i < end_byte; i++) {
                                  781   CLINEA 0000H 0000H 0072H 0022H 002EH
??:010E                           782   _$L41 :
??:010E 81 E0                     783   	add	er0,	#1 
??:0110 F2 B0                     784   	st	er0,	-14[fp]
??:0112 7A B2                     785   	l	er2,	-6[fp]
??:0114 27-F0                     786   	cmp	er0,	er2
??:0116 EB C5                     787   	blts	_$L38
                                  788   
                                  789   ;;        end_mask = ~(0xFF >> (end_offset + 1));
                                  790   CLINEA 0000H 0001H 007BH 0009H 002FH
??:0118 78 B2                     791   	l	er2,	-8[fp]
??:011A 81 E2                     792   	add	er2,	#1 
??:011C FF 00                     793   	mov	r0,	#0ffh
??:011E 00 01                     794   	mov	r1,	#00h
??:0120 25-F2                     795   	mov	er2,	er2
??:0122 04 C9                     796   	beq	_$M18
??:0124                           797   _$M19 :
??:0124 1D-90                     798   	srlc	r0,	#01h
??:0126 1E-91                     799   	sra	r1,	#01h
??:0128 FF E2                     800   	add	er2,	#-1
??:012A FC C8                     801   	bne	_$M19
??:012C                           802   _$M18 :
??:012C FF 40                     803   	xor	r0,	#0ffh
??:012E F1 D0                     804   	st	r0,	-15[fp]
                                  805   
                                  806   ;;        if (invert) {
                                  807   CLINEA 0000H 0001H 007CH 0009H 0015H
??:0130 54 D0                     808   	l	r0,	20[fp]
??:0132 09 C9                     809   	beq	_$L45
                                  810   CBLOCK 192 12 124
                                  811   
                                  812   ;;            *(mem_address + end_byte) ^= end_mask;  // XOR để invert bit
                                  813   CLINEA 0000H 0001H 007DH 000DH 004BH
??:0134 7A B0                     814   	l	er0,	-6[fp]
??:0136 86-F0                     815   	add	er0,	er8
??:0138 AF-90 00-92               816   	l	r2,	r10:[er0]
??:013C 71 D3                     817   	l	r3,	-15[fp]
??:013E 34-82                     818   	xor	r2,	r3
??:0140 9F-FE 01-92               819   	st	r2,	DSR:[er0]
                                  820   CBLOCKEND 192 12 126
??:0144 0D CE                     821   	bal	_$L47
??:0146                           822   _$L45 :
                                  823   
                                  824   ;;        } else {
                                  825   CLINEA 0000H 0000H 007EH 0009H 0010H
                                  826   CBLOCK 192 13 126
                                  827   
                                  828   ;;            *(mem_address + end_byte) = (*(mem_address + end_byte) & ~end_mask) | (color_mask & end_mask);  // OR để đặt bit với màu sắc
                                  829   CLINEA 0000H 0001H 007FH 000DH 0093H
??:0146 7A B0                     830   	l	er0,	-6[fp]
??:0148 86-F0                     831   	add	er0,	er8
??:014A 71 D3                     832   	l	r3,	-15[fp]
??:014C FF 43                     833   	xor	r3,	#0ffh
??:014E AF-90 00-94               834   	l	r4,	r10:[er0]
??:0152 42-83                     835   	and	r3,	r4
??:0154 77 D4                     836   	l	r4,	-9[fp]
??:0156 71 D5                     837   	l	r5,	-15[fp]
??:0158 52-84                     838   	and	r4,	r5
??:015A 33-84                     839   	or	r4,	r3
??:015C 9F-FE 01-94               840   	st	r4,	DSR:[er0]
                                  841   CBLOCKEND 192 13 128
                                  842   
                                  843   ;;        }
                                  844   CLINEA 0000H 0000H 0080H 0009H 0009H
??:0160                           845   _$L47 :
                                  846   CBLOCKEND 192 6 129
                                  847   CBLOCKEND 192 2 130
                                  848   
                                  849   ;;}
                                  850   CLINEA 0000H 0001H 0082H 0001H 0001H
??:0160 00-F0'00-00'              851   	b	__regpopu8lw
                                  852   CBLOCKEND 192 1 130
                                  853   CFUNCTIONEND 192
                                  854   
                                  855   
  --------------------------      856   	rseg $$render_pattern$main
                                  857   CFUNCTION 193
                                  858   
??:0000                           859   _render_pattern	:
                                  860   CBLOCK 193 1 133
                                  861   
                                  862   ;;void render_pattern(int x1, int y1, int x2, int y2, const byte* pattern, int size , byte invert) {
                                  863   CLINEA 0000H 0001H 0085H 0001H 0062H
??:0000 CE-F8                     864   	push	lr
??:0002 01-F0'00-00'              865   	bl	__regpushu8lw
??:0006 FC E1                     866   	add	sp,	#-04
??:0008 05-F8                     867   	mov	er8,	er0
                                  868   CBLOCK 193 2 133
                                  869   CRET 0010H
                                  870   CARGUMENT 47H 0002H 0028H "x1" 02H 00H 01H
                                  871   CARGUMENT 47H 0002H 0025H "y1" 02H 00H 01H
                                  872   CARGUMENT 43H 0002H 0010H "x2" 02H 00H 01H
                                  873   CARGUMENT 43H 0002H 0012H "y2" 02H 00H 01H
                                  874   CARGUMENT 60H 0003H 0014H "pattern" 04H 03H 00H 00H 00H
                                  875   CARGUMENT 43H 0002H 0018H "size" 02H 00H 01H
                                  876   CARGUMENT 42H 0001H 001AH "invert" 02H 00H 00H
                                  877   CLOCAL 6AH 0003H 0000H 0002H "mem_address" 04H 03H 00H 00H 00H
                                  878   CLOCAL 43H 0002H 0004H 0002H "i" 02H 00H 01H
                                  879   CLOCAL 4BH 0002H 0000H 0002H "y" 02H 00H 01H
                                  880   CLOCAL 43H 0002H 0002H 0002H "sel" 02H 00H 01H
                                  881   
                                  882   ;;	int sel = 0;
                                  883   CLINEA 0000H 0001H 0089H 0002H 000DH
??:000A 00 E0                     884   	mov	er0,	#0 
??:000C FE B0                     885   	st	er0,	-2[fp]
                                  886   
                                  887   ;;	for (i = y1; i <= y2; i++) {
                                  888   CLINEA 0000H 0001H 008AH 0002H 001DH
??:000E FC B2                     889   	st	er2,	-4[fp]
??:0010 28 CE                     890   	bal	_$L54
??:0012                           891   _$L51 :
                                  892   CBLOCK 193 3 138
                                  893   
                                  894   ;;		set_bits_old(mem_address + i * 0x20, x1, x2 - x1, pattern[sel], invert);
                                  895   CLINEA 0000H 0001H 008CH 0003H 004AH
??:0012 5A D0                     896   	l	r0,	26[fp]
??:0014 4E-F0                     897   	push	r0
??:0016 5E-F4                     898   	push	er4
??:0018 5E-F8                     899   	push	er8
??:001A 7E B0                     900   	l	er0,	-2[fp]
??:001C 54 B2                     901   	l	er2,	20[fp]
??:001E 26-F0                     902   	add	er0,	er2
??:0020 56 D2                     903   	l	r2,	22[fp]
??:0022 2F-90 00-93               904   	l	r3,	r2:[er0]
??:0026 65-F0                     905   	mov	er0,	er6
??:0028 20 10                     906   	add	r0,	#020h
??:002A F8 61                     907   	addc	r1,	#0f8h
??:002C 00 02                     908   	mov	r2,	#00h
??:002E 01-F0'00-00'              909   	bl	_set_bits_old
??:0032 06 E1                     910   	add	sp,	#6 
                                  911   
                                  912   ;;		deref(0xD180) = pattern[sel];
                                  913   CLINEA 0000H 0001H 008DH 0003H 001FH
??:0034 7E B0                     914   	l	er0,	-2[fp]
??:0036 54 B2                     915   	l	er2,	20[fp]
??:0038 26-F0                     916   	add	er0,	er2
??:003A 56 D2                     917   	l	r2,	22[fp]
??:003C 2F-90 00-90               918   	l	r0,	r2:[er0]
??:0040 11-90 80-D1               919   	st	r0,	00h:0d180h
                                  920   
                                  921   ;;		deref(0xD181) = sel;
                                  922   CLINEA 0000H 0001H 008EH 0003H 0016H
??:0044 7E D0                     923   	l	r0,	-2[fp]
??:0046 11-90 81-D1               924   	st	r0,	00h:0d181h
                                  925   
                                  926   ;;		if (sel == size) {
                                  927   CLINEA 0000H 0001H 008FH 0003H 0014H
??:004A 58 B0                     928   	l	er0,	24[fp]
??:004C 7E B2                     929   	l	er2,	-2[fp]
??:004E 27-F0                     930   	cmp	er0,	er2
??:0050 02 C8                     931   	bne	_$L55
                                  932   CBLOCK 193 4 143
                                  933   
                                  934   ;;			sel = 0;
                                  935   CLINEA 0000H 0001H 0090H 0004H 000BH
??:0052 00 E0                     936   	mov	er0,	#0 
                                  937   CBLOCKEND 193 4 145
??:0054 02 CE                     938   	bal	_$L57
??:0056                           939   _$L55 :
                                  940   
                                  941   ;;		} else {
                                  942   CLINEA 0000H 0000H 0091H 0003H 000AH
                                  943   CBLOCK 193 5 145
                                  944   
                                  945   ;;			sel++;
                                  946   CLINEA 0000H 0000H 0092H 0004H 0009H
??:0056 25-F0                     947   	mov	er0,	er2
??:0058 81 E0                     948   	add	er0,	#1 
                                  949   CBLOCKEND 193 5 147
                                  950   
                                  951   ;;		}
                                  952   CLINEA 0000H 0000H 0093H 0003H 0003H
??:005A                           953   _$L57 :
??:005A FE B0                     954   	st	er0,	-2[fp]
                                  955   CBLOCKEND 193 3 148
                                  956   
                                  957   ;;	for (i = y1; i <= y2; i++) {
                                  958   CLINEA 0000H 0000H 008AH 0002H 001DH
??:005C 7C B0                     959   	l	er0,	-4[fp]
??:005E 81 E0                     960   	add	er0,	#1 
??:0060 FC B0                     961   	st	er0,	-4[fp]
??:0062                           962   _$L54 :
                                  963   
                                  964   ;;	for (i = y1; i <= y2; i++) {
                                  965   CLINEA 0000H 0000H 008AH 0022H 002EH
??:0062 50 B0                     966   	l	er0,	16[fp]
??:0064 88-80                     967   	sub	r0,	r8
??:0066 99-81                     968   	subc	r1,	r9
??:0068 05-F4                     969   	mov	er4,	er0
??:006A 7C B0                     970   	l	er0,	-4[fp]
??:006C 5B-91                     971   	sllc	r1,	#05h
??:006E 5A-90                     972   	sll	r0,	#05h
??:0070 05-F6                     973   	mov	er6,	er0
??:0072 7C B0                     974   	l	er0,	-4[fp]
??:0074 52 B2                     975   	l	er2,	18[fp]
??:0076 27-F0                     976   	cmp	er0,	er2
??:0078 CC C7                     977   	bles	_$L51
                                  978   CBLOCKEND 193 2 150
                                  979   
                                  980   ;;}
                                  981   CLINEA 0000H 0001H 0096H 0001H 0001H
??:007A 00-F0'00-00'              982   	b	__regpopu8lw
                                  983   CBLOCKEND 193 1 150
                                  984   CFUNCTIONEND 193
                                  985   
                                  986   
  --------------------------      987   	rseg $$render_rect$main
                                  988   CFUNCTION 194
                                  989   
??:0000                           990   _render_rect	:
                                  991   CBLOCK 194 1 152
                                  992   
                                  993   ;;void render_rect(int x1, int y1, int x2, int y2, byte color, byte invert) {
                                  994   CLINEA 0000H 0001H 0098H 0001H 004BH
??:0000 CE-F8                     995   	push	lr
??:0002 01-F0'00-00'              996   	bl	__regpushu8lw
??:0006 FE E1                     997   	add	sp,	#-02
??:0008 25-FA                     998   	mov	er10,	er2
??:000A 05-F8                     999   	mov	er8,	er0
                                 1000   CBLOCK 194 2 152
                                 1001   CRET 000EH
                                 1002   CARGUMENT 47H 0002H 0028H "x1" 02H 00H 01H
                                 1003   CARGUMENT 47H 0002H 0029H "y1" 02H 00H 01H
                                 1004   CARGUMENT 43H 0002H 0010H "x2" 02H 00H 01H
                                 1005   CARGUMENT 43H 0002H 0012H "y2" 02H 00H 01H
                                 1006   CARGUMENT 42H 0001H 0014H "color" 02H 00H 00H
                                 1007   CARGUMENT 42H 0001H 0016H "invert" 02H 00H 00H
                                 1008   CLOCAL 6AH 0003H 0000H 0002H "mem_address" 04H 03H 00H 00H 00H
                                 1009   CLOCAL 43H 0002H 0002H 0002H "i" 02H 00H 01H
                                 1010   CLOCAL 4BH 0002H 0000H 0002H "y" 02H 00H 01H
                                 1011   
                                 1012   ;;	color = color * 0xFF;
                                 1013   CLINEA 0000H 0001H 009CH 0002H 0016H
??:000C 54 D0                    1014   	l	r0,	20[fp]
??:000E FF 02                    1015   	mov	r2,	#0ffh
??:0010 24-F0                    1016   	mul	er0,	r2
??:0012 D4 D0                    1017   	st	r0,	20[fp]
                                 1018   
                                 1019   ;;	for (i = y1; i <= y2; i++) {
                                 1020   CLINEA 0000H 0001H 009DH 0002H 001DH
??:0014 FE BA                    1021   	st	er10,	-2[fp]
??:0016 0F CE                    1022   	bal	_$L64
??:0018                          1023   _$L61 :
                                 1024   CBLOCK 194 3 157
                                 1025   
                                 1026   ;;		set_bits_old(mem_address + i * 0x20, x1, x2 - x1, color, invert);
                                 1027   CLINEA 0000H 0001H 009FH 0003H 0043H
??:0018 56 D0                    1028   	l	r0,	22[fp]
??:001A 4E-F0                    1029   	push	r0
??:001C 5E-F4                    1030   	push	er4
??:001E 5E-F8                    1031   	push	er8
??:0020 54 D3                    1032   	l	r3,	20[fp]
??:0022 65-F0                    1033   	mov	er0,	er6
??:0024 20 10                    1034   	add	r0,	#020h
??:0026 F8 61                    1035   	addc	r1,	#0f8h
??:0028 00 02                    1036   	mov	r2,	#00h
??:002A 01-F0'00-00'             1037   	bl	_set_bits_old
??:002E 06 E1                    1038   	add	sp,	#6 
                                 1039   CBLOCKEND 194 3 160
                                 1040   
                                 1041   ;;	for (i = y1; i <= y2; i++) {
                                 1042   CLINEA 0000H 0000H 009DH 0002H 001DH
??:0030 7E B0                    1043   	l	er0,	-2[fp]
??:0032 81 E0                    1044   	add	er0,	#1 
??:0034 FE B0                    1045   	st	er0,	-2[fp]
??:0036                          1046   _$L64 :
                                 1047   
                                 1048   ;;	for (i = y1; i <= y2; i++) {
                                 1049   CLINEA 0000H 0000H 009DH 0022H 002EH
??:0036 50 B0                    1050   	l	er0,	16[fp]
??:0038 88-80                    1051   	sub	r0,	r8
??:003A 99-81                    1052   	subc	r1,	r9
??:003C 05-F4                    1053   	mov	er4,	er0
??:003E 7E B0                    1054   	l	er0,	-2[fp]
??:0040 5B-91                    1055   	sllc	r1,	#05h
??:0042 5A-90                    1056   	sll	r0,	#05h
??:0044 05-F6                    1057   	mov	er6,	er0
??:0046 7E B0                    1058   	l	er0,	-2[fp]
??:0048 52 B2                    1059   	l	er2,	18[fp]
??:004A 27-F0                    1060   	cmp	er0,	er2
??:004C E5 C7                    1061   	bles	_$L61
                                 1062   CBLOCKEND 194 2 162
                                 1063   
                                 1064   ;;}
                                 1065   CLINEA 0000H 0001H 00A2H 0001H 0001H
??:004E 00-F0'00-00'             1066   	b	__regpopu8lw
                                 1067   CBLOCKEND 194 1 162
                                 1068   CFUNCTIONEND 194
                                 1069   
                                 1070   
  --------------------------     1071   	rseg $$main$main
                                 1072   CFUNCTION 195
                                 1073   
??:0000                          1074   _main	:
                                 1075   CBLOCK 195 1 165
                                 1076   
                                 1077   ;;int main() {
                                 1078   CLINEA 0000H 0001H 00A5H 0001H 000CH
??:0000 1A-AE                    1079   	mov	fp,	sp
??:0002 F8 E1                    1080   	add	sp,	#-08
                                 1081   CBLOCK 195 2 165
                                 1082   CLOCAL 42H 0007H 0008H 0002H "pattern" 05H 01H 07H 00H 00H 00H
                                 1083   CLOCAL 4BH 0002H 0000H 0002H "k" 02H 00H 01H
                                 1084   CLOCAL 4BH 0002H 0000H 0002H "r" 02H 00H 01H
                                 1085   
                                 1086   ;;			0xFF, 0xC3, 0xA5, 0x99, 0xA5, 0xC3, 0xFF
                                 1087   CLINEA 0000H 0001H 00AAH 0004H 002BH
??:0004 FF 00                    1088   	mov	r0,	#0ffh
??:0006 F8 D0                    1089   	st	r0,	-8[fp]
??:0008 C3 00                    1090   	mov	r0,	#0c3h
??:000A F9 D0                    1091   	st	r0,	-7[fp]
??:000C A5 00                    1092   	mov	r0,	#0a5h
??:000E FA D0                    1093   	st	r0,	-6[fp]
??:0010 99 00                    1094   	mov	r0,	#099h
??:0012 FB D0                    1095   	st	r0,	-5[fp]
??:0014 A5 00                    1096   	mov	r0,	#0a5h
??:0016 FC D0                    1097   	st	r0,	-4[fp]
??:0018 C3 00                    1098   	mov	r0,	#0c3h
??:001A FD D0                    1099   	st	r0,	-3[fp]
??:001C FF 00                    1100   	mov	r0,	#0ffh
??:001E FE D0                    1101   	st	r0,	-2[fp]
                                 1102   
                                 1103   ;;    memset((void *)0xD000, 0x00, 0x15D3);  // Clear some memory region
                                 1104   CLINEA 0000H 0001H 00AFH 0005H 0046H
??:0020 D3 00                    1105   	mov	r0,	#0d3h
??:0022 15 01                    1106   	mov	r1,	#015h
??:0024 5E-F0                    1107   	push	er0
??:0026 00 E0                    1108   	mov	er0,	#0 
??:0028 5E-F0                    1109   	push	er0
??:002A D0 01                    1110   	mov	r1,	#0d0h
??:002C 00 02                    1111   	mov	r2,	#00h
??:002E 01-F0'00-00'             1112   	bl	_memset_f
??:0032 04 E1                    1113   	add	sp,	#4 
                                 1114   
                                 1115   ;;    memset((void *)0xf800, 0x00, 0x800);   // Clear another memory region
                                 1116   CLINEA 0000H 0001H 00B0H 0005H 0049H
??:0034 00 00                    1117   	mov	r0,	#00h
??:0036 08 01                    1118   	mov	r1,	#08h
??:0038 5E-F0                    1119   	push	er0
??:003A 00 E0                    1120   	mov	er0,	#0 
??:003C 5E-F0                    1121   	push	er0
??:003E F8 01                    1122   	mov	r1,	#0f8h
??:0040 00 02                    1123   	mov	r2,	#00h
??:0042 01-F0'00-00'             1124   	bl	_memset_f
??:0046 04 E1                    1125   	add	sp,	#4 
                                 1126   
                                 1127   ;;    render_pattern(65, 1, 85*2, 21*2, pattern, sizeof(pattern)+2, 0);
                                 1128   CLINEA 0000H 0001H 00BCH 0005H 0045H
??:0048 00 00                    1129   	mov	r0,	#00h
??:004A 4E-F0                    1130   	push	r0
??:004C 09 E0                    1131   	mov	er0,	#9 
??:004E 5E-F0                    1132   	push	er0
??:0050 E5-F0                    1133   	mov	er0,	fp
??:0052 F8 E0                    1134   	add	er0,	#-8
??:0054 00 02                    1135   	mov	r2,	#00h
??:0056 4E-F2                    1136   	push	r2
??:0058 5E-F0                    1137   	push	er0
??:005A 2A E0                    1138   	mov	er0,	#42
??:005C 5E-F0                    1139   	push	er0
??:005E AA 00                    1140   	mov	r0,	#0aah
??:0060 5E-F0                    1141   	push	er0
??:0062 01 E2                    1142   	mov	er2,	#1 
??:0064 41 00                    1143   	mov	r0,	#041h
??:0066 01-F0'00-00'             1144   	bl	_render_pattern
??:006A 0C E1                    1145   	add	sp,	#12
                                 1146   
                                 1147   ;;    return 0;
                                 1148   CLINEA 0000H 0001H 00BDH 0005H 000DH
                                 1149   CBLOCKEND 195 2 190
                                 1150   
                                 1151   ;;}
                                 1152   CLINEA 0000H 0000H 00BEH 0001H 0001H
??:006C 00 E0                    1153   	mov	er0,	#0 
??:006E                          1154   _$$end_of_main :
??:006E FF CE                    1155   	bal	$
                                 1156   CBLOCKEND 195 1 190
                                 1157   CFUNCTIONEND 195
                                 1158   
                                 1159   
  --------------------------     1160   	rseg $$wait_AC$main
                                 1161   CFUNCTION 196
                                 1162   
??:0000                          1163   _wait_AC	:
                                 1164   CBLOCK 196 1 193
                                 1165   
                                 1166   ;;void wait_AC() {
                                 1167   CLINEA 0000H 0001H 00C1H 0001H 0010H
                                 1168   CBLOCK 196 2 193
                                 1169   
                                 1170   ;;	while (deref(0xF040) != 0xFB){
                                 1171   CLINEA 0000H 0000H 00C2H 0001H 0001H
??:0000 03 CE                    1172   	bal	_$L71
                                 1173   
                                 1174   ;;	while (deref(0xF040) != 0xFB){
                                 1175   CLINEA 0000H 0000H 00C2H 0002H 001FH
??:0002                          1176   _$L69 :
                                 1177   CBLOCK 196 3 194
                                 1178   
                                 1179   ;;		deref(0xF046) = 0x10;
                                 1180   CLINEA 0000H 0001H 00C3H 0003H 0017H
??:0002 10 00                    1181   	mov	r0,	#010h
??:0004 11-90 46-F0              1182   	st	r0,	00h:0f046h
                                 1183   CBLOCKEND 196 3 197
                                 1184   
                                 1185   ;;	while (deref(0xF040) != 0xFB){
                                 1186   CLINEA 0000H 0000H 00C2H 0001H 0001H
??:0008                          1187   _$L71 :
                                 1188   
                                 1189   ;;	while (deref(0xF040) != 0xFB){
                                 1190   CLINEA 0000H 0000H 00C2H 0022H 002EH
??:0008 10-90 40-F0              1191   	l	r0,	00h:0f040h
??:000C FB 70                    1192   	cmp	r0,	#0fbh
??:000E F9 C8                    1193   	bne	_$L69
                                 1194   
                                 1195   ;;	deref(0xF040) = 0xFF;
                                 1196   CLINEA 0000H 0001H 00C6H 0002H 0016H
??:0010 FF 00                    1197   	mov	r0,	#0ffh
??:0012 11-90 40-F0              1198   	st	r0,	00h:0f040h
 ** Warning 25: illegal access to SFR
                                 1199   
                                 1200   ;;	delay(2000);
                                 1201   CLINEA 0000H 0001H 00C7H 0002H 000DH
??:0016 D0 00                    1202   	mov	r0,	#0d0h
??:0018 07 01                    1203   	mov	r1,	#07h
??:001A 00-F0'00-00'             1204   	b	_delay
                                 1205   CBLOCKEND 196 2 200
                                 1206   CLINEA 0000H 0001H 00C8H 0001H 0001H
                                 1207   CBLOCKEND 196 1 200
                                 1208   CFUNCTIONEND 196
                                 1209   
                                 1210   	public _board1
                                 1211   	public _set_bits_old
                                 1212   	public _cross
                                 1213   	public _wait_AC
                                 1214   	public _circle
                                 1215   	public _main
                                 1216   	public _getrandom
                                 1217   	public _render_pattern
                                 1218   	public _delay
                                 1219   	public _set_bits
                                 1220   	public _render_rect
                                 1221   	extrn code far : _memset_f
                                 1222   	extrn code : $$start_up
                                 1223   
  --------------------------     1224   	cseg #00h at 02h
00:0002 00-00'                   1225   	dw	$$start_up
                                 1226   
  --------------------------     1227   	rseg $$TABboard1$main
??:0000                          1228   _board1 :
??:0000 FF                       1229   	db	0ffh
??:0001 FF                       1230   	db	0ffh
??:0002 FF                       1231   	db	0ffh
??:0003 FF                       1232   	db	0ffh
??:0004 FF                       1233   	db	0ffh
??:0005 FF                       1234   	db	0ffh
??:0006 FF                       1235   	db	0ffh
??:0007 FE                       1236   	db	0feh
??:0008 80                       1237   	db	080h
??:0009 00                       1238   	db	00h
??:000A 0C                       1239   	db	0ch
??:000B 00                       1240   	db	00h
??:000C 00                       1241   	db	00h
??:000D 60                       1242   	db	060h
??:000E 00                       1243   	db	00h
??:000F 02                       1244   	db	02h
??:0010 80                       1245   	db	080h
??:0011 00                       1246   	db	00h
??:0012 0C                       1247   	db	0ch
??:0013 00                       1248   	db	00h
??:0014 00                       1249   	db	00h
??:0015 60                       1250   	db	060h
??:0016 00                       1251   	db	00h
??:0017 02                       1252   	db	02h
??:0018 80                       1253   	db	080h
??:0019 00                       1254   	db	00h
??:001A 0C                       1255   	db	0ch
??:001B 00                       1256   	db	00h
??:001C 00                       1257   	db	00h
??:001D 60                       1258   	db	060h
??:001E 00                       1259   	db	00h
??:001F 02                       1260   	db	02h
??:0020 80                       1261   	db	080h
??:0021 00                       1262   	db	00h
??:0022 0C                       1263   	db	0ch
??:0023 00                       1264   	db	00h
??:0024 00                       1265   	db	00h
??:0025 60                       1266   	db	060h
??:0026 00                       1267   	db	00h
??:0027 02                       1268   	db	02h
??:0028 80                       1269   	db	080h
??:0029 00                       1270   	db	00h
??:002A 0C                       1271   	db	0ch
??:002B 00                       1272   	db	00h
??:002C 00                       1273   	db	00h
??:002D 60                       1274   	db	060h
??:002E 00                       1275   	db	00h
??:002F 02                       1276   	db	02h
??:0030 80                       1277   	db	080h
??:0031 00                       1278   	db	00h
??:0032 0C                       1279   	db	0ch
??:0033 00                       1280   	db	00h
??:0034 00                       1281   	db	00h
??:0035 60                       1282   	db	060h
??:0036 00                       1283   	db	00h
??:0037 02                       1284   	db	02h
??:0038 80                       1285   	db	080h
??:0039 00                       1286   	db	00h
??:003A 0C                       1287   	db	0ch
??:003B 00                       1288   	db	00h
??:003C 00                       1289   	db	00h
??:003D 60                       1290   	db	060h
??:003E 00                       1291   	db	00h
??:003F 02                       1292   	db	02h
??:0040 80                       1293   	db	080h
??:0041 00                       1294   	db	00h
??:0042 0C                       1295   	db	0ch
??:0043 00                       1296   	db	00h
??:0044 00                       1297   	db	00h
??:0045 60                       1298   	db	060h
??:0046 00                       1299   	db	00h
??:0047 02                       1300   	db	02h
??:0048 80                       1301   	db	080h
??:0049 00                       1302   	db	00h
??:004A 0C                       1303   	db	0ch
??:004B 00                       1304   	db	00h
??:004C 00                       1305   	db	00h
??:004D 60                       1306   	db	060h
??:004E 00                       1307   	db	00h
??:004F 02                       1308   	db	02h
??:0050 80                       1309   	db	080h
??:0051 00                       1310   	db	00h
??:0052 0C                       1311   	db	0ch
??:0053 00                       1312   	db	00h
??:0054 00                       1313   	db	00h
??:0055 60                       1314   	db	060h
??:0056 00                       1315   	db	00h
??:0057 02                       1316   	db	02h
??:0058 80                       1317   	db	080h
??:0059 00                       1318   	db	00h
??:005A 0C                       1319   	db	0ch
??:005B 00                       1320   	db	00h
??:005C 00                       1321   	db	00h
??:005D 60                       1322   	db	060h
??:005E 00                       1323   	db	00h
??:005F 02                       1324   	db	02h
??:0060 80                       1325   	db	080h
??:0061 00                       1326   	db	00h
??:0062 0C                       1327   	db	0ch
??:0063 00                       1328   	db	00h
??:0064 00                       1329   	db	00h
??:0065 60                       1330   	db	060h
??:0066 00                       1331   	db	00h
??:0067 02                       1332   	db	02h
??:0068 80                       1333   	db	080h
??:0069 00                       1334   	db	00h
??:006A 0C                       1335   	db	0ch
??:006B 00                       1336   	db	00h
??:006C 00                       1337   	db	00h
??:006D 60                       1338   	db	060h
??:006E 00                       1339   	db	00h
??:006F 02                       1340   	db	02h
??:0070 80                       1341   	db	080h
??:0071 00                       1342   	db	00h
??:0072 0C                       1343   	db	0ch
??:0073 00                       1344   	db	00h
??:0074 00                       1345   	db	00h
??:0075 60                       1346   	db	060h
??:0076 00                       1347   	db	00h
??:0077 02                       1348   	db	02h
??:0078 80                       1349   	db	080h
??:0079 00                       1350   	db	00h
??:007A 0C                       1351   	db	0ch
??:007B 00                       1352   	db	00h
??:007C 00                       1353   	db	00h
??:007D 60                       1354   	db	060h
??:007E 00                       1355   	db	00h
??:007F 02                       1356   	db	02h
??:0080 80                       1357   	db	080h
??:0081 00                       1358   	db	00h
??:0082 0C                       1359   	db	0ch
??:0083 00                       1360   	db	00h
??:0084 00                       1361   	db	00h
??:0085 60                       1362   	db	060h
??:0086 00                       1363   	db	00h
??:0087 02                       1364   	db	02h
??:0088 80                       1365   	db	080h
??:0089 00                       1366   	db	00h
??:008A 0C                       1367   	db	0ch
??:008B 00                       1368   	db	00h
??:008C 00                       1369   	db	00h
??:008D 60                       1370   	db	060h
??:008E 00                       1371   	db	00h
??:008F 02                       1372   	db	02h
??:0090 80                       1373   	db	080h
??:0091 00                       1374   	db	00h
??:0092 0C                       1375   	db	0ch
??:0093 00                       1376   	db	00h
??:0094 00                       1377   	db	00h
??:0095 60                       1378   	db	060h
??:0096 00                       1379   	db	00h
??:0097 02                       1380   	db	02h
??:0098 80                       1381   	db	080h
??:0099 00                       1382   	db	00h
??:009A 0C                       1383   	db	0ch
??:009B 00                       1384   	db	00h
??:009C 00                       1385   	db	00h
??:009D 60                       1386   	db	060h
??:009E 00                       1387   	db	00h
??:009F 02                       1388   	db	02h
??:00A0 FF                       1389   	db	0ffh
??:00A1 FF                       1390   	db	0ffh
??:00A2 FF                       1391   	db	0ffh
??:00A3 FF                       1392   	db	0ffh
??:00A4 FF                       1393   	db	0ffh
??:00A5 FF                       1394   	db	0ffh
??:00A6 FF                       1395   	db	0ffh
??:00A7 FE                       1396   	db	0feh
??:00A8 FF                       1397   	db	0ffh
??:00A9 FF                       1398   	db	0ffh
??:00AA FF                       1399   	db	0ffh
??:00AB FF                       1400   	db	0ffh
??:00AC FF                       1401   	db	0ffh
??:00AD FF                       1402   	db	0ffh
??:00AE FF                       1403   	db	0ffh
??:00AF FE                       1404   	db	0feh
??:00B0 80                       1405   	db	080h
??:00B1 00                       1406   	db	00h
??:00B2 0C                       1407   	db	0ch
??:00B3 00                       1408   	db	00h
??:00B4 00                       1409   	db	00h
??:00B5 60                       1410   	db	060h
??:00B6 00                       1411   	db	00h
??:00B7 02                       1412   	db	02h
??:00B8 80                       1413   	db	080h
??:00B9 00                       1414   	db	00h
??:00BA 0C                       1415   	db	0ch
??:00BB 00                       1416   	db	00h
??:00BC 00                       1417   	db	00h
??:00BD 60                       1418   	db	060h
??:00BE 00                       1419   	db	00h
??:00BF 02                       1420   	db	02h
??:00C0 80                       1421   	db	080h
??:00C1 00                       1422   	db	00h
??:00C2 0C                       1423   	db	0ch
??:00C3 00                       1424   	db	00h
??:00C4 00                       1425   	db	00h
??:00C5 60                       1426   	db	060h
??:00C6 00                       1427   	db	00h
??:00C7 02                       1428   	db	02h
??:00C8 80                       1429   	db	080h
??:00C9 00                       1430   	db	00h
??:00CA 0C                       1431   	db	0ch
??:00CB 00                       1432   	db	00h
??:00CC 00                       1433   	db	00h
??:00CD 60                       1434   	db	060h
??:00CE 00                       1435   	db	00h
??:00CF 02                       1436   	db	02h
??:00D0 80                       1437   	db	080h
??:00D1 00                       1438   	db	00h
??:00D2 0C                       1439   	db	0ch
??:00D3 00                       1440   	db	00h
??:00D4 00                       1441   	db	00h
??:00D5 60                       1442   	db	060h
??:00D6 00                       1443   	db	00h
??:00D7 02                       1444   	db	02h
??:00D8 80                       1445   	db	080h
??:00D9 00                       1446   	db	00h
??:00DA 0C                       1447   	db	0ch
??:00DB 00                       1448   	db	00h
??:00DC 00                       1449   	db	00h
??:00DD 60                       1450   	db	060h
??:00DE 00                       1451   	db	00h
??:00DF 02                       1452   	db	02h
??:00E0 80                       1453   	db	080h
??:00E1 00                       1454   	db	00h
??:00E2 0C                       1455   	db	0ch
??:00E3 00                       1456   	db	00h
??:00E4 00                       1457   	db	00h
??:00E5 60                       1458   	db	060h
??:00E6 00                       1459   	db	00h
??:00E7 02                       1460   	db	02h
??:00E8 80                       1461   	db	080h
??:00E9 00                       1462   	db	00h
??:00EA 0C                       1463   	db	0ch
??:00EB 00                       1464   	db	00h
??:00EC 00                       1465   	db	00h
??:00ED 60                       1466   	db	060h
??:00EE 00                       1467   	db	00h
??:00EF 02                       1468   	db	02h
??:00F0 80                       1469   	db	080h
??:00F1 00                       1470   	db	00h
??:00F2 0C                       1471   	db	0ch
??:00F3 00                       1472   	db	00h
??:00F4 00                       1473   	db	00h
??:00F5 60                       1474   	db	060h
??:00F6 00                       1475   	db	00h
??:00F7 02                       1476   	db	02h
??:00F8 80                       1477   	db	080h
??:00F9 00                       1478   	db	00h
??:00FA 0C                       1479   	db	0ch
??:00FB 00                       1480   	db	00h
??:00FC 00                       1481   	db	00h
??:00FD 60                       1482   	db	060h
??:00FE 00                       1483   	db	00h
??:00FF 02                       1484   	db	02h
??:0100 80                       1485   	db	080h
??:0101 00                       1486   	db	00h
??:0102 0C                       1487   	db	0ch
??:0103 00                       1488   	db	00h
??:0104 00                       1489   	db	00h
??:0105 60                       1490   	db	060h
??:0106 00                       1491   	db	00h
??:0107 02                       1492   	db	02h
??:0108 80                       1493   	db	080h
??:0109 00                       1494   	db	00h
??:010A 0C                       1495   	db	0ch
??:010B 00                       1496   	db	00h
??:010C 00                       1497   	db	00h
??:010D 60                       1498   	db	060h
??:010E 00                       1499   	db	00h
??:010F 02                       1500   	db	02h
??:0110 80                       1501   	db	080h
??:0111 00                       1502   	db	00h
??:0112 0C                       1503   	db	0ch
??:0113 00                       1504   	db	00h
??:0114 00                       1505   	db	00h
??:0115 60                       1506   	db	060h
??:0116 00                       1507   	db	00h
??:0117 02                       1508   	db	02h
??:0118 80                       1509   	db	080h
??:0119 00                       1510   	db	00h
??:011A 0C                       1511   	db	0ch
??:011B 00                       1512   	db	00h
??:011C 00                       1513   	db	00h
??:011D 60                       1514   	db	060h
??:011E 00                       1515   	db	00h
??:011F 02                       1516   	db	02h
??:0120 80                       1517   	db	080h
??:0121 00                       1518   	db	00h
??:0122 0C                       1519   	db	0ch
??:0123 00                       1520   	db	00h
??:0124 00                       1521   	db	00h
??:0125 60                       1522   	db	060h
??:0126 00                       1523   	db	00h
??:0127 02                       1524   	db	02h
??:0128 80                       1525   	db	080h
??:0129 00                       1526   	db	00h
??:012A 0C                       1527   	db	0ch
??:012B 00                       1528   	db	00h
??:012C 00                       1529   	db	00h
??:012D 60                       1530   	db	060h
??:012E 00                       1531   	db	00h
??:012F 02                       1532   	db	02h
??:0130 80                       1533   	db	080h
??:0131 00                       1534   	db	00h
??:0132 0C                       1535   	db	0ch
??:0133 00                       1536   	db	00h
??:0134 00                       1537   	db	00h
??:0135 60                       1538   	db	060h
??:0136 00                       1539   	db	00h
??:0137 02                       1540   	db	02h
??:0138 80                       1541   	db	080h
??:0139 00                       1542   	db	00h
??:013A 0C                       1543   	db	0ch
??:013B 00                       1544   	db	00h
??:013C 00                       1545   	db	00h
??:013D 60                       1546   	db	060h
??:013E 00                       1547   	db	00h
??:013F 02                       1548   	db	02h
??:0140 80                       1549   	db	080h
??:0141 00                       1550   	db	00h
??:0142 0C                       1551   	db	0ch
??:0143 00                       1552   	db	00h
??:0144 00                       1553   	db	00h
??:0145 60                       1554   	db	060h
??:0146 00                       1555   	db	00h
??:0147 02                       1556   	db	02h
??:0148 FF                       1557   	db	0ffh
??:0149 FF                       1558   	db	0ffh
??:014A FF                       1559   	db	0ffh
??:014B FF                       1560   	db	0ffh
??:014C FF                       1561   	db	0ffh
??:014D FF                       1562   	db	0ffh
??:014E FF                       1563   	db	0ffh
??:014F FE                       1564   	db	0feh
??:0150 FF                       1565   	db	0ffh
??:0151 FF                       1566   	db	0ffh
??:0152 FF                       1567   	db	0ffh
??:0153 FF                       1568   	db	0ffh
??:0154 FF                       1569   	db	0ffh
??:0155 FF                       1570   	db	0ffh
??:0156 FF                       1571   	db	0ffh
??:0157 FE                       1572   	db	0feh
??:0158 80                       1573   	db	080h
??:0159 00                       1574   	db	00h
??:015A 0C                       1575   	db	0ch
??:015B 00                       1576   	db	00h
??:015C 00                       1577   	db	00h
??:015D 60                       1578   	db	060h
??:015E 00                       1579   	db	00h
??:015F 02                       1580   	db	02h
??:0160 80                       1581   	db	080h
??:0161 00                       1582   	db	00h
??:0162 0C                       1583   	db	0ch
??:0163 00                       1584   	db	00h
??:0164 00                       1585   	db	00h
??:0165 60                       1586   	db	060h
??:0166 00                       1587   	db	00h
??:0167 02                       1588   	db	02h
??:0168 80                       1589   	db	080h
??:0169 00                       1590   	db	00h
??:016A 0C                       1591   	db	0ch
??:016B 00                       1592   	db	00h
??:016C 00                       1593   	db	00h
??:016D 60                       1594   	db	060h
??:016E 00                       1595   	db	00h
??:016F 02                       1596   	db	02h
??:0170 80                       1597   	db	080h
??:0171 00                       1598   	db	00h
??:0172 0C                       1599   	db	0ch
??:0173 00                       1600   	db	00h
??:0174 00                       1601   	db	00h
??:0175 60                       1602   	db	060h
??:0176 00                       1603   	db	00h
??:0177 02                       1604   	db	02h
??:0178 80                       1605   	db	080h
??:0179 00                       1606   	db	00h
??:017A 0C                       1607   	db	0ch
??:017B 00                       1608   	db	00h
??:017C 00                       1609   	db	00h
??:017D 60                       1610   	db	060h
??:017E 00                       1611   	db	00h
??:017F 02                       1612   	db	02h
??:0180 80                       1613   	db	080h
??:0181 00                       1614   	db	00h
??:0182 0C                       1615   	db	0ch
??:0183 00                       1616   	db	00h
??:0184 00                       1617   	db	00h
??:0185 60                       1618   	db	060h
??:0186 00                       1619   	db	00h
??:0187 02                       1620   	db	02h
??:0188 80                       1621   	db	080h
??:0189 00                       1622   	db	00h
??:018A 0C                       1623   	db	0ch
??:018B 00                       1624   	db	00h
??:018C 00                       1625   	db	00h
??:018D 60                       1626   	db	060h
??:018E 00                       1627   	db	00h
??:018F 02                       1628   	db	02h
??:0190 80                       1629   	db	080h
??:0191 00                       1630   	db	00h
??:0192 0C                       1631   	db	0ch
??:0193 00                       1632   	db	00h
??:0194 00                       1633   	db	00h
??:0195 60                       1634   	db	060h
??:0196 00                       1635   	db	00h
??:0197 02                       1636   	db	02h
??:0198 80                       1637   	db	080h
??:0199 00                       1638   	db	00h
??:019A 0C                       1639   	db	0ch
??:019B 00                       1640   	db	00h
??:019C 00                       1641   	db	00h
??:019D 60                       1642   	db	060h
??:019E 00                       1643   	db	00h
??:019F 02                       1644   	db	02h
??:01A0 80                       1645   	db	080h
??:01A1 00                       1646   	db	00h
??:01A2 0C                       1647   	db	0ch
??:01A3 00                       1648   	db	00h
??:01A4 00                       1649   	db	00h
??:01A5 60                       1650   	db	060h
??:01A6 00                       1651   	db	00h
??:01A7 02                       1652   	db	02h
??:01A8 80                       1653   	db	080h
??:01A9 00                       1654   	db	00h
??:01AA 0C                       1655   	db	0ch
??:01AB 00                       1656   	db	00h
??:01AC 00                       1657   	db	00h
??:01AD 60                       1658   	db	060h
??:01AE 00                       1659   	db	00h
??:01AF 02                       1660   	db	02h
??:01B0 80                       1661   	db	080h
??:01B1 00                       1662   	db	00h
??:01B2 0C                       1663   	db	0ch
??:01B3 00                       1664   	db	00h
??:01B4 00                       1665   	db	00h
??:01B5 60                       1666   	db	060h
??:01B6 00                       1667   	db	00h
??:01B7 02                       1668   	db	02h
??:01B8 80                       1669   	db	080h
??:01B9 00                       1670   	db	00h
??:01BA 0C                       1671   	db	0ch
??:01BB 00                       1672   	db	00h
??:01BC 00                       1673   	db	00h
??:01BD 60                       1674   	db	060h
??:01BE 00                       1675   	db	00h
??:01BF 02                       1676   	db	02h
??:01C0 80                       1677   	db	080h
??:01C1 00                       1678   	db	00h
??:01C2 0C                       1679   	db	0ch
??:01C3 00                       1680   	db	00h
??:01C4 00                       1681   	db	00h
??:01C5 60                       1682   	db	060h
??:01C6 00                       1683   	db	00h
??:01C7 02                       1684   	db	02h
??:01C8 80                       1685   	db	080h
??:01C9 00                       1686   	db	00h
??:01CA 0C                       1687   	db	0ch
??:01CB 00                       1688   	db	00h
??:01CC 00                       1689   	db	00h
??:01CD 60                       1690   	db	060h
??:01CE 00                       1691   	db	00h
??:01CF 02                       1692   	db	02h
??:01D0 80                       1693   	db	080h
??:01D1 00                       1694   	db	00h
??:01D2 0C                       1695   	db	0ch
??:01D3 00                       1696   	db	00h
??:01D4 00                       1697   	db	00h
??:01D5 60                       1698   	db	060h
??:01D6 00                       1699   	db	00h
??:01D7 02                       1700   	db	02h
??:01D8 80                       1701   	db	080h
??:01D9 00                       1702   	db	00h
??:01DA 0C                       1703   	db	0ch
??:01DB 00                       1704   	db	00h
??:01DC 00                       1705   	db	00h
??:01DD 60                       1706   	db	060h
??:01DE 00                       1707   	db	00h
??:01DF 02                       1708   	db	02h
??:01E0 80                       1709   	db	080h
??:01E1 00                       1710   	db	00h
??:01E2 0C                       1711   	db	0ch
??:01E3 00                       1712   	db	00h
??:01E4 00                       1713   	db	00h
??:01E5 60                       1714   	db	060h
??:01E6 00                       1715   	db	00h
??:01E7 02                       1716   	db	02h
??:01E8 80                       1717   	db	080h
??:01E9 00                       1718   	db	00h
??:01EA 0C                       1719   	db	0ch
??:01EB 00                       1720   	db	00h
??:01EC 00                       1721   	db	00h
??:01ED 60                       1722   	db	060h
??:01EE 00                       1723   	db	00h
??:01EF 02                       1724   	db	02h
??:01F0 FF                       1725   	db	0ffh
??:01F1 FF                       1726   	db	0ffh
??:01F2 FF                       1727   	db	0ffh
??:01F3 FF                       1728   	db	0ffh
??:01F4 FF                       1729   	db	0ffh
??:01F5 FF                       1730   	db	0ffh
??:01F6 FF                       1731   	db	0ffh
??:01F7 FE                       1732   	db	0feh
                                 1733   
  --------------------------     1734   	rseg $$TABcross$main
??:0000                          1735   _cross :
??:0000 01                       1736   	db	01h
??:0001 0F                       1737   	db	0fh
??:0002 01                       1738   	db	01h
??:0003 FF                       1739   	db	0ffh
??:0004 00                       1740   	db	00h
??:0005 01                       1741   	db	01h
??:0006 01                       1742   	db	01h
??:0007 0D                       1743   	db	0dh
??:0008 01                       1744   	db	01h
??:0009 01                       1745   	db	01h
??:000A FF                       1746   	db	0ffh
??:000B 00                       1747   	db	00h
??:000C 02                       1748   	db	02h
??:000D 01                       1749   	db	01h
??:000E 0B                       1750   	db	0bh
??:000F 01                       1751   	db	01h
??:0010 02                       1752   	db	02h
??:0011 FF                       1753   	db	0ffh
??:0012 00                       1754   	db	00h
??:0013 03                       1755   	db	03h
??:0014 01                       1756   	db	01h
??:0015 09                       1757   	db	09h
??:0016 01                       1758   	db	01h
??:0017 03                       1759   	db	03h
??:0018 FF                       1760   	db	0ffh
??:0019 00                       1761   	db	00h
??:001A 04                       1762   	db	04h
??:001B 01                       1763   	db	01h
??:001C 07                       1764   	db	07h
??:001D 01                       1765   	db	01h
??:001E 04                       1766   	db	04h
??:001F FF                       1767   	db	0ffh
??:0020 00                       1768   	db	00h
??:0021 05                       1769   	db	05h
??:0022 01                       1770   	db	01h
??:0023 05                       1771   	db	05h
??:0024 01                       1772   	db	01h
??:0025 05                       1773   	db	05h
??:0026 FF                       1774   	db	0ffh
??:0027 00                       1775   	db	00h
??:0028 06                       1776   	db	06h
??:0029 01                       1777   	db	01h
??:002A 03                       1778   	db	03h
??:002B 01                       1779   	db	01h
??:002C 06                       1780   	db	06h
??:002D FF                       1781   	db	0ffh
??:002E 00                       1782   	db	00h
??:002F 07                       1783   	db	07h
??:0030 01                       1784   	db	01h
??:0031 01                       1785   	db	01h
??:0032 01                       1786   	db	01h
??:0033 07                       1787   	db	07h
??:0034 FF                       1788   	db	0ffh
??:0035 00                       1789   	db	00h
??:0036 08                       1790   	db	08h
??:0037 01                       1791   	db	01h
??:0038 08                       1792   	db	08h
??:0039 FF                       1793   	db	0ffh
??:003A 00                       1794   	db	00h
??:003B 07                       1795   	db	07h
??:003C 01                       1796   	db	01h
??:003D 01                       1797   	db	01h
??:003E 01                       1798   	db	01h
??:003F 07                       1799   	db	07h
??:0040 FF                       1800   	db	0ffh
??:0041 00                       1801   	db	00h
??:0042 06                       1802   	db	06h
??:0043 01                       1803   	db	01h
??:0044 03                       1804   	db	03h
??:0045 01                       1805   	db	01h
??:0046 06                       1806   	db	06h
??:0047 FF                       1807   	db	0ffh
??:0048 00                       1808   	db	00h
??:0049 05                       1809   	db	05h
??:004A 01                       1810   	db	01h
??:004B 05                       1811   	db	05h
??:004C 01                       1812   	db	01h
??:004D 05                       1813   	db	05h
??:004E FF                       1814   	db	0ffh
??:004F 00                       1815   	db	00h
??:0050 04                       1816   	db	04h
??:0051 01                       1817   	db	01h
??:0052 07                       1818   	db	07h
??:0053 01                       1819   	db	01h
??:0054 04                       1820   	db	04h
??:0055 FF                       1821   	db	0ffh
??:0056 00                       1822   	db	00h
??:0057 03                       1823   	db	03h
??:0058 01                       1824   	db	01h
??:0059 09                       1825   	db	09h
??:005A 01                       1826   	db	01h
??:005B 03                       1827   	db	03h
??:005C FF                       1828   	db	0ffh
??:005D 00                       1829   	db	00h
??:005E 02                       1830   	db	02h
??:005F 01                       1831   	db	01h
??:0060 0B                       1832   	db	0bh
??:0061 01                       1833   	db	01h
??:0062 02                       1834   	db	02h
??:0063 FF                       1835   	db	0ffh
??:0064 00                       1836   	db	00h
??:0065 01                       1837   	db	01h
??:0066 01                       1838   	db	01h
??:0067 0D                       1839   	db	0dh
??:0068 01                       1840   	db	01h
??:0069 01                       1841   	db	01h
??:006A FF                       1842   	db	0ffh
??:006B 01                       1843   	db	01h
??:006C 0F                       1844   	db	0fh
??:006D 01                       1845   	db	01h
??:006E FF                       1846   	db	0ffh
                                 1847   
  --------------------------     1848   	rseg $$TABcircle$main
??:0000                          1849   _circle :
??:0000 00                       1850   	db	00h
??:0001 06                       1851   	db	06h
??:0002 05                       1852   	db	05h
??:0003 06                       1853   	db	06h
??:0004 FF                       1854   	db	0ffh
??:0005 00                       1855   	db	00h
??:0006 03                       1856   	db	03h
??:0007 03                       1857   	db	03h
??:0008 05                       1858   	db	05h
??:0009 03                       1859   	db	03h
??:000A 03                       1860   	db	03h
??:000B FF                       1861   	db	0ffh
??:000C 00                       1862   	db	00h
??:000D 02                       1863   	db	02h
??:000E 01                       1864   	db	01h
??:000F 0B                       1865   	db	0bh
??:0010 01                       1866   	db	01h
??:0011 02                       1867   	db	02h
??:0012 FF                       1868   	db	0ffh
??:0013 00                       1869   	db	00h
??:0014 01                       1870   	db	01h
??:0015 01                       1871   	db	01h
??:0016 0D                       1872   	db	0dh
??:0017 01                       1873   	db	01h
??:0018 01                       1874   	db	01h
??:0019 FF                       1875   	db	0ffh
??:001A 00                       1876   	db	00h
??:001B 01                       1877   	db	01h
??:001C 01                       1878   	db	01h
??:001D 0D                       1879   	db	0dh
??:001E 01                       1880   	db	01h
??:001F 01                       1881   	db	01h
??:0020 FF                       1882   	db	0ffh
??:0021 00                       1883   	db	00h
??:0022 01                       1884   	db	01h
??:0023 01                       1885   	db	01h
??:0024 0D                       1886   	db	0dh
??:0025 01                       1887   	db	01h
??:0026 01                       1888   	db	01h
??:0027 FF                       1889   	db	0ffh
??:0028 01                       1890   	db	01h
??:0029 0F                       1891   	db	0fh
??:002A 01                       1892   	db	01h
??:002B FF                       1893   	db	0ffh
??:002C 01                       1894   	db	01h
??:002D 0F                       1895   	db	0fh
??:002E 01                       1896   	db	01h
??:002F FF                       1897   	db	0ffh
??:0030 01                       1898   	db	01h
??:0031 0F                       1899   	db	0fh
??:0032 01                       1900   	db	01h
??:0033 FF                       1901   	db	0ffh
??:0034 01                       1902   	db	01h
??:0035 0F                       1903   	db	0fh
??:0036 01                       1904   	db	01h
??:0037 FF                       1905   	db	0ffh
??:0038 01                       1906   	db	01h
??:0039 0F                       1907   	db	0fh
??:003A 01                       1908   	db	01h
??:003B FF                       1909   	db	0ffh
??:003C 00                       1910   	db	00h
??:003D 01                       1911   	db	01h
??:003E 01                       1912   	db	01h
??:003F 0D                       1913   	db	0dh
??:0040 01                       1914   	db	01h
??:0041 01                       1915   	db	01h
??:0042 FF                       1916   	db	0ffh
??:0043 00                       1917   	db	00h
??:0044 01                       1918   	db	01h
??:0045 01                       1919   	db	01h
??:0046 0D                       1920   	db	0dh
??:0047 01                       1921   	db	01h
??:0048 01                       1922   	db	01h
??:0049 FF                       1923   	db	0ffh
??:004A 00                       1924   	db	00h
??:004B 01                       1925   	db	01h
??:004C 01                       1926   	db	01h
??:004D 0D                       1927   	db	0dh
??:004E 01                       1928   	db	01h
??:004F 01                       1929   	db	01h
??:0050 FF                       1930   	db	0ffh
??:0051 00                       1931   	db	00h
??:0052 02                       1932   	db	02h
??:0053 01                       1933   	db	01h
??:0054 0B                       1934   	db	0bh
??:0055 01                       1935   	db	01h
??:0056 02                       1936   	db	02h
??:0057 FF                       1937   	db	0ffh
??:0058 00                       1938   	db	00h
??:0059 03                       1939   	db	03h
??:005A 03                       1940   	db	03h
??:005B 05                       1941   	db	05h
??:005C 03                       1942   	db	03h
??:005D 03                       1943   	db	03h
??:005E FF                       1944   	db	0ffh
??:005F 00                       1945   	db	00h
??:0060 06                       1946   	db	06h
??:0061 05                       1947   	db	05h
??:0062 06                       1948   	db	06h
??:0063 FF                       1949   	db	0ffh
                                 1950   	extrn code : __imodu8lw
                                 1951   	extrn code : __idivu8lw
                                 1952   	extrn code : __uimodu8lw
                                 1953   	extrn code : __regpushu8lw
                                 1954   	extrn code : __regpopu8lw
                                 1955   
                                 1956   	end



  Target       : ML620906 (nX-U8/100)
  Memory Model : LARGE
  Data   Model : FAR
  ROM WINDOW   :    0H to CFFFH
  Internal RAM : D000H to EFFFH

  Errors   : 0
  Warnings : 2  (/Wrpeast)
  Lines    : 1956
